<!--
doc/src/sgml/ref/pg_receivexlog.sgml
PostgreSQL documentation
-->

<refentry id="app-pgreceivexlog">
 <refmeta>
  <refentrytitle>pg_receivexlog</refentrytitle>
  <manvolnum>1</manvolnum>
<!--
  <refmiscinfo>Application</refmiscinfo>
-->
  <refmiscinfo>アプリケーション</refmiscinfo>
 </refmeta>

 <refnamediv>
  <refname>pg_receivexlog</refname>
<!--
  <refpurpose>streams transaction logs from a <productname>PostgreSQL</productname> cluster</refpurpose>
-->
  <refpurpose><productname>PostgreSQL</productname>クラスタからトランザクションログをストリームする</refpurpose>
 </refnamediv>

 <indexterm zone="app-pgreceivexlog">
  <primary>pg_receivexlog</primary>
 </indexterm>

 <refsynopsisdiv>
  <cmdsynopsis>
   <command>pg_receivexlog</command>
   <arg rep="repeat"><replaceable>option</></arg>
  </cmdsynopsis>
 </refsynopsisdiv>

 <refsect1>
  <title>
<!--
   Description
-->
説明
  </title>
  <para>
<!--
   <application>pg_receivexlog</application> is used to stream transaction log
   from a running <productname>PostgreSQL</productname> cluster. The transaction
   log is streamed using the streaming replication protocol, and is written
   to a local directory of files. This directory can be used as the archive
   location for doing a restore using point-in-time recovery (see
   <xref linkend="continuous-archiving">).
-->
<application>pg_receivexlog</application>は実行中の<productname>PostgreSQL</productname>クラスタからトランザクションログをストリームするために使用されます。
トランザクションログはストリーミングレプリケーションプロトコルを使用してストリームされ、ローカルディレクトリのファイルとして書き出されます。
このディレクトリはポイントインタイムリカバリ（<xref linkend="continuous-archiving">参照）を用いてリストアする際のアーカイブ場所として使用することができます。
  </para>

  <para>
<!--
   <application>pg_receivexlog</application> streams the transaction
   log in real time as it's being generated on the server, and does not wait
   for segments to complete like <xref linkend="guc-archive-command"> does.
   For this reason, it is not necessary to set
   <xref linkend="guc-archive-timeout"> when using
    <application>pg_receivexlog</application>.
-->
<application>pg_receivexlog</application>はトランザクションログをサーバで生成された時と同じ時刻にストリームし、<xref linkend="guc-archive-command">のようにセグメントが完了するまで待機することはありません。
このため、<application>pg_receivexlog</application>を使用する場合には<xref linkend="guc-archive-timeout">を設定する必要はありません。
  </para>

  <para>
<!--
   The transaction log is streamed over a regular
   <productname>PostgreSQL</productname> connection, and uses the replication
   protocol. The connection must be made with a superuser or a user
   having <literal>REPLICATION</literal> permissions (see
   <xref linkend="role-attributes">), and <filename>pg_hba.conf</filename>
   must explicitly permit the replication connection. The server must also be
   configured with <xref linkend="guc-max-wal-senders"> set high enough to
   leave at least one session available for the stream.
-->
トランザクションログは通常の<productname>PostgreSQL</productname>接続を経由して、そしてレプリケーションプロトコルを使用して、ストリームされます。
この接続はスーパーユーザまたは<literal>REPLICATION</literal>権限（<xref linkend="role-attributes">参照）を持つユーザで確立されなければなりません。
そして<filename>pg_hba.conf</filename>で明示的にレプリケーション用の接続を許可しなければなりません。
またサーバではストリーム用に利用できるセッションが少なくとも１つ存在できるために<xref linkend="guc-max-wal-senders">を十分大きく設定しなければなりません。
  </para>

  <para>
<!--
   If the connection is lost, or if it cannot be initially established,
   with a non-fatal error, <application>pg_receivexlog</application> will
   retry the connection indefinitely, and reestablish streaming as soon
   as possible. To avoid this behavior, use the <literal>-n</literal>
   parameter.
-->
接続が失われた場合、または、致命的ではないエラーで初期確立ができなかった場合、<application>pg_receivexlog</application>は無期限に接続を再試行しできるだけ早くストリーミングを再確立します。
この動作を止めるためには<literal>-n</literal>パラメータを使用してください。
  </para>
 </refsect1>

 <refsect1>
<!--
  <title>Options</title>
-->
  <title>オプション</title>

   <para>
<!--
    The following command-line options control the location and format of the
    output.
-->
以下のコマンドラインオプションにより格納場所や出力書式を制御します。
    <variablelist>
     <varlistentry>
      <term><option>-D <replaceable class="parameter">directory</replaceable></option></term>
      <term><option>--directory=<replaceable class="parameter">directory</replaceable></option></term>
      <listitem>
       <para>
<!--
        Directory to write the output to.
-->
出力を書き出すディレクトリです。
       </para>
       <para>
<!--
        This parameter is required.
-->
このパラメータは必須です。
       </para>
      </listitem>
     </varlistentry>
    </variablelist>
   </para>
   <para>
<!--
    The following command-line options control the running of the program.
-->
以下のコマンドラインオプションはプログラムの実行を制御します。

    <variablelist>
     <varlistentry>
      <term><option>-n</option></term>
      <term><option>--no-loop</option></term>
      <listitem>
       <para>
<!--
        Don't loop on connection errors. Instead, exit right away with
        an error.
-->
接続エラー時に繰り返しません。
代わりにエラーですぐに終了します。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-v</option></term>
      <term><option>--verbose</option></term>
      <listitem>
       <para>
<!--
        Enables verbose mode.
-->
冗長モードを有効にします。
       </para>
      </listitem>
     </varlistentry>

    </variablelist>
   </para>

   <para>
<!--
    The following command-line options control the database connection parameters.
-->
以下のコマンドラインオプションはデータベース接続パラメータを制御します。

    <variablelist>
     <varlistentry>
      <term><option>-d <replaceable class="parameter">connstr</replaceable></option></term>
      <term><option>--dbname=<replaceable class="parameter">connstr</replaceable></option></term>
      <listitem>
       <para>
<!--
        Specifies parameters used to connect to the server, as a connection
        string. See <xref linkend="libpq-connstring"> for more information.
-->
サーバに接続するために使用するパラメータを、接続文字列として指定します。
詳細については<xref linkend="libpq-connstring">を参照してください。
       </para>
       <para>
<!--
        The option is called <literal>&#045;-dbname</> for consistency with other
        client applications, but because <application>pg_receivexlog</application>
        doesn't connect to any particular database in the cluster, database
        name in the connection string will be ignored.
-->
<literal>--dbname</>という名前のオプションは他のクライアントアプリケーションとの整合性のために付けられました。
しかし、<application>pg_receivexlog</application>はクラスタ内の何らかの特定のデータベースに接続しませんので、接続文字列内のデータベース名は無視されます。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-h <replaceable class="parameter">host</replaceable></option></term>
      <term><option>--host=<replaceable class="parameter">host</replaceable></option></term>
      <listitem>
       <para>
<!--
        Specifies the host name of the machine on which the server is
        running.  If the value begins with a slash, it is used as the
        directory for the Unix domain socket. The default is taken
        from the <envar>PGHOST</envar> environment variable, if set,
        else a Unix domain socket connection is attempted.
-->
サーバが稼働しているマシンのホスト名を指定します。
名前がスラッシュから始まる場合、Unixドメインソケット用のディレクトリとして使用されます。
デフォルトは<envar>PGHOST</envar>環境変数が設定されていればその値から取られ、設定されていない場合はUnixドメインソケット接続が試行されます。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-p <replaceable class="parameter">port</replaceable></option></term>
      <term><option>--port=<replaceable class="parameter">port</replaceable></option></term>
      <listitem>
       <para>
<!--
        Specifies the TCP port or local Unix domain socket file
        extension on which the server is listening for connections.
        Defaults to the <envar>PGPORT</envar> environment variable, if
        set, or a compiled-in default.
-->
サーバが接続を待ち受けるTCPポートまたはUnixドメインソケットファイルの拡張子を指定します
デフォルトは<envar>PGPORT</envar>環境変数が指定されていればその値から取られ、設定されていない場合はコンパイル時のデフォルト値から取られます。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-s <replaceable class="parameter">interval</replaceable></option></term>
      <term><option>--status-interval=<replaceable class="parameter">interval</replaceable></option></term>
      <listitem>
       <para>
<!--
        Specifies the number of seconds between status packets sent back to the
        server. This allows for easier monitoring of the progress from server.
        A value of zero disables the periodic status updates completely,
        although an update will still be sent when requested by the server, to
        avoid timeout disconnect. The default value is 10 seconds.
-->
サーバに状態パケットを返答する期間を秒単位で指定します。
これによりサーバからより簡単に進行状況を監視することができます。
ゼロという値は状態の定期的な更新を完全に無効にします。
しかし時間切れによる切断を防ぐために、サーバから要求された時には更新を送信します。
デフォルト値は１０秒です。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-U <replaceable>username</replaceable></option></term>
      <term><option>--username=<replaceable class="parameter">username</replaceable></option></term>
      <listitem>
       <para>
<!--
        User name to connect as.
-->
接続するユーザ名です。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-w</></term>
      <term><option>--no-password</></term>
      <listitem>
       <para>
<!--
        Never issue a password prompt.  If the server requires
        password authentication and a password is not available by
        other means such as a <filename>.pgpass</filename> file, the
        connection attempt will fail.  This option can be useful in
        batch jobs and scripts where no user is present to enter a
        password.
-->
パスワード入力を促しません。
サーバがパスワード認証を必要とし、かつ、<filename>.pgpass</filename>ファイルなど他の手段でパスワードが入手できない場合、接続試行は失敗します。
このオプションは、パスワードを入力するユーザが存在しないバッチジョブやスクリプトで有用になります。
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-W</option></term>
      <term><option>--password</option></term>
      <listitem>
       <para>
<!--
        Force <application>pg_receivexlog</application> to prompt for a
        password before connecting to a database.
-->
<application>pg_receivexlog</application>はデータベースに接続する前にパスワード入力を強制的に促します。
       </para>

       <para>
<!--
        This option is never essential, since
        <application>pg_receivexlog</application> will automatically prompt
        for a password if the server demands password authentication.
        However, <application>pg_receivexlog</application> will waste a
        connection attempt finding out that the server wants a password.
        In some cases it is worth typing <option>-W</> to avoid the extra
        connection attempt.
-->
このオプションは重要ではありません。
<application>pg_receivexlog</application>は、サーバがパスワード認証を要求した場合に自動的にパスワードを促すためです。
しかし<application>pg_receivexlog</application>は、サーバがパスワードを要求するかどうかを確認するために接続試行を浪費します。
<option>-W</>と入力して無駄な接続試行を防止することが有意である場合があります。
       </Para>
      </listitem>
     </varlistentry>
    </variablelist>
   </para>

   <para>
<!--
    Other options are also available:
-->
以下のこの他のオプションも使用することができます。

    <variablelist>
     <varlistentry>
       <term><option>-V</></term>
       <term><option>--version</></term>
       <listitem>
       <para>
<!--
       Print the <application>pg_receivexlog</application> version and exit.
-->
<application>pg_receivexlog</application>のバージョンを表示し、終了します。
       </para>
       </listitem>
     </varlistentry>

     <varlistentry>
       <term><option>-?</></term>
       <term><option>--help</></term>
       <listitem>
       <para>
<!--
       Show help about <application>pg_receivexlog</application> command line
       arguments, and exit.
-->
<application>pg_receivexlog</application>コマンドライン引数についてのヘルプを表示し、終了します。
       </para>
       </listitem>
     </varlistentry>

    </variablelist>
   </para>

 </refsect1>

 <refsect1>
<!--
  <title>Environment</title>
-->
  <title>環境</title>

  <para>
<!--
   This utility, like most other <productname>PostgreSQL</> utilities,
   uses the environment variables supported by <application>libpq</>
   (see <xref linkend="libpq-envars">).
-->
他のほとんどの<productname>PostgreSQL</>ユーティリティと同様、このユーティリティは<application>libpq</>でサポートされる環境変数（<xref linkend="libpq-envars">参照）を使用します。
  </para>

 </refsect1>

 <refsect1>
<!--
  <title>Notes</title>
-->
  <title>注釈</title>

  <para>
<!--
   When using <application>pg_receivexlog</application> instead of
   <xref linkend="guc-archive-command">, the server will continue to
   recycle transaction log files even if the backups are not properly
   archived, since there is no command that fails. This can be worked
   around by having an <xref linkend="guc-archive-command"> that fails
   when the file has not been properly archived yet, for example:
-->
<xref linkend="guc-archive-command">の代わりに<application>pg_receivexlog</application>を使用する場合、
サーバは、バックアップが適切に保管されていない場合であっても、失敗するコマンドが存在しないため、トランザクションログの再回収を継続します。
これは、ファイルがまだ適切に保管できない場合に失敗する<xref linkend="guc-archive-command">を持たせることで回避することができます。
以下に例を示します。
<programlisting>
archive_command = 'sleep 5 &amp;&amp; test -f /mnt/server/archivedir/%f'
</programlisting>
<!--
   The initial timeout is necessary because
   <application>pg_receivexlog</application> works using asynchronous
   replication and can therefore be slightly behind the master.
-->
始めの待ち時間は、<application>pg_receivexlog</application>が非同期レプリケーションを使用して動作し、そのためマスタからわずかに遅れる可能性があるため、必要です。
  </para>

 </refsect1>

 <refsect1>
<!--
  <title>Examples</title>
-->
  <title>例</title>

  <para>
<!--
   To stream the transaction log from the server at
   <literal>mydbserver</literal> and store it in the local directory
   <filename>/usr/local/pgsql/archive</filename>:
-->
トランザクションログを<literal>mydbserver</literal>サーバからストリームし、それを<filename>/usr/local/pgsql/archive</filename>ローカルディレクトリに格納させます。
<screen>
<prompt>$</prompt> <userinput>pg_receivexlog -h mydbserver -D /usr/local/pgsql/archive</userinput>
</screen></para>
 </refsect1>

 <refsect1>
<!--
  <title>See Also</title>
-->
  <title>関連項目</title>

  <simplelist type="inline">
   <member><xref linkend="APP-PGBASEBACKUP"></member>
  </simplelist>
 </refsect1>

</refentry>
