<!-- doc/src/sgml/pageinspect.sgml -->

<sect1 id="pageinspect" xreflabel="pageinspect">
 <title>pageinspect</title>

 <indexterm zone="pageinspect">
  <primary>pageinspect</primary>
 </indexterm>

 <para>
<!--
  The <filename>pageinspect</> module provides functions that allow you to
  inspect the contents of database pages at a low level, which is useful for
  debugging purposes.  All of these functions may be used only by superusers.
-->
<filename>pageinspect</>モジュールは、デバッグの際に有用となる低レベルなデータベースページの内容を調べることができる関数を提供します。
これらの関数はすべて、スーパーユーザのみが使用することができます。
 </para>

 <sect2>
<!--
  <title>Functions</title>
-->
  <title>関数</title>

  <variablelist>
   <varlistentry>
    <term>
     <function>get_raw_page(relname text, fork text, blkno int) returns bytea</function>
     <indexterm>
      <primary>get_raw_page</primary>
     </indexterm>
    </term>

    <listitem>
     <para>
<!--
      <function>get_raw_page</function> reads the specified block of the named
      relation and returns a copy as a <type>bytea</> value.  This allows a
      single time-consistent copy of the block to be obtained.
      <replaceable>fork</replaceable> should be <literal>'main'</literal> for
      the main data fork, <literal>'fsm'</literal> for the free space map,
      <literal>'vm'</literal> for the visibility map, or <literal>'init'</literal>
      for the initialization fork.
-->
<function>get_raw_page</function>は、指定されたリレーションの指定されたブロックを読み取り、<type>bytea</>値としてそのコピーを返します。
これにより、単一ブロックの時間的に一貫性を持つコピーを入手することができます。
<replaceable>fork</replaceable>は、主データフォークでは<literal>'main'</literal>、空き領域マップでは<literal>'fsm'</literal>、可視性マップでは<literal>'vm'</literal>、初期化フォークでは<literal>'init'</literal>としなければなりません。
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term>
     <function>get_raw_page(relname text, blkno int) returns bytea</function>
    </term>

    <listitem>
     <para>
<!--
      A shorthand version of <function>get_raw_page</function>, for reading
      from the main fork.  Equivalent to
      <literal>get_raw_page(relname, 'main', blkno)</literal>
-->
<function>get_raw_page</function>の簡略形であり、主フォークから読み取ります。
<literal>get_raw_page(relname, 'main', blkno)</literal>と同じです。
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term>
     <function>page_header(page bytea) returns record</function>
     <indexterm>
      <primary>page_header</primary>
     </indexterm>
    </term>

    <listitem>
     <para>
<!--
      <function>page_header</function> shows fields that are common to all
      <productname>PostgreSQL</> heap and index pages.
-->
<function>page_header</function>は、すべての<productname>PostgreSQL</>ヒープとインデックスページで共通するフィールドを表示します。
     </para>

     <para>
<!--
      A page image obtained with <function>get_raw_page</function> should be
      passed as argument.  For example:
-->
<function>get_raw_page</function>で得られたページイメージを引数として渡さなければなりません。
以下に例を示します。
<screen>
test=# SELECT * FROM page_header(get_raw_page('pg_class', 0));
    lsn    | checksum | flags  | lower | upper | special | pagesize | version | prune_xid
-----------+----------+--------+-------+-------+---------+----------+---------+-----------
 0/24A1B50 |        1 |      1 |   232 |   368 |    8192 |     8192 |       4 |         0
</screen>
<!--
      The returned columns correspond to the fields in the
      <structname>PageHeaderData</> struct.
      See <filename>src/include/storage/bufpage.h</> for details.
-->
返却される列は、<structname>PageHeaderData</>構造体のフィールドに対応します。
詳細は<filename>src/include/storage/bufpage.h</>を参照してください。
    </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term>
     <function>heap_page_items(page bytea) returns setof record</function>
     <indexterm>
      <primary>heap_page_items</primary>
     </indexterm>
    </term>

    <listitem>
     <para>
<!--
      <function>heap_page_items</function> shows all line pointers on a heap
      page.  For those line pointers that are in use, tuple headers are also
      shown. All tuples are shown, whether or not the tuples were visible to
      an MVCC snapshot at the time the raw page was copied.
-->
<function>heap_page_items</function>はヒープページ上の行ポインタをすべて表示します。
使用中の行ポインタでは、タプルヘッダも表示されます。
生ページがコピーされた時点のMVCCスナップショットでタプルが可視かどうかは関係なく、すべてのタプルが表示されます。
     </para>
     <para>
<!--
      A heap page image obtained with <function>get_raw_page</function> should
      be passed as argument.  For example:
-->
<function>get_raw_page</function>で得られたヒープページイメージを引数として渡さなければなりません。
以下に例を示します。
<screen>
test=# SELECT * FROM heap_page_items(get_raw_page('pg_class', 0));
</screen>
<!--
      See <filename>src/include/storage/itemid.h</> and
      <filename>src/include/access/htup_details.h</> for explanations of the fields
      returned.
-->
返却されるフィールドの説明については、<filename>src/include/storage/itemid.h</>および<filename>src/include/access/htup_details.h</>を参照してください。
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term>
     <function>bt_metap(relname text) returns record</function>
     <indexterm>
      <primary>bt_metap</primary>
     </indexterm>
    </term>

    <listitem>
     <para>
<!--
      <function>bt_metap</function> returns information about a B-tree
      index's metapage.  For example:
-->
<function>bt_metap</function>はB-treeインデックスのメタページに関する情報を返却します。
以下に例を示します。
<screen>
test=# SELECT * FROM bt_metap('pg_cast_oid_index');
-[ RECORD 1 ]-----
magic     | 340322
version   | 2
root      | 1
level     | 0
fastroot  | 1
fastlevel | 0
</screen>
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term>
     <function>bt_page_stats(relname text, blkno int) returns record</function>
     <indexterm>
      <primary>bt_page_stats</primary>
     </indexterm>
    </term>

    <listitem>
     <para>
<!--
      <function>bt_page_stats</function> returns summary information about
      single pages of B-tree indexes.  For example:
-->
<function>bt_page_stats</function>は、B-treeインデックスの個別のページについての要約情報を返却します。
以下に例を示します。
<screen>
test=# SELECT * FROM bt_page_stats('pg_cast_oid_index', 1);
-[ RECORD 1 ]-+-----
blkno         | 1
type          | l
live_items    | 256
dead_items    | 0
avg_item_size | 12
page_size     | 8192
free_size     | 4056
btpo_prev     | 0
btpo_next     | 0
btpo          | 0
btpo_flags    | 3
</screen>
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term>
     <function>bt_page_items(relname text, blkno int) returns setof record</function>
     <indexterm>
      <primary>bt_page_items</primary>
     </indexterm>
    </term>

    <listitem>
     <para>
<!--
      <function>bt_page_items</function> returns detailed information about
      all of the items on a B-tree index page.  For example:
-->
<function>bt_page_items</function>は、B-treeインデックスページ上の全項目についての詳細情報を返却します。
以下に例を示します。
<screen>
test=# SELECT * FROM bt_page_items('pg_cast_oid_index', 1);
 itemoffset |  ctid   | itemlen | nulls | vars |    data
------------+---------+---------+-------+------+-------------
          1 | (0,1)   |      12 | f     | f    | 23 27 00 00
          2 | (0,2)   |      12 | f     | f    | 24 27 00 00
          3 | (0,3)   |      12 | f     | f    | 25 27 00 00
          4 | (0,4)   |      12 | f     | f    | 26 27 00 00
          5 | (0,5)   |      12 | f     | f    | 27 27 00 00
          6 | (0,6)   |      12 | f     | f    | 28 27 00 00
          7 | (0,7)   |      12 | f     | f    | 29 27 00 00
          8 | (0,8)   |      12 | f     | f    | 2a 27 00 00
</screen>
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term>
     <function>fsm_page_contents(page bytea) returns text</function>
     <indexterm>
      <primary>fsm_page_contents</primary>
     </indexterm>
    </term>

    <listitem>
     <para>
<!--
      <function>fsm_page_contents</function> shows the internal node structure
      of a FSM page. The output is a multiline string, with one line per
      node in the binary tree within the page. Only those nodes that are not
      zero are printed. The so-called "next" pointer, which points to the
      next slot to be returned from the page, is also printed.
-->
<function>fsm_page_contents</function>は、FSMページの内部ノード構造を表示します。
出力は複数行からなる文字列で、各行がページ内のバイナリツリー（二分木）の1ノードを表します。
それらのノードのうち、非ゼロのノードのみが出力されます。
そのページから返される次のスロットを指し示すための"next（次）"と呼ばれるポインタも出力されます。
     </para>
     <para>
<!--
      See <filename>src/backend/storage/freespace/README</> for more
      information on the structure of an FSM page.
-->
FSMページの構造に関する更に詳しい情報は、<filename>src/backend/storage/freespace/README</>を参照してください。
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </sect2>

</sect1>
