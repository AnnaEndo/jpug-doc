<!-- doc/src/sgml/datetime.sgml -->

 <appendix id="datetime-appendix">
<!--
  <title>Date/Time Support</title>
-->
  <title>日付/時刻のサポート</title>

  <para>
<!--
   <productname>PostgreSQL</productname> uses an internal heuristic
   parser for all date/time input support. Dates and times are input as
   strings, and are broken up into distinct fields with a preliminary
   determination of what kind of information can be in the
   field. Each field is interpreted and either assigned a numeric
   value, ignored, or rejected.
   The parser contains internal lookup tables for all textual fields,
   including months, days of the week, and time zones.
-->
<productname>PostgreSQL</productname>は、全ての日付/時刻入力のサポートにおいて、内蔵しているヒューリスティックなパーサを使用します。
日付と時刻は文字列で入力され、そのフィールドにはどのような種類の情報が入るのかが事前に決められている別個のフィールドに分割されます。
それぞれのフィールドは解釈された後、数値を割り当てられたり、無視されたり、あるいははねられたりします。
構文解析に際し、月、曜日、および時間帯を含む、テキストフィールドすべてに対する内部参照テーブルがあります。
  </para>

  <para>
<!--
   This appendix includes information on the content of these
   lookup tables and describes the steps used by the parser to decode
   dates and times.
-->
この付録ではこれらの参照テーブルの内容についての情報と構文解析で日付と時刻を解読する手順を説明します。
  </para>

  <sect1 id="datetime-input-rules">
<!--
   <title>Date/Time Input Interpretation</title>
-->
   <title>日付/時刻入力の解釈</title>

   <para>
<!--
    The date/time type inputs are all decoded using the following procedure.
-->
日付/時刻データ型は全て以下の手順で解読されます。
   </para>

   <procedure>
    <step>
     <para>
<!--
      Break the input string into tokens and categorize each token as
      a string, time, time zone, or number.
-->
入力文字列をトークンに分割し、そしてそれぞれのトークンを文字列、時刻、時間帯、または数値というように分類します。
     </para>

     <substeps>
      <step>
       <para>
<!--
        If the numeric token contains a colon (<literal>:</>), this is
        a time string. Include all subsequent digits and colons.
-->
数値トークンにコロン（<literal>:</>）が含まれている場合は、時刻文字列です。
そこに続く全ての数字とコロンを含みます。
       </para>
      </step>

      <step>
       <para>
<!--
        If the numeric token contains a dash (<literal>-</>), slash
        (<literal>/</>), or two or more dots (<literal>.</>), this is
        a date string which might have a text month.  If a date token has
        already been seen, it is instead interpreted as a time zone
        name (e.g., <literal>America/New_York</>).
-->
数値トークンにハイフン（<literal>-</>）、スラッシュ（<literal>/</>）、または2つ以上のドット（<literal>.</>）が含まれている場合は、テキストの月名がある日付文字列です。
日付トークンがすでに現れている場合は代わりに、時間帯名として解釈されます（例えば<literal>America/New_York</>）。
       </para>
      </step>

      <step>
       <para>
<!--
        If the token is numeric only, then it is either a single field
        or an ISO 8601 concatenated date (e.g.,
        <literal>19990113</literal> for January 13, 1999) or time
        (e.g., <literal>141516</literal> for 14:15:16).
-->
トークンが数値だけの場合、それは単項、もしくはISO 8601の連結形式の日付（例：1999年1月13日を示す<literal>19990113</literal>）、あるいは時刻（例：14:15:16を示す<literal>141516</literal>）のいずれかです。
       </para>
      </step>

      <step>
       <para>
<!--
        If the token starts with a plus (<literal>+</>) or minus
        (<literal>-</>), then it is either a numeric time zone or a special
        field.
-->
トークンがプラス記号（<literal>+</>）あるいはマイナス記号（<literal>-</>）で始まっている場合は、数値形式の時間帯フィールドか特殊なフィールドです。
       </para>
      </step>
     </substeps>
    </step>

    <step>
     <para>
<!--
      If the token is a text string, match up with possible strings:
-->
もしトークンがテキスト文字列の場合、以下のように可能性のある文字列と照合されます。
     </para>

     <substeps>
      <step>
       <para>
<!--
        Do a binary-search table lookup for the token as a time zone
        abbreviation.
-->
時間帯短縮形としてトークンをテーブルからバイナリ検索します。
       </para>
      </step>

      <step>
       <para>
<!--
        If not found, do a similar binary-search table lookup to match
        the token as either a special string (e.g., <literal>today</literal>),
        day (e.g., <literal>Thursday</literal>),
        month (e.g., <literal>January</literal>),
        or noise word (e.g., <literal>at</literal>, <literal>on</literal>).
-->
探索できなかった場合は同様にそのトークンに対し特殊文字（たとえば<literal>today</literal>）、曜日（たとえば<literal>Thursday</literal>）、月（たとえば<literal>January</literal>）、ノイズ（たとえば<literal>at</literal>、<literal>on</literal>）に一致するかどうか、参照テーブルにバイナリ検索をかけます。
       </para>
      </step>

      <step>
       <para>
<!--
        If still not found, throw an error.
-->
それでも探し出せなかった場合、エラーを返します。
       </para>
      </step>
     </substeps>
    </step>

    <step>
     <para>
<!--
      When the token is a number or number field:
-->
トークンが数値あるいは数値フィールドの場合を以下に示します。
     </para>

     <substeps>
      <step>
       <para>
<!--
        If there are eight or six digits,
        and if no other date fields have been previously read, then interpret
        as a <quote>concatenated date</quote> (e.g.,
        <literal>19990118</literal> or <literal>990118</literal>).
        The interpretation is <literal>YYYYMMDD</> or <literal>YYMMDD</>.
-->
トークンが8桁または6桁、かつ、以前に他のどのような日付フィールドも読まれていない場合は、<quote>連結された日付</quote>（例えば、<literal>19990118</literal>または<literal>990118</literal>）として解釈されます。
その解釈方法は<literal>YYYYMMDD</>または<literal>YYMMDD</>です。
       </para>
      </step>

      <step>
       <para>
<!--
        If the token is three digits
        and a year has already been read, then interpret as day of year.
-->
もしトークンが3桁で年が既に読み込まれている場合は年内の経過日数と解釈されます。
       </para>
      </step>

      <step>
       <para>
<!--
        If four or six digits and a year has already been read, then
        interpret as a time (<literal>HHMM</> or <literal>HHMMSS</>).
-->
4桁または6桁の場合で年が既に読み込まれている時は時刻（<literal>HHMM</>または<literal>HHMMSS</>）と解釈されます。
       </para>
      </step>

      <step>
       <para>
<!--
        If three or more digits and no date fields have yet been found,
        interpret as a year (this forces yy-mm-dd ordering of the remaining
        date fields).
-->
3桁以上の場合、かつ、どの日付フィールドもまだ見つかっていない場合は年と解釈されます
（この場合、残る日付フィールドの順序は強制的にyy-mm-ddと解釈されます）。
       </para>
      </step>

      <step>
       <para>
<!--
        Otherwise the date field ordering is assumed to follow the
        <varname>DateStyle</> setting: mm-dd-yy, dd-mm-yy, or yy-mm-dd.
        Throw an error if a month or day field is found to be out of range.
-->
さもなければ、日付フィールドの順序は、<varname>DateStyle</>の設定mm-dd-yy、dd-mm-yy、yy-mm-ddに従うものと仮定されます。
月や月内の日のフィールドが範囲外であれば、エラーになります。
       </para>
      </step>
     </substeps>
    </step>

    <step>
     <para>
<!--
      If BC has been specified, negate the year and add one for
      internal storage.  (There is no year zero in the Gregorian
      calendar, so numerically 1 BC becomes year zero.)
-->
もしBCが指定された場合は内部格納用に年を負の数にして1を加えます
（グレゴリオ暦にはゼロ年がないので、数値的には1BC（紀元前1年）がゼロ年になります）。
     </para>
    </step>

    <step>
     <para>
<!--
      If BC was not specified, and if the year field was two digits in length,
      then adjust the year to four digits. If the field is less than 70, then
      add 2000, otherwise add 1900.
-->
BCが指定されず年フィールドの長さが2桁の場合、年は4桁になるよう調整されます。
そのフィールドが70未満の場合は2000が加えられますが、その他の場合には1900が加えられます。

      <tip>
       <para>
<!--
        Gregorian years AD 1-99 can be entered by using 4 digits with leading
        zeros (e.g., <literal>0099</> is AD 99).
-->
（例えば、西暦99年を<literal>0099</>のように）グレゴリオ暦の西暦元年から99年までは、ゼロを前に付加して4桁で入力することができます。
       </para>
      </tip>
     </para>
    </step>
   </procedure>
  </sect1>


  <sect1 id="datetime-keywords">
<!--
   <title>Date/Time Key Words</title>
-->
   <title>日付/時刻キーワード</title>

   <para>
<!--
    <xref linkend="datetime-month-table"> shows the tokens that are
    recognized as names of months.
-->
<xref linkend="datetime-month-table">に月名として認識されるトークンを示します。
   </para>

    <table id="datetime-month-table">
<!--
     <title>Month Names</title>
-->
<title>月名</title>
     <tgroup cols="2">
      <thead>
       <row>
<!--
        <entry>Month</entry>
        <entry>Abbreviations</entry>
-->
        <entry>月</entry>
        <entry>簡略形</entry>
       </row>
      </thead>
      <tbody>
       <row>
        <entry>January</entry>
        <entry>Jan</entry>
       </row>
       <row>
        <entry>February</entry>
        <entry>Feb</entry>
       </row>
       <row>
        <entry>March</entry>
        <entry>Mar</entry>
       </row>
       <row>
        <entry>April</entry>
        <entry>Apr</entry>
       </row>
       <row>
        <entry>May</entry>
        <entry></entry>
       </row>
       <row>
        <entry>June</entry>
        <entry>Jun</entry>
       </row>
       <row>
        <entry>July</entry>
        <entry>Jul</entry>
       </row>
       <row>
        <entry>August</entry>
        <entry>Aug</entry>
       </row>
       <row>
        <entry>September</entry>
<!--
        <entry>Sep, Sept</entry>
-->
        <entry>Sep、Sept</entry>
       </row>
       <row>
        <entry>October</entry>
        <entry>Oct</entry>
       </row>
       <row>
        <entry>November</entry>
        <entry>Nov</entry>
       </row>
       <row>
        <entry>December</entry>
        <entry>Dec</entry>
       </row>
      </tbody>
     </tgroup>
    </table>

    <para>
<!--
     <xref linkend="datetime-dow-table"> shows the tokens that are
     recognized as names of days of the week.
-->
<xref linkend="datetime-dow-table">に、曜日名として認識されるトークンを示します。
    </para>

     <table id="datetime-dow-table">
<!--
      <title>Day of the Week Names</title>
-->
      <title>曜日名</title>
      <tgroup cols="2">
       <thead>
        <row>
<!--
         <entry>Day</entry>
         <entry>Abbreviations</entry>
-->
         <entry>曜日</entry>
         <entry>簡略形</entry>
        </row>
       </thead>
       <tbody>
        <row>
         <entry>Sunday</entry>
         <entry>Sun</entry>
        </row>
        <row>
         <entry>Monday</entry>
         <entry>Mon</entry>
        </row>
        <row>
         <entry>Tuesday</entry>
<!--
         <entry>Tue, Tues</entry>
-->
         <entry>Tue、Tues</entry>
        </row>
        <row>
         <entry>Wednesday</entry>
<!--
         <entry>Wed, Weds</entry>
-->
         <entry>Wed、Weds</entry>
        </row>
        <row>
         <entry>Thursday</entry>
<!--
         <entry>Thu, Thur, Thurs</entry>
-->
         <entry>Thu、Thur、Thurs</entry>
        </row>
        <row>
         <entry>Friday</entry>
         <entry>Fri</entry>
        </row>
        <row>
         <entry>Saturday</entry>
         <entry>Sat</entry>
        </row>
       </tbody>
      </tgroup>
     </table>

   <para>
<!--
    <xref linkend="datetime-mod-table"> shows the tokens that serve
    various modifier purposes.
-->
<xref linkend="datetime-mod-table">に、様々な修飾子の目的を持つトークンを示します。
   </para>

    <table id="datetime-mod-table">
<!--
     <title>Date/Time Field Modifiers</title>
-->
     <title>日付/時刻フィールドの修飾子</title>
     <tgroup cols="2">
      <thead>
       <row>
<!--
        <entry>Identifier</entry>
        <entry>Description</entry>
-->
        <entry>識別子</entry>
        <entry>説明</entry>
       </row>
      </thead>
      <tbody>
       <row>
        <entry><literal>AM</literal></entry>
<!--
        <entry>Time is before 12:00</entry>
-->
        <entry>12:00以前の時刻</entry>
       </row>
       <row>
        <entry><literal>AT</literal></entry>
<!--
        <entry>Ignored</entry>
-->
        <entry>このキーワードは無視されます</entry>
       </row>
       <row>
        <entry><literal>JULIAN</>, <literal>JD</>, <literal>J</></entry>
<!--
        <entry>Next field is Julian Date</entry>
-->
        <entry>次のフィールドはユリウス日</entry>
       </row>
       <row>
        <entry><literal>ON</literal></entry>
<!--
        <entry>Ignored</entry>
-->
        <entry>このキーワードは無視されます</entry>
       </row>
       <row>
        <entry><literal>PM</literal></entry>
<!--
        <entry>Time is on or after 12:00</entry>
-->
        <entry>12:00と12:00以降の時刻</entry>
       </row>
       <row>
        <entry><literal>T</literal></entry>
<!--
        <entry>Next field is time</entry>
-->
        <entry>次のフィールドは時刻</entry>
       </row>
      </tbody>
     </tgroup>
    </table>
  </sect1>

  <sect1 id="datetime-config-files">
<!--
  <title>Date/Time Configuration Files</title>
-->
  <title>日付/時刻設定ファイル</title>

   <indexterm>
<!--
    <primary>time zone</primary>
    <secondary>input abbreviations</secondary>
-->
    <primary>時間帯</primary>
    <secondary>入力簡略形</secondary>
   </indexterm>

   <para>
<!--
    Since timezone abbreviations are not well standardized,
    <productname>PostgreSQL</productname> provides a means to customize
    the set of abbreviations accepted by the server.  The
    <xref linkend="guc-timezone-abbreviations"> run-time parameter
    determines the active set of abbreviations.  While this parameter
    can be altered by any database user, the possible values for it
    are under the control of the database administrator &mdash; they
    are in fact names of configuration files stored in
    <filename>.../share/timezonesets/</> of the installation directory.
    By adding or altering files in that directory, the administrator
    can set local policy for timezone abbreviations.
-->
時間帯省略形は十分に標準化されていませんので、<productname>PostgreSQL</productname>では、サーバで受付け可能な省略形群をカスタマイズできる仕組みを提供します。
<xref linkend="guc-timezone-abbreviations">実行時パラメータは有効な省略形群を決定します。
このパラメータはすべてのデータベースユーザで変更可能ですが、取り得る値はデータベース管理者により制御されます。
これらは実際にはインストレーションディレクトリの<filename>.../share/timezonesets/</>内の設定ファイル名です。
代替ファイルをこのディレクトリに追加することにより、管理者は時間帯省略形に対するローカルポリシーを設定することができます。
   </para>

   <para>
<!--
    <varname>timezone_abbreviations</> can be set to any file name
    found in <filename>.../share/timezonesets/</>, if the file's name
    is entirely alphabetic.  (The prohibition against non-alphabetic
    characters in <varname>timezone_abbreviations</> prevents reading
    files outside the intended directory, as well as reading editor
    backup files and other extraneous files.)
-->
<varname>timezone_abbreviations</>は、 <filename>.../share/timezonesets/</>に存在する、名前のすべてがアルファベットである任意のファイルの名前を指定することができます。
（<varname>timezone_abbreviations</>内の非アルファベット文字の禁止により、意図したディレクトリ以外のファイル読み取りを防ぐことができます。
また、バックアップファイルやその他のファイルの読み取りを防ぐこともできます。）
   </para>

   <para>
<!--
    A timezone abbreviation file can contain blank lines and comments
    beginning with <literal>#</>.  Non-comment lines must have one of
    these formats:
-->
時間帯省略形ファイルには空白行や<literal>#</>から始まるコメントを含めることができます。
コメント以外は以下の書式を持たなければなりません。

<synopsis>
<replaceable>zone_abbreviation</replaceable> <replaceable>offset</replaceable>
<replaceable>zone_abbreviation</replaceable> <replaceable>offset</replaceable> D
<replaceable>zone_abbreviation</replaceable> <replaceable>time_zone_name</replaceable>
@INCLUDE <replaceable>file_name</replaceable>
@OVERRIDE
</synopsis>
   </para>

   <para>
<!--
    A <replaceable>zone_abbreviation</replaceable> is just the abbreviation
    being defined.  The <replaceable>offset</replaceable> is the equivalent
    offset in seconds from UTC, positive being east from Greenwich and
    negative being west.  For example, -18000 would be five hours west
    of Greenwich, or North American east coast standard time.  <literal>D</>
    indicates that the zone name represents local daylight-savings time rather
    than standard time.  Alternatively, a <replaceable>time_zone_name</> can
    be given, in which case that time zone definition is consulted, and the
    abbreviation's meaning in that zone is used.  This alternative is
    recommended only for abbreviations whose meaning has historically varied,
    as looking up the meaning is noticeably more expensive than just using
    a fixed integer value.

 Since all known time zone offsets are on
    15 minute boundaries, the number of seconds has to be a multiple of 900.
-->
<replaceable>zone_abbreviation</replaceable>は単なる定義された省略形です。
<replaceable>offset</replaceable>はUTCからの相当するオフセットを秒数で表したものです。
グリニッジより東にあれば正、西にあれば負の値となります。
たとえば、-18000はグリニッジより西に5時間、すなわち、北アメリカ東海岸の標準時間を示します。
<literal>D</>は、時間帯名が標準時間ではなくローカル時間での夏時間を表すことを示します。
代わりに<replaceable>time_zone_name</>を指定することもでき、その場合には時間帯の定義が参照され、その時間帯での省略形の意味が使われます。
意味を調べるのは単に固定の整数値を使うよりかなり高価ですので、もこの代替法はその意味が歴史的に変わる省略形に対してのみ薦められます。
   </para>

   <para>
<!--
    The <literal>@INCLUDE</> syntax allows inclusion of another file in the
    <filename>.../share/timezonesets/</> directory.  Inclusion can be nested,
    to a limited depth.
-->
<literal>@INCLUDE</>構文により、<filename>.../share/timezonesets/</>ディレクトリ内の他のファイルを含有することができます。
深さに制限がありますが、入れ子に含有することができます。
   </para>

   <para>
<!--
    The <literal>@OVERRIDE</> syntax indicates that subsequent entries in the
    file can override previous entries (typically, entries obtained from
    included files).  Without this, conflicting definitions of the same
    timezone abbreviation are considered an error.
-->
<literal>@OVERRIDE</>構文は、ファイル内の続く項目が既存の項目（典型的には、インクルードされたファイルから得られた項目）を上書きできることを示します。
これがないと、同一時間帯省略形の定義が競合した場合にエラーとみなされます。
   </para>

   <para>
<!--
    In an unmodified installation, the file <filename>Default</> contains
    all the non-conflicting time zone abbreviations for most of the world.
    Additional files <filename>Australia</> and <filename>India</> are
    provided for those regions: these files first include the
    <literal>Default</> file and then add or modify abbreviations as needed.
-->
未変更のインストレーションでは、<filename>Default</>ファイルに、ほとんど全世界の競合しない時間帯省略形をすべて記載しています。
さらに<filename>Australia</>および<filename>India</>ファイルがこれらの地区向けに提供されています。
これらのファイルは<literal>Default</>ファイルの先頭で含有されています。
必要に応じて省略形の追加・変更を行ってください。
   </para>

   <para>
<!--
    For reference purposes, a standard installation also contains files
    <filename>Africa.txt</>, <filename>America.txt</>, etc, containing
    information about every time zone abbreviation known to be in use
    according to the IANA timezone database.  The zone name
    definitions found in these files can be copied and pasted into a custom
    configuration file as needed.  Note that these files cannot be directly
    referenced as <varname>timezone_abbreviations</> settings, because of
    the dot embedded in their names.
-->
参考のため、標準のインストレーションには<filename>Africa.txt</>、<filename>America.txt</>なども含まれています。
これらにはIANA時間帯データベースに従って使用されている時間帯省略形に関する情報がすべて含まれています。
これらのファイル内にある時間帯定義を必要に応じてコピーペーストして独自の設定ファイルを編集することができます。
これらのファイル名にドットが入っていますので、<varname>timezone_abbreviations</>設定から直接参照できないことに注意してください。
   </para>

   <note>
    <para>
<!--
     If an error occurs while reading the time zone abbreviation set, no new
     value is applied and the old set is kept. If the error occurs while
     starting the database, startup fails.
-->
時間帯省略形を読み込む時にエラーが発生した場合、新しい値は適用されず、古い値がそのまま残ります。
データベースの起動時にエラーが起きた場合は、起動に失敗します。
    </para>
   </note>

   <caution>
    <para>
<!--
     Time zone abbreviations defined in the configuration file override
     non-timezone meanings built into <productname>PostgreSQL</productname>.
     For example, the <filename>Australia</> configuration file defines
     <literal>SAT</> (for South Australian Standard Time).  When this
     file is active, <literal>SAT</> will not be recognized as an abbreviation
     for Saturday.
-->
設定ファイル内で定義される時間帯省略形は、<productname>PostgreSQL</productname>に組み込み済みの時間帯以外の意味も変更します。
たとえば、<filename>Australia</>設定ファイルでは<literal>SAT</>（南オーストラリア標準時間）を定義しています。
このファイルが有効な場合、<literal>SAT</>は土曜の省略形として認識されなくなります。
    </para>
   </caution>

   <caution>
    <para>
<!--
     If you modify files in <filename>.../share/timezonesets/</>,
     it is up to you to make backups &mdash; a normal database dump
     will not include this directory.
-->
<filename>.../share/timezonesets/</>を変更する時にバックアップを責任を持って行ってください。
このディレクトリは通常のデータベースダンプに含まれません。
    </para>
   </caution>

  </sect1>

  <sect1 id="datetime-units-history">
<!--
  <title>History of Units</title>
-->
  <title>単位の歴史</title>

  <indexterm zone="datetime-units-history">
<!--
   <primary>Gregorian calendar</primary>
-->
   <primary>グレゴリオ暦</primary>
  </indexterm>
  <indexterm zone="datetime-units-history">
<!--
   <primary>Julian date</primary>
-->
   <primary>ユリウス日</primary>
  </indexterm>

  <para>
<!--
   The SQL standard states that <quote>Within the definition of a
   <quote>datetime literal</quote>, the <quote>datetime
   values</quote> are constrained by the natural rules for dates and
   times according to the Gregorian calendar</quote>.
   <productname>PostgreSQL</> follows the SQL
   standard's lead by counting dates exclusively in the Gregorian
   calendar, even for years before that calendar was in use.
   This rule is known as the <firstterm>proleptic Gregorian calendar</>.
-->
標準SQLでは、「<quote>日付時刻リテラル</quote>定義の中で、<quote>日付時刻の値</quote>はグレゴリオ暦に従った日付と時間の自然法則に則る」と明記されています。
<productname>PostgreSQL</>は標準SQLの指針に従い、グレゴリオ暦が使われる以前の年に対してもグレゴリオ暦で日付を数えます。
この規則は<firstterm>先発グレゴリオ暦</>として知られています。
  </para>

  <para>
<!--
   The Julian calendar was introduced by Julius Caesar in 45 BC.
   It was in common use in the Western world
   until the year 1582, when countries started changing to the Gregorian
   calendar.  In the Julian calendar, the tropical year is
   approximated as 365 1/4 days = 365.25 days. This gives an error of
   about 1 day in 128 years.
-->
ユリウス暦は、紀元前45年にユリウス・カエサル（Julius Caesar）によって広められたものです。
西欧でグレゴリオ暦への移行が開始された1582年まで一般的に使用されていました。
ユリウス暦では、太陽年は365日+1/4日=365.25日と概算されます。
この暦では、128年で約1日のずれが生じます。
  </para>

  <para>
<!--
   The accumulating calendar error prompted
   Pope Gregory XIII to reform the calendar in accordance with
   instructions from the Council of Trent.
   In the Gregorian calendar, the tropical year is approximated as
   365 + 97 / 400 days = 365.2425 days. Thus it takes approximately 3300
   years for the tropical year to shift one day with respect to the
   Gregorian calendar.
-->
ローマ教皇グレゴリウス13世（Gregory XIII）はトレントの公会議（Council of Trent）の勧告に従って累積していた暦のずれを修正しました。
グレゴリオ暦では、太陽年は365+97/400日=365.2425日と近似されます。
したがって、グレゴリオ暦で太陽年が1日ずれるにはおよそ3,300年を要します。
  </para>

  <para>
<!--
   The approximation 365+97/400 is achieved by having 97 leap years
   every 400 years, using the following rules:
-->
365+97/400という近似は、下記の規則に従って400年間に97回のうるう年を設けることによって得られています。

   <simplelist>
    <member>
<!--
     Every year divisible by 4 is a leap year.
-->
4で割り切れる年を、うるう年にする。
    </member>
    <member>
<!--
     However, every year divisible by 100 is not a leap year.
-->
ただし、100で割り切れる年は、うるう年にしない。
    </member>
    <member>
<!--
     However, every year divisible by 400 is a leap year after all.
-->
ただし、400で割り切れる年は、結局うるう年とする。
    </member>
   </simplelist>

<!--
   So, 1700, 1800, 1900, 2100, and 2200 are not leap years. But 1600,
   2000, and 2400 are leap years.
-->
したがって、1700、1800、1900、2100、2200はうるう年ではありませんが、2000、2400はうるう年です。

<!--
   By contrast, in the older Julian calendar all years divisible by 4 are leap
   years.
-->
それに比べ、古いユリウス暦では4で割り切れる年のみがうるう年でした。
  </para>

  <para>
<!--
   The papal bull of February 1582 decreed that 10 days should be dropped
   from October 1582 so that 15 October should follow immediately after
   4 October.
   This was observed in Italy, Poland, Portugal, and Spain. Other Catholic
   countries followed shortly after, but Protestant countries were
   reluctant to change, and the Greek Orthodox countries didn't change
   until the start of the 20th century.

   The reform was observed by Great Britain and its dominions (including what
   is now the USA) in 1752.
   Thus 2 September 1752 was followed by 14 September 1752.

   This is why Unix systems have the <command>cal</command> program
   produce the following:
-->
1582年2月の教皇勅書は、1582年の10月から10日間除外することを命じ、したがって10月4日の翌日を10月15日としました。
この慣行はイタリア、ポーランド、ポルトガル、スペインで遵守されました。
他のカトリックの国々もすぐ後に追従しましたが、プロテスタントの国々は変更を嫌がり、ギリシャ正教を信奉する国々は20世紀の初めまで変更を行いませんでした。
1752年に大英帝国とその自治領（現在のアメリカ合衆国を含む）でもその改革は行われました。
したがって、1752年9月2日の次は1752年9月14日となっています。
このような理由から、Unixシステムで<command>cal</command>プログラムを実行すると、下記のような結果になります。

<screen>
$ <userinput>cal 9 1752</userinput>
   September 1752
 S  M Tu  W Th  F  S
       1  2 14 15 16
17 18 19 20 21 22 23
24 25 26 27 28 29 30
</screen>

<!--
   But, of course, this calendar is only valid for Great Britain and
   dominions, not other places.
   Since it would be difficult and confusing to try to track the actual
   calendars that were in use in various places at various times,
   <productname>PostgreSQL</> does not try, but rather follows the Gregorian
   calendar rules for all dates, even though this method is not historically
   accurate.
-->
しかし、当然、この暦は大英帝国とその自治領でのみ有効なものであり、他の場所ではそうではありません。
様々な場所で様々な時代に使われていた実際の暦を追いかけることは難しく、また、混乱することになるでしょうから、<productname>PostgreSQL</>は追いかけることはせず、この方法が歴史的に正確でなくても日付すべてでグレゴリオ暦の規則に従います。
  </para>

  <para>
<!--
   Different calendars have been developed in various parts of the
   world, many predating the Gregorian system.

   For example,
   the beginnings of the Chinese calendar can be traced back to the 14th
   century BC. Legend has it that the Emperor Huangdi invented that
   calendar in 2637 BC.

   The People's Republic of China uses the Gregorian calendar
   for civil purposes. The Chinese calendar is used for determining
   festivals.
-->
グレゴリオ暦が開発されるより前から、様々な暦が世界の多くの地域で開発されました。
例えば、中国暦のルーツは紀元前14世紀まで遡ることができますし、伝説では、黄帝が紀元前2637年にこの暦を発明したとされています。
中華人民共和国では、公的な目的ではグレゴリオ暦を使用していますが、祝祭日の決定には中国暦を使用します。
  </para>

  <para>
<!--
   The <firstterm>Julian Date</firstterm> system is another type of
   calendar, unrelated to the Julian calendar though it is confusingly
   named similarly to that calendar.
   The Julian Date system was invented by the French scholar
   Joseph Justus Scaliger (1540-1609)
   and probably takes its name from Scaliger's father,
   the Italian scholar Julius Caesar Scaliger (1484-1558).
   In the Julian Date system, each day has a sequential number, starting
   from JD 0 (which is sometimes called <emphasis>the</> Julian Date).
   JD 0 corresponds to 1 January 4713 BC in the Julian calendar, or
   24 November 4714 BC in the Gregorian calendar.  Julian Date counting
   is most often used by astronomers for labeling their nightly observations,
   and therefore a date runs from noon UTC to the next noon UTC, rather than
   from midnight to midnight: JD 0 designates the 24 hours from noon UTC on
   24 November 4714 BC to noon UTC on 25 November 4714 BC.
-->
<firstterm>ユリウス日</firstterm>は別の種類の暦であり、名前が似ていて混乱しますが、ユリウス暦とは関係ありません。
ユリウス日は、フランスの学者Joseph Justus Scaliger（1540-1609）によって発明され、おそらくこの語源は彼の父であるイタリアの学者、Julius Caesar Scaliger（1484-1558）からの引用と考えられます。
ユリウス日システムでは、JD 0（よく<emphasis>いわゆる</>ユリウス日と呼ばれます）から始まる日は連番です。
JD 0はユリウス暦の紀元前4713年1月1日、またはグレゴリオ暦の紀元前4714年11月24日に対応します。
ユリウス日の数え方は、天文学者が夜間の観測にラベルを付けるためにより良く使用されました。
このため、深夜0時から深夜0時までではなく、UTC正午から次のUTC正午までが1日でした。
JD 0は紀元前4714年11月24日のUTC正午から紀元前4714年11月25日のUTC正午までの24時間であると明示されています。
  </para>

  <para>
<!--
   Although <productname>PostgreSQL</> supports Julian Date notation for
   input and output of dates (and also uses Julian dates for some internal
   datetime calculations), it does not observe the nicety of having dates
   run from noon to noon.  <productname>PostgreSQL</> treats a Julian Date
   as running from midnight to midnight.
-->
<productname>PostgreSQL</>は日付の入出力においてユリウス日記法を（および、一部の日付時間間隔の計算においてユリウス日を）サポートしますが、正午から正午までという微妙な日付の数え方を守っていません。
<productname>PostgreSQL</>は深夜0時から深夜0時までとしてユリウス日を扱います。
  </para>

 </sect1>
</appendix>
