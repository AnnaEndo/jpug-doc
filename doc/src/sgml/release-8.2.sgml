<!-- doc/src/sgml/release-8.2.sgml -->
<!-- See header comment in release.sgml about typical markup -->

 <sect1 id="release-8-2-23">
<!--
  <title>Release 8.2.23</title>
-->
  <title>リリース8.2.23</title>

  <formalpara>
<!--
  <title>Release date:</title>
-->
  <title>リリース日:</title>
  <para>2011-12-05</para>
  </formalpara>

  <para>
<!--
   This release contains a variety of fixes from 8.2.22.
   For information about new features in the 8.2 major release, see
   <xref linkend="release-8-2"/>.
<<<<<<< HEAD
  </para>

  <para>
   This is expected to be the last <productname>PostgreSQL</productname> release
=======
-->
このリリースは8.2.22に対し、各種の不具合を修正したものです。
8.2メジャーリリースにおける新機能については<xref linkend="release-8-2"/>を参照してください。
  </para>

  <para>
<!--
   This is expected to be the last <productname>PostgreSQL</> release
>>>>>>> doc_ja_10_premerge
   in the 8.2.X series.  Users are encouraged to update to a newer
   release branch soon.
-->
これが8.2.X系列における最後の<productname>PostgreSQL</productname>リリースとなる予定です。
早めにより新しい系列のリリースに更新することを勧めます。
  </para>

  <sect2>
<!--
   <title>Migration to Version 8.2.23</title>
-->
   <title>バージョン8.2.23への移行</title>

   <para>
<!--
    A dump/restore is not required for those running 8.2.X.
-->
8.2.Xからの移行ではダンプ/リストアは不要です。
   </para>

   <para>
<!--
    However, a longstanding error was discovered in the definition of the
    <literal>information_schema.referential_constraints</literal> view.  If you
    rely on correct results from that view, you should replace its
    definition as explained in the first changelog item below.
-->
しかしながら、<literal>information_schema.referential_constraints</literal>ビュー定義において長期に渡って潜在したエラーが見つかりました。
このビューからの正確な結果に依存している場合、後述の変更点の最初で説明する通りその定義を置き換えなければなりません。
   </para>

   <para>
<!--
    Also, if you are upgrading from a version earlier than 8.2.14,
    see <xref linkend="release-8-2-14"/>.
<<<<<<< HEAD
=======
-->
また、8.2.14以前のバージョンからアップデートする場合は<xref linkend="release-8-2-14"/>を参照してください。
>>>>>>> doc_ja_10_premerge
   </para>

  </sect2>

  <sect2>
<!--
   <title>Changes</title>
-->
   <title>変更点</title>

   <itemizedlist>

    <listitem>
     <para>
<<<<<<< HEAD
      Fix bugs in <literal>information_schema.referential_constraints</literal> view
=======
<!--
      Fix bugs in <literal>information_schema.referential_constraints</> view
>>>>>>> doc_ja_10_premerge
      (Tom Lane)
-->
<literal>information_schema.referential_constraints</literal>ビューの不具合を修正しました。(Tom Lane)
     </para>

     <para>
<!--
      This view was being insufficiently careful about matching the
      foreign-key constraint to the depended-on primary or unique key
      constraint.  That could result in failure to show a foreign key
      constraint at all, or showing it multiple times, or claiming that it
      depends on a different constraint than the one it really does.
-->
このビューでは、外部キーと依存する主キーまたは一意キー制約との対応付けについて十分な注意を行っていませんでした。
このため、外部キー制約がまったく表示されない、何回も表示される、あるいは、実際の依存する制約とは異なる制約に依存するものと言い張るという結果になることがありました。
     </para>

     <para>
<<<<<<< HEAD
      Since the view definition is installed by <application>initdb</application>,
      merely upgrading will not fix the problem.  If you need to fix this
      in an existing installation, you can (as a superuser) drop the
      <literal>information_schema</literal> schema then re-create it by sourcing
      <filename><replaceable>SHAREDIR</replaceable>/information_schema.sql</filename>.
      (Run <literal>pg_config --sharedir</literal> if you're uncertain where
      <replaceable>SHAREDIR</replaceable> is.)  This must be repeated in each database
=======
<!--
      Since the view definition is installed by <application>initdb</>,
      merely upgrading will not fix the problem.  If you need to fix this
      in an existing installation, you can (as a superuser) drop the
      <literal>information_schema</> schema then re-create it by sourcing
      <filename><replaceable>SHAREDIR</>/information_schema.sql</filename>.
      (Run <literal>pg_config &#045;-sharedir</> if you're uncertain where
      <replaceable>SHAREDIR</> is.)  This must be repeated in each database
>>>>>>> doc_ja_10_premerge
      to be fixed.
-->
このビュー定義は<application>initdb</application>によってインストールされますので、ただアップグレードしただけでは問題は解消されません。
既存のインストレーションでこの問題を解消させなければならない場合、（スーパーユーザとして）<literal>information_schema</literal>スキーマを削除して、<filename><replaceable>SHAREDIR</replaceable>/information_schema.sql</filename>を元に再作成することができます。
（<replaceable>SHAREDIR</replaceable>の場所が分からない場合は<literal>pg_config --sharedir</literal>を実行してください。）
これは修正対象のデータベースそれぞれで繰り返さなければなりません。
     </para>
    </listitem>

    <listitem>
     <para>
<!--
      Fix TOAST-related data corruption during <literal>CREATE TABLE dest AS
      SELECT * FROM src</literal> or <literal>INSERT INTO dest SELECT * FROM src</literal>
      (Tom Lane)
-->
<literal>CREATE TABLE dest AS SELECT * FROM src</literal>または<literal>INSERT INTO dest SELECT * FROM src</literal>時のTOAST関連のデータの破損を修正しました。(Tom Lane)
     </para>

     <para>
<<<<<<< HEAD
      If a table has been modified by <command>ALTER TABLE ADD COLUMN</command>,
=======
<!--
      If a table has been modified by <command>ALTER TABLE ADD COLUMN</>,
>>>>>>> doc_ja_10_premerge
      attempts to copy its data verbatim to another table could produce
      corrupt results in certain corner cases.
      The problem can only manifest in this precise form in 8.4 and later,
      but we patched earlier versions as well in case there are other code
      paths that could trigger the same bug.
-->
テーブルが<command>ALTER TABLE ADD COLUMN</command>によって変更された場合、データを逐語的に別のテーブルにコピーしようとした時に特定の境界条件で破損した結果になることがありました。
この問題は、8.4以降において、この構文においてのみ明確に発生し得たものですが、同じ不具合を引き起こす他のコードパスがある場合に備えて、より過去のバージョンにおいてもパッチを適用しました。
     </para>
    </listitem>

    <listitem>
     <para>
<!--
      Fix race condition during toast table access from stale syscache entries
      (Tom Lane)
-->
無効なsyscache項目からTOASTテーブルにアクセスする時の競合条件を修正しました。(Tom Lane)
     </para>

     <para>
<!--
      The typical symptom was transient errors like <quote>missing chunk
      number 0 for toast value NNNNN in pg_toast_2619</quote>, where the cited
      toast table would always belong to a system catalog.
-->
典型的な兆候は、<quote>missing chunk number 0 for toast value NNNNN in pg_toast_2619</quote>のような一時的なエラーです。
ここで挙げられるTOASTテーブルは常にシステムカタログに属します。
     </para>
    </listitem>

    <listitem>
     <para>
<<<<<<< HEAD
      Improve locale support in <type>money</type> type's input and output
=======
<!--
      Improve locale support in <type>money</> type's input and output
>>>>>>> doc_ja_10_premerge
      (Tom Lane)
-->
<type>money</type>型の入出力におけるロケールのサポートを改良しました。(Tom Lane)
     </para>

     <para>
<!--
      Aside from not supporting all standard
      <link linkend="guc-lc-monetary"><varname>lc_monetary</varname></link>
      formatting options, the input and output functions were inconsistent,
      meaning there were locales in which dumped <type>money</type> values could
      not be re-read.
-->
すべての標準<link linkend="guc-lc-monetary"><varname>lc_monetary</varname></link>書式付けオプションをサポートしていないという点以外にも、入力関数と出力関数に一貫性がなかったため、ダンプされた<type>money</type>値では再度読み取ることができないロケールがありました。
     </para>
    </listitem>

    <listitem>
     <para>
<!--
      Don't let <link
      linkend="guc-transform-null-equals"><varname>transform_null_equals</varname></link>
      affect <literal>CASE foo WHEN NULL ...</literal> constructs
      (Heikki Linnakangas)
-->
<link linkend="guc-transform-null-equals"><varname>transform_null_equals</varname></link>が<literal>CASE foo WHEN NULL ...</literal>式に影響を与えないようにしました。(Heikki Linnakangas)
     </para>

     <para>
<<<<<<< HEAD
      <varname>transform_null_equals</varname> is only supposed to affect
      <literal>foo = NULL</literal> expressions written directly by the user, not
      equality checks generated internally by this form of <literal>CASE</literal>.
=======
<!--
      <varname>transform_null_equals</> is only supposed to affect
      <literal>foo = NULL</> expressions written directly by the user, not
      equality checks generated internally by this form of <literal>CASE</>.
-->
<varname>transform_null_equals</varname>は、<literal>CASE</literal>構文によって内部的に生成された等価な検査ではなく、直接ユーザによって書かれた<literal>foo = NULL</literal>に影響を与えることのみを前提としています。
>>>>>>> doc_ja_10_premerge
     </para>
    </listitem>

    <listitem>
     <para>
<!--
      Change foreign-key trigger creation order to better support
      self-referential foreign keys (Tom Lane)
-->
自己参照外部キーをより良くサポートするために、外部キートリガの生成順序を変更しました。(Tom Lane)
     </para>

     <para>
<!--
      For a cascading foreign key that references its own table, a row update
      will fire both the <literal>ON UPDATE</literal> trigger and the
      <literal>CHECK</literal> trigger as one event.  The <literal>ON UPDATE</literal>
      trigger must execute first, else the <literal>CHECK</literal> will check a
      non-final state of the row and possibly throw an inappropriate error.
      However, the firing order of these triggers is determined by their
      names, which generally sort in creation order since the triggers have
      auto-generated names following the convention
      <quote>RI_ConstraintTrigger_NNNN</quote>.  A proper fix would require
      modifying that convention, which we will do in 9.2, but it seems risky
      to change it in existing releases.  So this patch just changes the
      creation order of the triggers.  Users encountering this type of error
      should drop and re-create the foreign key constraint to get its
      triggers into the right order.
-->
カスケードしている外部キーが自身のテーブルを参照する場合、１行の更新が１つのイベントで<literal>ON UPDATE</literal>トリガと<literal>CHECK</literal>トリガの両方を発行します。
<literal>ON UPDATE</literal>トリガを最初に実行しなければなりません。
そうしないと、<literal>CHECK</literal>は最終的ではない行の状態を検査することになり、不適切なエラーが発生する可能性があります。
しかしこれらのトリガの発行順序はその名前によって決まります。
トリガは<quote>RI_ConstraintTrigger_NNNN</quote>という規約に従った名前で自動生成されますので、一般的には作成順序によって決まります。
適切な修正にはこの規約の変更が必要です。
9.2で変更する予定ですが、既存のリリースで変更することには危険があるように思われます。
このため、このパッチはトリガの作成順序を変更するだけです。
この種のエラーが起きたユーザは、トリガを正しい順序にするために、外部キー制約を削除し再作成しなければなりません。
     </para>
    </listitem>

    <listitem>
     <para>
<<<<<<< HEAD
      Preserve blank lines within commands in <application>psql</application>'s command
=======
<!--
      Preserve blank lines within commands in <application>psql</>'s command
>>>>>>> doc_ja_10_premerge
      history (Robert Haas)
-->
<application>psql</application>のコマンド履歴内で空行を含むコマンドを保持します。(Robert Haas)
     </para>

     <para>
<!--
      The former behavior could cause problems if an empty line was removed
      from within a string literal, for example.
-->
これまでの動作では、例えば文字列リテラル内の空行が削除された場合に問題が起きました。
     </para>
    </listitem>

    <listitem>
     <para>
<<<<<<< HEAD
      Use the preferred version of <application>xsubpp</application> to build PL/Perl,
=======
<!--
      Use the preferred version of <application>xsubpp</> to build PL/Perl,
>>>>>>> doc_ja_10_premerge
      not necessarily the operating system's main copy
      (David Wheeler and Alex Hunsaker)
-->
PL/Perlの構築時に好みのバージョンの<application>xsubpp</application>を使用します。
オペレーティングシステムのメインコピーである必要はありません。(David Wheeler、Alex Hunsaker)
     </para>
    </listitem>

    <listitem>
     <para>
<<<<<<< HEAD
      Honor query cancel interrupts promptly in <function>pgstatindex()</function>
=======
<!--
      Honor query cancel interrupts promptly in <function>pgstatindex()</>
>>>>>>> doc_ja_10_premerge
      (Robert Haas)
-->
<function>pgstatindex()</function>において問い合わせキャンセル割込みを適切に受け付けます。(Robert Haas)
     </para>
    </listitem>

    <listitem>
     <para>
<!--
      Ensure VPATH builds properly install all server header files
      (Peter Eisentraut)
-->
VPATH構築ですべてのサーバヘッダファイルが適切にインストールされることを確実にしました。(Peter Eisentraut)
     </para>
    </listitem>

    <listitem>
     <para>
<!--
      Shorten file names reported in verbose error messages (Peter Eisentraut)
-->
冗長エラーメッセージ内で報告されるファイル名を短くしました。(Peter Eisentraut)
     </para>

     <para>
<!--
      Regular builds have always reported just the name of the C file
      containing the error message call, but VPATH builds formerly
      reported an absolute path name.
-->
通常の構築では常にCファイルの名前だけがエラーメッセージ呼び出しの中で報告されました。
しかしこれまでVPATH構築では絶対パス名が報告されました。
     </para>
    </listitem>

    <listitem>
     <para>
<!--
      Fix interpretation of Windows timezone names for Central America
      (Tom Lane)
-->
中央アメリカ用のWindowsの時間帯名の解釈を修正しました。(Tom Lane)
     </para>

     <para>
<<<<<<< HEAD
      Map <quote>Central America Standard Time</quote> to <literal>CST6</literal>, not
      <literal>CST6CDT</literal>, because DST is generally not observed anywhere in
=======
<!--
      Map <quote>Central America Standard Time</> to <literal>CST6</>, not
      <literal>CST6CDT</>, because DST is generally not observed anywhere in
>>>>>>> doc_ja_10_premerge
      Central America.
-->
通常中央アメリカではまったく夏時間が認められませんので、<quote>Central America Standard Time</quote>を<literal>CST6CDT</literal>ではなく<literal>CST6</literal>に対応付けしました。
     </para>
    </listitem>

    <listitem>
     <para>
<<<<<<< HEAD
      Update time zone data files to <application>tzdata</application> release 2011n
=======
<!--
      Update time zone data files to <application>tzdata</> release 2011n
>>>>>>> doc_ja_10_premerge
      for DST law changes in Brazil, Cuba, Fiji, Palestine, Russia, and Samoa;
      also historical corrections for Alaska and British East Africa.
-->
時間帯データファイルを<application>tzdata</application> release 2011nに更新しました。
ブラジル、キューバ、フィジー、パレスチナ、ロシア、サモアにおける夏時間規則の変更、アラスカ、イギリス領東アフリカの歴史的な修正が含まれています。
     </para>
    </listitem>

   </itemizedlist>

  </sect2>
 </sect1>

 <sect1 id="release-8-2-22">
<!--
  <title>Release 8.2.22</title>
-->
  <title>リリース8.2.22</title>

  <formalpara>
<!--
  <title>Release date:</title>
-->
  <title>リリース日:</title>
  <para>2011-09-26</para>
  </formalpara>

  <para>
<!--
   This release contains a variety of fixes from 8.2.21.
   For information about new features in the 8.2 major release, see
   <xref linkend="release-8-2"/>.
<<<<<<< HEAD
  </para>

  <para>
   The <productname>PostgreSQL</productname> community will stop releasing updates
=======
-->
このリリースは8.2.21に対し、各種の不具合を修正したものです。
8.2メジャーリリースにおける新機能については<xref linkend="release-8-2"/>を参照してください。
  </para>

  <para>
<!--
   The <productname>PostgreSQL</> community will stop releasing updates
>>>>>>> doc_ja_10_premerge
   for the 8.2.X release series in December 2011.
   Users are encouraged to update to a newer release branch soon.
-->
<productname>PostgreSQL</productname>コミュニティは2011年12月に8.2.Xリリースの更新の公開を停止します。
早めにより新しいブランチへの更新を推奨します。
  </para>

  <sect2>
<!--
   <title>Migration to Version 8.2.22</title>
-->
   <title>バージョン8.2.22への移行</title>

   <para>
<!--
    A dump/restore is not required for those running 8.2.X.
    However, if you are upgrading from a version earlier than 8.2.14,
    see <xref linkend="release-8-2-14"/>.
<<<<<<< HEAD
=======
-->
8.2.Xからの移行ではダンプ/リストアは不要です。
しかしながら、8.2.14以前のバージョンからアップデートする場合は<xref linkend="release-8-2-14"/>を参照してください。
>>>>>>> doc_ja_10_premerge
   </para>

  </sect2>

  <sect2>
<!--
   <title>Changes</title>
-->
   <title>変更点</title>

   <itemizedlist>

    <listitem>
     <para>
<!--
      Fix multiple bugs in GiST index page split processing (Heikki
      Linnakangas)
-->
GiSTインデックスページ分割処理における複数の不具合を修正しました。(Heikki Linnakangas)
     </para>

     <para>
<!--
      The probability of occurrence was low, but these could lead to index
      corruption.
-->
発生する可能性は小さいのですが、インデックスの破損を招く可能性がありました。
     </para>
    </listitem>

    <listitem>
     <para>
<<<<<<< HEAD
      Avoid possibly accessing off the end of memory in <command>ANALYZE</command>
=======
<!--
      Avoid possibly accessing off the end of memory in <command>ANALYZE</>
>>>>>>> doc_ja_10_premerge
      (Noah Misch)
-->
<command>ANALYZE</command>においてメモリの最後を超えてアクセスする可能性を修正しました。(Noah Misch)
     </para>

     <para>
<!--
      This fixes a very-low-probability server crash scenario.
-->
これは非常に可能性が低いサーバクラッシュ状況を修正します。
     </para>
    </listitem>

    <listitem>
     <para>
<!--
      Fix race condition in relcache init file invalidation (Tom Lane)
-->
relcache初期ファイルの無効化における競合状態を修正しました。(Tom Lane)
     </para>

     <para>
<!--
      There was a window wherein a new backend process could read a stale init
      file but miss the inval messages that would tell it the data is stale.
      The result would be bizarre failures in catalog accesses, typically
<<<<<<< HEAD
      <quote>could not read block 0 in file ...</quote> later during startup.
=======
      <quote>could not read block 0 in file ...</> later during startup.
-->
新しいバックエンドプロセスが無効な初期ファイルを読み取ろうとするが、データが無効であることを通知するinvalメッセージを取り損なう期間がありました。
この結果カタログアクセスにおいて、起動処理の後の<quote>could not read block 0 in file ...</quote>といった奇妙な失敗が起こります。
>>>>>>> doc_ja_10_premerge
     </para>
    </listitem>

    <listitem>
     <para>
<!--
      Fix memory leak at end of a GiST index scan (Tom Lane)
-->
GiSTインデックススキャン終了時のメモリリークを修正しました。(Tom Lane)
     </para>

     <para>
<!--
      Commands that perform many separate GiST index scans, such as
      verification of a new GiST-based exclusion constraint on a table
      already containing many rows, could transiently require large amounts of
      memory due to this leak.
-->
すでに多くの行を持つテーブルに対して新たなGiSTを基にした排他制約を作成する際の検証など、多くの分割GiSTインデックススキャンを行うコマンドが一時的にこのリークの原因となる大容量のメモリを求めることがあり得ました。
     </para>
    </listitem>

    <listitem>
     <para>
<!--
      Fix performance problem when constructing a large, lossy bitmap
      (Tom Lane)
-->
大規模かつ非可逆なビットマップを構築する時の性能問題を修正しました。(Tom Lane)
     </para>
    </listitem>

    <listitem>
     <para>
<!--
      Fix array- and path-creating functions to ensure padding bytes are
      zeroes (Tom Lane)
-->
配列作成、経路作成関数のパッド用バイトを確実にゼロにするように修正しました。(Tom Lane)
     </para>

     <para>
<!--
      This avoids some situations where the planner will think that
      semantically-equal constants are not equal, resulting in poor
      optimization.
-->
これにより、プランナが意味的に等しい定数を等しくないとみなし、最適化を悪化させる一部の状況を防ぎます。
     </para>
    </listitem>

    <listitem>
     <para>
<!--
      Work around gcc 4.6.0 bug that breaks WAL replay (Tom Lane)
-->
WAL再生を壊すgcc 4.6.0の不具合を回避します。(Tom Lane)
     </para>

     <para>
<!--
      This could lead to loss of committed transactions after a server crash.
-->
サーバクラッシュ後にコミットされたトランザクションの損失をもたらす可能性がありました。
     </para>
    </listitem>

    <listitem>
     <para>
<<<<<<< HEAD
      Fix dump bug for <literal>VALUES</literal> in a view (Tom Lane)
=======
<!--
      Fix dump bug for <literal>VALUES</> in a view (Tom Lane)
-->
ビュー内の<literal>VALUES</literal>についてのダンプ不具合を修正しました。(Tom Lane)
>>>>>>> doc_ja_10_premerge
     </para>
    </listitem>

    <listitem>
     <para>
<<<<<<< HEAD
      Disallow <literal>SELECT FOR UPDATE/SHARE</literal> on sequences (Tom Lane)
=======
<!--
      Disallow <literal>SELECT FOR UPDATE/SHARE</> on sequences (Tom Lane)
-->
シーケンスに対する<literal>SELECT FOR UPDATE/SHARE</literal>を許しません。(Tom Lane)
>>>>>>> doc_ja_10_premerge
     </para>

     <para>
<!--
      This operation doesn't work as expected and can lead to failures.
-->
この操作は想定通りに動作せず、また、失敗をもたらすことがあり得ました。
     </para>
    </listitem>

    <listitem>
     <para>
<!--
      Defend against integer overflow when computing size of a hash table (Tom
      Lane)
-->
ハッシュテーブルのサイズ計算時の整数オーバーフローから保護します。(Tom Lane)
     </para>
    </listitem>

    <listitem>
     <para>
<!--
      Fix portability bugs in use of credentials control messages for
<<<<<<< HEAD
      <quote>peer</quote> authentication (Tom Lane)
=======
      <quote>peer</> authentication (Tom Lane)
-->
<quote>peer</quote>認証に関する証明書制御メッセージの使用における移植性不具合を修正しました。(Tom Lane)
>>>>>>> doc_ja_10_premerge
     </para>
    </listitem>

    <listitem>
     <para>
<<<<<<< HEAD
      Fix typo in <function>pg_srand48</function> seed initialization (Andres Freund)
=======
<!--
      Fix typo in <function>pg_srand48</> seed initialization (Andres Freund)
-->
<function>pg_srand48</function> シード初期化における記述ミスを修正しました。(Andres Freund)
>>>>>>> doc_ja_10_premerge
     </para>

     <para>
<!--
      This led to failure to use all bits of the provided seed.  This function
      is not used on most platforms (only those without <function>srandom</function>),
      and the potential security exposure from a less-random-than-expected
      seed seems minimal in any case.
-->
このため、提供されたシードの全ビットを使用すると失敗する可能性がありました。
この関数はほとんどのプラットフォームで使用されていません（<function>srandom</function>を持たないプラットフォームのみです）ので、想定よりもランダム性が小さいシードによるセキュリティ露見の可能性はとにかく最小だったと思われます。
     </para>
    </listitem>

    <listitem>
     <para>
<<<<<<< HEAD
      Avoid integer overflow when the sum of <literal>LIMIT</literal> and
      <literal>OFFSET</literal> values exceeds 2^63 (Heikki Linnakangas)
=======
<!--
      Avoid integer overflow when the sum of <literal>LIMIT</> and
      <literal>OFFSET</> values exceeds 2^63 (Heikki Linnakangas)
-->
<literal>LIMIT</literal>と<literal>OFFSET</literal>値の合計が2^63を超えた場合の整数オーバーフローを防止します。(Heikki Linnakangas)
>>>>>>> doc_ja_10_premerge
     </para>
    </listitem>

    <listitem>
     <para>
<<<<<<< HEAD
      Add overflow checks to <type>int4</type> and <type>int8</type> versions of
      <function>generate_series()</function> (Robert Haas)
=======
<!--
      Add overflow checks to <type>int4</> and <type>int8</> versions of
      <function>generate_series()</> (Robert Haas)
-->
<function>generate_series()</function>の<type>int4</type>版と<type>int8</type>版にオーバーフロー検査を追加しました。(Robert Haas)
>>>>>>> doc_ja_10_premerge
     </para>
    </listitem>

    <listitem>
     <para>
<<<<<<< HEAD
      Fix trailing-zero removal in <function>to_char()</function> (Marti Raudsepp)
     </para>

     <para>
      In a format with <literal>FM</literal> and no digit positions
=======
<!--
      Fix trailing-zero removal in <function>to_char()</> (Marti Raudsepp)
-->
<function>to_char()</function>における末尾のゼロ除去を修正しました。(Marti Raudsepp)
     </para>

     <para>
<!--
      In a format with <literal>FM</> and no digit positions
>>>>>>> doc_ja_10_premerge
      after the decimal point, zeroes to the left of the decimal point could
      be removed incorrectly.
-->
小数点の後の桁位置がない<literal>FM</literal>付きの書式において、小数点より左のゼロが正しく除去できていませんでした。
     </para>
    </listitem>

    <listitem>
     <para>
<<<<<<< HEAD
      Fix <function>pg_size_pretty()</function> to avoid overflow for inputs close to
=======
<!--
      Fix <function>pg_size_pretty()</> to avoid overflow for inputs close to
>>>>>>> doc_ja_10_premerge
      2^63 (Tom Lane)
-->
2^63近辺の入力に対するオーバーフローを防ぐように<function>pg_size_pretty()</function>を修正しました。(Tom Lane)
     </para>
    </listitem>

    <listitem>
     <para>
<<<<<<< HEAD
      Fix <application>psql</application>'s counting of script file line numbers during
      <literal>COPY</literal> from a different file (Tom Lane)
=======
<!--
      Fix <application>psql</>'s counting of script file line numbers during
      <literal>COPY</> from a different file (Tom Lane)
-->
異なるファイルから<literal>COPY</literal>している時の、<application>psql</application>のスクリプトファイル行番号の計数処理を修正しました。(Tom Lane)
>>>>>>> doc_ja_10_premerge
     </para>
    </listitem>

    <listitem>
     <para>
<<<<<<< HEAD
      Fix <application>pg_restore</application>'s direct-to-database mode for
      <varname>standard_conforming_strings</varname> (Tom Lane)
     </para>

     <para>
      <application>pg_restore</application> could emit incorrect commands when restoring
      directly to a database server from an archive file that had been made
      with <varname>standard_conforming_strings</varname> set to <literal>on</literal>.
=======
<!--
      Fix <application>pg_restore</>'s direct-to-database mode for
      <varname>standard_conforming_strings</> (Tom Lane)
-->
<varname>standard_conforming_strings</varname>に合わせて、<application>pg_restore</application>の直接データベースモードを修正しました。(Tom Lane)
     </para>

     <para>
<!--
      <application>pg_restore</> could emit incorrect commands when restoring
      directly to a database server from an archive file that had been made
      with <varname>standard_conforming_strings</> set to <literal>on</>.
-->
<application>pg_restore</application>が、<varname>standard_conforming_strings</varname>が<literal>on</literal>に設定されたアーカイブファイルからデータベースサーバに直接リストアする時に間違ったコマンドを発行する可能性がありました。
>>>>>>> doc_ja_10_premerge
     </para>
    </listitem>

    <listitem>
     <para>
<<<<<<< HEAD
      Fix write-past-buffer-end and memory leak in <application>libpq</application>'s
=======
<!--
      Fix write-past-buffer-end and memory leak in <application>libpq</>'s
>>>>>>> doc_ja_10_premerge
      LDAP service lookup code (Albe Laurenz)
-->
<application>libpq</application>のLDAPサービス検索コードにおけるwrite-past-buffer-endとメモリリークを修正しました。(Albe Laurenz)
     </para>
    </listitem>

    <listitem>
     <para>
<<<<<<< HEAD
      In <application>libpq</application>, avoid failures when using nonblocking I/O
=======
<!--
      In <application>libpq</>, avoid failures when using nonblocking I/O
>>>>>>> doc_ja_10_premerge
      and an SSL connection (Martin Pihlak, Tom Lane)
-->
<application>libpq</application>において、非ブロッキングI/OとSSL接続を使用する場合の失敗を防止します。(Martin Pihlak、Tom Lane)
     </para>
    </listitem>

    <listitem>
     <para>
<!--
      Improve libpq's handling of failures during connection startup
      (Tom Lane)
-->
libpqの接続開始期間のエラーの取扱いを改良しました。(Tom Lane)
     </para>

     <para>
<<<<<<< HEAD
      In particular, the response to a server report of <function>fork()</function>
=======
<!--
      In particular, the response to a server report of <function>fork()</>
>>>>>>> doc_ja_10_premerge
      failure during SSL connection startup is now saner.
-->
具体的には、SSL接続開始期間の<function>fork()</function>失敗についてのサーバ報告への応答がより健全になりました。
     </para>
    </listitem>

    <listitem>
     <para>
<<<<<<< HEAD
      Make <application>ecpglib</application> write <type>double</type> values with 15 digits
=======
<!--
      Make <application>ecpglib</> write <type>double</> values with 15 digits
>>>>>>> doc_ja_10_premerge
      precision (Akira Kurosawa)
-->
<application>ecpglib</application>が<type>double</type>値を15桁の精度で書き込むようにしました。(Akira Kurosawa)
     </para>
    </listitem>

    <listitem>
     <para>
<!--
      Apply upstream fix for blowfish signed-character bug (CVE-2011-2483)
      (Tom Lane)
-->
blowfishの符号付き文字に関する不具合(CVE-2011-2483)に対する上流の修正を適用しました。(Tom Lane)
     </para>

     <para>
<<<<<<< HEAD
      <filename>contrib/pg_crypto</filename>'s blowfish encryption code could give
=======
<!--
      <filename>contrib/pg_crypto</>'s blowfish encryption code could give
>>>>>>> doc_ja_10_premerge
      wrong results on platforms where char is signed (which is most),
      leading to encrypted passwords being weaker than they should be.
-->
<filename>contrib/pg_crypto</filename>のblowfish暗号化コードは、charが符号付きであるプラットフォーム(ほとんどのプラットフォーム)において間違った結果を生成し、暗号化されたパスワードが本来より脆弱になりました。
     </para>
    </listitem>

    <listitem>
     <para>
<<<<<<< HEAD
      Fix memory leak in <filename>contrib/seg</filename> (Heikki Linnakangas)
=======
<!--
      Fix memory leak in <filename>contrib/seg</> (Heikki Linnakangas)
-->
<filename>contrib/seg</filename>におけるメモリリークを修正しました。(Heikki Linnakangas)
>>>>>>> doc_ja_10_premerge
     </para>
    </listitem>

    <listitem>
     <para>
<<<<<<< HEAD
      Fix <function>pgstatindex()</function> to give consistent results for empty
=======
<!--
      Fix <function>pgstatindex()</> to give consistent results for empty
>>>>>>> doc_ja_10_premerge
      indexes (Tom Lane)
-->
空のインデックスに対して一貫性を持った結果を生成するように<function>pgstatindex()</function>を修正しました。(Tom Lane)
     </para>
    </listitem>

    <listitem>
     <para>
<!--
      Allow building with perl 5.14 (Alex Hunsaker)
-->
perl 5.14を用いたビルドを可能にしました。(Alex Hunsaker)
     </para>
    </listitem>

    <listitem>
     <para>
<!--
      Update configure script's method for probing existence of system
      functions (Tom Lane)
-->
システム関数の存在を検出するためのconfigureスクリプトの方法を更新しました。(Tom Lane)
     </para>

     <para>
<!--
      The version of autoconf we used in 8.3 and 8.2 could be fooled by
      compilers that perform link-time optimization.
-->
8.3と8.2で使用しているautoconfのバージョンは、リンク時の最適化を行うコンパイラによってだまされることがあり得ました。
     </para>
    </listitem>

    <listitem>
     <para>
<!--
      Fix assorted issues with build and install file paths containing spaces
      (Tom Lane)
-->
空白を含むファイルパスでのビルドとインストールに関連した問題を修正しました。(Tom Lane)
     </para>
    </listitem>

    <listitem>
     <para>
<<<<<<< HEAD
      Update time zone data files to <application>tzdata</application> release 2011i
=======
<!--
      Update time zone data files to <application>tzdata</> release 2011i
>>>>>>> doc_ja_10_premerge
      for DST law changes in Canada, Egypt, Russia, Samoa, and South Sudan.
-->
時間帯データファイルを<application>tzdata</application> release 2011iに更新しました。
カナダ、エジプト、ロシア、サモア、南スーダンにおける夏時間規則の変更が含まれています。
     </para>
    </listitem>

   </itemizedlist>

  </sect2>
 </sect1>

 <sect1 id="release-8-2-21">
<!--
  <title>Release 8.2.21</title>
-->
  <title>リリース8.2.21</title>

  <formalpara>
<!--
  <title>Release date:</title>
-->
  <title>リリース日:</title>
  <para>2011-04-18</para>
  </formalpara>

  <para>
<!--
   This release contains a variety of fixes from 8.2.20.
   For information about new features in the 8.2 major release, see
   <xref linkend="release-8-2"/>.
<<<<<<< HEAD
=======
-->
このリリースは8.2.20に対し、各種の不具合を修正したものです。
8.2メジャーリリースにおける新機能については<xref linkend="release-8-2"/>を参照してください。
>>>>>>> doc_ja_10_premerge
  </para>

  <sect2>
<!--
   <title>Migration to Version 8.2.21</title>
-->
   <title>バージョン8.2.21への移行</title>

   <para>
<!--
    A dump/restore is not required for those running 8.2.X.
    However, if you are upgrading from a version earlier than 8.2.14,
    see <xref linkend="release-8-2-14"/>.
<<<<<<< HEAD
=======
-->
8.2.Xからの移行ではダンプ/リストアは不要です。
しかしながら、8.2.14以前のバージョンからアップデートする場合は<xref linkend="release-8-2-14"/>を参照してください。
>>>>>>> doc_ja_10_premerge
   </para>

  </sect2>

  <sect2>
<!--
   <title>Changes</title>
-->
   <title>変更点</title>

   <itemizedlist>

    <listitem>
     <para>
<!--
      Avoid potential deadlock during catalog cache initialization
      (Nikhil Sontakke)
-->
カタログキャッシュの初期化中のデッドロックの可能性を取り除きました。(Nikhil Sontakke)
     </para>

     <para>
<!--
      In some cases the cache loading code would acquire share lock on a
      system index before locking the index's catalog.  This could deadlock
      against processes trying to acquire exclusive locks in the other,
      more standard order.
-->
一部のキャッシュを読み取るコードが、インデックスのカタログをロックする前にシステムインデックスに対して共有ロックを獲得する場合がありました。
これは他でより標準的な順序で排他ロックを獲得しようとする処理とデッドロックする可能性がありました。
     </para>
    </listitem>

    <listitem>
     <para>
<<<<<<< HEAD
      Fix dangling-pointer problem in <literal>BEFORE ROW UPDATE</literal> trigger
=======
<!--
      Fix dangling-pointer problem in <literal>BEFORE ROW UPDATE</> trigger
>>>>>>> doc_ja_10_premerge
      handling when there was a concurrent update to the target tuple
      (Tom Lane)
-->
対象タプルに対する同時更新があった時の<literal>BEFORE ROW UPDATE</literal>トリガ処理における、不正な領域を指し示すポインタ問題を修正しました。(Tom Lane)
     </para>

     <para>
<!--
      This bug has been observed to result in intermittent <quote>cannot
      extract system attribute from virtual tuple</quote> failures while trying to
      do <literal>UPDATE RETURNING ctid</literal>.  There is a very small probability
      of more serious errors, such as generating incorrect index entries for
      the updated tuple.
-->
この不具合は、<literal>UPDATE RETURNING ctid</literal>を実行しようとした時に、断続的に<quote>cannot extract system attribute from virtual tuple</quote>で失敗するという結果で気付きました。
更新したタプルに対して不正なインデックス項目が生成されてしまうなど、より深刻なエラーとなる可能性がごくわずかながら存在します。
     </para>
    </listitem>

    <listitem>
     <para>
<<<<<<< HEAD
      Disallow <command>DROP TABLE</command> when there are pending deferred trigger
=======
<!--
      Disallow <command>DROP TABLE</> when there are pending deferred trigger
>>>>>>> doc_ja_10_premerge
      events for the table (Tom Lane)
-->
遅延トリガイベントを待たせているテーブルに対する<command>DROP TABLE</command>を許可しません。(Tom Lane)
     </para>

     <para>
<<<<<<< HEAD
      Formerly the <command>DROP</command> would go through, leading to
      <quote>could not open relation with OID nnn</quote> errors when the
=======
<!--
      Formerly the <command>DROP</> would go through, leading to
      <quote>could not open relation with OID nnn</> errors when the
>>>>>>> doc_ja_10_premerge
      triggers were eventually fired.
-->
以前は<command>DROP</command>が進み、トリガが最終的に発行された時に<quote>could not open relation with OID nnn</quote>エラーをもたらしました。
     </para>
    </listitem>

    <listitem>
     <para>
<!--
      Fix PL/Python memory leak involving array slices (Daniel Popowich)
-->
PL/Pythonの部分配列化に関するメモリリークを修正しました。(Daniel Popowich)
     </para>
    </listitem>

    <listitem>
     <para>
<<<<<<< HEAD
      Fix <application>pg_restore</application> to cope with long lines (over 1KB) in
=======
<!--
      Fix <application>pg_restore</> to cope with long lines (over 1KB) in
>>>>>>> doc_ja_10_premerge
      TOC files (Tom Lane)
-->
TOCファイル内の（1KB以上の）長い行に対処するように<application>pg_restore</application>を修正しました。(Tom Lane)
     </para>
    </listitem>

    <listitem>
     <para>
<!--
      Put in more safeguards against crashing due to division-by-zero
      with overly enthusiastic compiler optimization (Aurelien Jarno)
-->
コンパイラの過度に積極的な最適化によるゼロ除算が原因のクラッシュに対して、より多くの対策を取りました。(Aurelien Jarno)
     </para>
    </listitem>

    <listitem>
     <para>
<!--
      Support use of dlopen() in FreeBSD and OpenBSD on MIPS (Tom Lane)
-->
MIPS上のFreeBSDとOpenBSDでdlopen()の使用をサポートしました。(Tom Lane)
     </para>

     <para>
<!--
      There was a hard-wired assumption that this system function was not
      available on MIPS hardware on these systems.  Use a compile-time test
      instead, since more recent versions have it.
-->
これらのシステムではこのシステム関数はMIPSハードウェアで利用できないという仮定を直接書き込んだコードがありました。
より最近のバージョンでは利用できますので、コンパイル時の試験を使用するように変更しました。
     </para>
    </listitem>

    <listitem>
     <para>
<!--
      Fix compilation failures on HP-UX (Heikki Linnakangas)
-->
HP-UXにおけるコンパイル失敗を修正しました。(Heikki Linnakangas)
     </para>
    </listitem>

    <listitem>
     <para>
<<<<<<< HEAD
      Fix path separator used by <application>pg_regress</application> on Cygwin
=======
<!--
      Fix path separator used by <application>pg_regress</> on Cygwin
>>>>>>> doc_ja_10_premerge
      (Andrew Dunstan)
-->
Cygwinにおいて<application>pg_regress</application>で使用されるパス区切り文字を修正しました。(Andrew Dunstan)
     </para>
    </listitem>

    <listitem>
     <para>
<<<<<<< HEAD
      Update time zone data files to <application>tzdata</application> release 2011f
=======
<!--
      Update time zone data files to <application>tzdata</> release 2011f
>>>>>>> doc_ja_10_premerge
      for DST law changes in Chile, Cuba, Falkland Islands, Morocco, Samoa,
      and Turkey; also historical corrections for South Australia, Alaska,
      and Hawaii.
-->
時間帯データファイルを<application>tzdata</application> release 2011fに更新しました。
チリ、キューバ、フォークランド諸島、モロッコ、サモア、トルコにおける夏時間規則の変更、南オーストラリア、アラスカ、ハワイの歴史的な修正が含まれています。
     </para>
    </listitem>

   </itemizedlist>

  </sect2>
 </sect1>

 <sect1 id="release-8-2-20">
<!--
  <title>Release 8.2.20</title>
-->
  <title>リリース8.2.20</title>

  <formalpara>
<!--
  <title>Release date:</title>
-->
  <title>リリース日:</title>
  <para>2011-01-31</para>
  </formalpara>

  <para>
<!--
   This release contains a variety of fixes from 8.2.19.
   For information about new features in the 8.2 major release, see
   <xref linkend="release-8-2"/>.
<<<<<<< HEAD
=======
-->
このリリースは8.2.19に対し、各種の不具合を修正したものです。
8.2メジャーリリースにおける新機能については<xref linkend="release-8-2"/>を参照してください。
>>>>>>> doc_ja_10_premerge
  </para>

  <sect2>
<!--
   <title>Migration to Version 8.2.20</title>
-->
   <title>バージョン8.2.20への移行</title>

   <para>
<!--
    A dump/restore is not required for those running 8.2.X.
    However, if you are upgrading from a version earlier than 8.2.14,
    see <xref linkend="release-8-2-14"/>.
<<<<<<< HEAD
=======
-->
8.2.Xからの移行ではダンプ/リストアは不要です。
しかしながら、8.2.14以前のバージョンからアップデートする場合は<xref linkend="release-8-2-14"/>を参照してください。
>>>>>>> doc_ja_10_premerge
   </para>

  </sect2>

  <sect2>
<!--
   <title>Changes</title>
-->
   <title>変更点</title>

   <itemizedlist>

    <listitem>
     <para>
<<<<<<< HEAD
      Avoid failures when <command>EXPLAIN</command> tries to display a simple-form
      <literal>CASE</literal> expression (Tom Lane)
     </para>

     <para>
      If the <literal>CASE</literal>'s test expression was a constant, the planner
      could simplify the <literal>CASE</literal> into a form that confused the
      expression-display code, resulting in <quote>unexpected CASE WHEN
      clause</quote> errors.
=======
<!--
      Avoid failures when <command>EXPLAIN</> tries to display a simple-form
      <literal>CASE</> expression (Tom Lane)
-->
<command>EXPLAIN</command>が<literal>CASE</literal>式の簡易構文を表示しようとした時の失敗を防止します。(Tom Lane)
     </para>

     <para>
<!--
      If the <literal>CASE</>'s test expression was a constant, the planner
      could simplify the <literal>CASE</> into a form that confused the
      expression-display code, resulting in <quote>unexpected CASE WHEN
      clause</> errors.
-->
<literal>CASE</literal>のテスト式が定数の場合、プランナは<literal>CASE</literal>を式表示用コードを混乱させる形式に単純化してしまいました。
その結果<quote>unexpected CASE WHEN clause</quote>というエラーになりました。
>>>>>>> doc_ja_10_premerge
     </para>
    </listitem>

    <listitem>
     <para>
<!--
      Fix assignment to an array slice that is before the existing range
      of subscripts (Tom Lane)
-->
過去に存在した添字範囲に対する部分配列代入を修正しました。(Tom Lane)
     </para>

     <para>
<!--
      If there was a gap between the newly added subscripts and the first
      pre-existing subscript, the code miscalculated how many entries needed
      to be copied from the old array's null bitmap, potentially leading to
      data corruption or crash.
-->
新しく追加される添字と過去に存在した添字の先頭との間に隙間があった場合、コードは古い配列のヌルビットマップからコピーしなければならない項目数を誤計算してしまい、データ破損またはクラッシュを導く可能性がありました。
     </para>
    </listitem>

    <listitem>
     <para>
<!--
      Avoid unexpected conversion overflow in planner for very distant date
      values (Tom Lane)
-->
プランナにおける、非常に時間が離れた日付値に対する想定外の変換オーバーフローを防止します。(Tom Lane)
     </para>

     <para>
<<<<<<< HEAD
      The <type>date</type> type supports a wider range of dates than can be
      represented by the <type>timestamp</type> types, but the planner assumed it
=======
<!--
      The <type>date</> type supports a wider range of dates than can be
      represented by the <type>timestamp</> types, but the planner assumed it
>>>>>>> doc_ja_10_premerge
      could always convert a date to timestamp with impunity.
-->
<type>date</type>型は<type>timestamp</type>型で表現可能な範囲よりもより広い日付範囲をサポートします。
しかしプランナは常に問題なくdateからtimestampへの変換が可能であることを仮定していました。
     </para>
    </listitem>

    <listitem>
     <para>
<<<<<<< HEAD
      Fix <application>pg_restore</application>'s text output for large objects (BLOBs)
      when <varname>standard_conforming_strings</varname> is on (Tom Lane)
=======
<!--
      Fix <application>pg_restore</>'s text output for large objects (BLOBs)
      when <varname>standard_conforming_strings</> is on (Tom Lane)
-->
<varname>standard_conforming_strings</varname>が有効な場合のラージオブジェクト（BLOB）用の<application>pg_restore</application>のテキスト出力を修正しました。(Tom Lane)
>>>>>>> doc_ja_10_premerge
     </para>

     <para>
<!--
      Although restoring directly to a database worked correctly, string
      escaping was incorrect if <application>pg_restore</application> was asked for
      SQL text output and <varname>standard_conforming_strings</varname> had been
      enabled in the source database.
-->
データベースへ直接リストアすることは正しく動作しましたが、<application>pg_restore</application>がSQLテキスト出力を求め、かつ、<varname>standard_conforming_strings</varname>が元のデータベースで有効だった場合、文字列エスケープは正しくありませんでした。
     </para>
    </listitem>

    <listitem>
     <para>
<<<<<<< HEAD
      Fix erroneous parsing of <type>tsquery</type> values containing
=======
<!--
      Fix erroneous parsing of <type>tsquery</> values containing
>>>>>>> doc_ja_10_premerge
      <literal>... &amp; !(subexpression) | ...</literal> (Tom Lane)
-->
<literal>... &amp; !(subexpression) | ...</literal>を含む<type>tsquery</type>値の間違った解析を修正しました。(Tom Lane)
     </para>

     <para>
<!--
      Queries containing this combination of operators were not executed
<<<<<<< HEAD
      correctly.  The same error existed in <filename>contrib/intarray</filename>'s
      <type>query_int</type> type and <filename>contrib/ltree</filename>'s
      <type>ltxtquery</type> type.
=======
      correctly.  The same error existed in <filename>contrib/intarray</>'s
      <type>query_int</> type and <filename>contrib/ltree</>'s
      <type>ltxtquery</> type.
-->
こうした演算子の組み合わせを含む問い合わせは正しく実行されませんでした。
同じエラーが<filename>contrib/intarray</filename>の<type>query_int</type>型と<filename>contrib/ltree</filename>の<type>ltxtquery</type>型に存在しました。
>>>>>>> doc_ja_10_premerge
     </para>
    </listitem>

    <listitem>
     <para>
<<<<<<< HEAD
      Fix buffer overrun in <filename>contrib/intarray</filename>'s input function
      for the <type>query_int</type> type (Apple)
=======
<!--
      Fix buffer overrun in <filename>contrib/intarray</>'s input function
      for the <type>query_int</> type (Apple)
-->
<type>query_int</type>型に対する<filename>contrib/intarray</filename>入力関数におけるバッファオーバーランを修正しました。(Apple)
>>>>>>> doc_ja_10_premerge
     </para>

     <para>
<!--
      This bug is a security risk since the function's return address could
      be overwritten.  Thanks to Apple Inc's security team for reporting this
      issue and supplying the fix.  (CVE-2010-4015)
-->
この関数の返すアドレスが上書きされる可能性があるという点で、この不具合はセキュリティ問題です。
この問題を報告し修正版を提供していただいたApple Incのセキュリティチームに感謝します。(CVE-2010-4015)
     </para>
    </listitem>

    <listitem>
     <para>
<<<<<<< HEAD
      Fix bug in <filename>contrib/seg</filename>'s GiST picksplit algorithm
=======
<!--
      Fix bug in <filename>contrib/seg</>'s GiST picksplit algorithm
>>>>>>> doc_ja_10_premerge
      (Alexander Korotkov)
-->
<filename>contrib/seg</filename>のGiST picksplitアルゴリズムにおける不具合を修正しました。(Alexander Korotkov)
     </para>

     <para>
<!--
      This could result in considerable inefficiency, though not actually
      incorrect answers, in a GiST index on a <type>seg</type> column.
      If you have such an index, consider <command>REINDEX</command>ing it after
      installing this update.  (This is identical to the bug that was fixed in
<<<<<<< HEAD
      <filename>contrib/cube</filename> in the previous update.)
=======
      <filename>contrib/cube</> in the previous update.)
-->
これにより、<type>seg</type>列上のGiSTインデックスにおいて実際に不正な結果になることはありませんが、非常に非効率的な結果になることがあり得ました。
こうしたインデックスがある場合、この更新版をインストールした後に<command>REINDEX</command>処理を行うことを検討してください。
（これは過去の更新の<filename>contrib/cube</filename>で修正された不具合と同じです。）
>>>>>>> doc_ja_10_premerge
     </para>
    </listitem>

   </itemizedlist>

  </sect2>
 </sect1>

 <sect1 id="release-8-2-19">
<!--
  <title>Release 8.2.19</title>
-->
  <title>リリース8.2.19</title>

  <formalpara>
<!--
  <title>Release date:</title>
-->
  <title>リリース日:</title>
  <para>2010-12-16</para>
  </formalpara>

  <para>
<!--
   This release contains a variety of fixes from 8.2.18.
   For information about new features in the 8.2 major release, see
   <xref linkend="release-8-2"/>.
<<<<<<< HEAD
=======
-->
このリリースは8.2.18に対し、各種の不具合を修正したものです。
8.2メジャーリリースにおける新機能については<xref linkend="release-8-2"/>を参照してください。
>>>>>>> doc_ja_10_premerge
  </para>

  <sect2>
<!--
   <title>Migration to Version 8.2.19</title>
-->
   <title>バージョン8.2.19への移行</title>

   <para>
<!--
    A dump/restore is not required for those running 8.2.X.
    However, if you are upgrading from a version earlier than 8.2.14,
    see <xref linkend="release-8-2-14"/>.
<<<<<<< HEAD
=======
-->
8.2.Xからの移行ではダンプ/リストアは不要です。
しかしながら、8.2.14以前のバージョンからアップデートする場合は<xref linkend="release-8-2-14"/>を参照してください。
>>>>>>> doc_ja_10_premerge
   </para>

  </sect2>

  <sect2>
<!--
   <title>Changes</title>
-->
   <title>変更点</title>

   <itemizedlist>

    <listitem>
     <para>
<!--
      Force the default
<<<<<<< HEAD
      <link linkend="guc-wal-sync-method"><varname>wal_sync_method</varname></link>
      to be <literal>fdatasync</literal> on Linux (Tom Lane, Marti Raudsepp)
     </para>

     <para>
      The default on Linux has actually been <literal>fdatasync</literal> for many
      years, but recent kernel changes caused <productname>PostgreSQL</productname> to
      choose <literal>open_datasync</literal> instead.  This choice did not result
      in any performance improvement, and caused outright failures on
      certain filesystems, notably <literal>ext4</literal> with the
      <literal>data=journal</literal> mount option.
=======
      <link linkend="guc-wal-sync-method"><varname>wal_sync_method</></link>
      to be <literal>fdatasync</> on Linux (Tom Lane, Marti Raudsepp)
-->
Linuxにて<link linkend="guc-wal-sync-method"><varname>wal_sync_method</varname></link>のデフォルトが強制的に<literal>fdatasync</literal>になるようにしました。(Tom Lane, Marti Raudsepp)
     </para>

     <para>
<!--
      The default on Linux has actually been <literal>fdatasync</> for many
      years, but recent kernel changes caused <productname>PostgreSQL</> to
      choose <literal>open_datasync</> instead.  This choice did not result
      in any performance improvement, and caused outright failures on
      certain filesystems, notably <literal>ext4</> with the
      <literal>data=journal</> mount option.
-->
長い間、Linuxでのデフォルトは実質<literal>fdatasync</literal>でした。
しかし最近のカーネルの変更により、<productname>PostgreSQL</productname>は代わりに<literal>open_datasync</literal>を選択するようになりました。
この選択は性能向上をまったくもたらさず、特定のシステム、特に<literal>data=journal</literal>マウントオプションを使用した<literal>ext4</literal>では、完全に失敗してしまいます。
>>>>>>> doc_ja_10_premerge
     </para>
    </listitem>

    <listitem>
     <para>
<!--
      Fix assorted bugs in WAL replay logic for GIN indexes (Tom Lane)
-->
GINインデックスに対するWAL再生ロジックにおける分類不具合を修正しました。(Tom Lane)
     </para>

     <para>
<<<<<<< HEAD
      This could result in <quote>bad buffer id: 0</quote> failures or
=======
<!--
      This could result in <quote>bad buffer id: 0</> failures or
>>>>>>> doc_ja_10_premerge
      corruption of index contents during replication.
-->
これは<quote>bad buffer id: 0</quote>という失敗、あるいはレプリケーション中のインデックス内容の破損という結果になり得ました。
     </para>
    </listitem>

    <listitem>
     <para>
<!--
      Fix recovery from base backup when the starting checkpoint WAL record
      is not in the same WAL segment as its redo point (Jeff Davis)
-->
開始チェックポイントWALレコードが再実行時点と同じWALセグメント内に存在しない場合のベースバックアップからのリカバリを修正しました。(Jeff Davis)
     </para>
    </listitem>

    <listitem>
     <para>
<<<<<<< HEAD
      Add support for detecting register-stack overrun on <literal>IA64</literal>
=======
<!--
      Add support for detecting register-stack overrun on <literal>IA64</>
>>>>>>> doc_ja_10_premerge
      (Tom Lane)
-->
<literal>IA64</literal>においてレジスタスタックのオーバーラン検知サポートを追加しました。(Tom Lane)
     </para>

     <para>
<<<<<<< HEAD
      The <literal>IA64</literal> architecture has two hardware stacks.  Full
=======
<!--
      The <literal>IA64</> architecture has two hardware stacks.  Full
>>>>>>> doc_ja_10_premerge
      prevention of stack-overrun failures requires checking both.
-->
<literal>IA64</literal>アーキテクチャには２つのハードウェアスタックがあります。
スタックオーバーラン失敗を完全に防ぐには両方を検査しなければなりません。
     </para>
    </listitem>

    <listitem>
     <para>
<<<<<<< HEAD
      Add a check for stack overflow in <function>copyObject()</function> (Tom Lane)
=======
<!--
      Add a check for stack overflow in <function>copyObject()</> (Tom Lane)
-->
<function>copyObject()</function>におけるスタックオーバーフロー検査を追加しました。(Tom Lane)
>>>>>>> doc_ja_10_premerge
     </para>

     <para>
<!--
      Certain code paths could crash due to stack overflow given a
      sufficiently complex query.
-->
非常に複雑な問い合わせが与えられた場合のスタックオーバーフローのため、特定のコードパスがクラッシュする可能性がありました。
     </para>
    </listitem>

    <listitem>
     <para>
<!--
      Fix detection of page splits in temporary GiST indexes (Heikki
      Linnakangas)
-->
一時GiSTインデックスにおけるページ分割検知を修正しました。(Heikki Linnakangas)
     </para>

     <para>
<<<<<<< HEAD
      It is possible to have a <quote>concurrent</quote> page split in a
=======
<!--
      It is possible to have a <quote>concurrent</> page split in a
>>>>>>> doc_ja_10_premerge
      temporary index, if for example there is an open cursor scanning the
      index when an insertion is done.  GiST failed to detect this case and
      hence could deliver wrong results when execution of the cursor
      continued.
-->
例えば挿入が行われた時に一時インデックスをスキャンする開いているカーソルがあると、そのインデックスで<quote>同時実行</quote>ページ分割を持つことができます。
GiSTではこの状況の検知に失敗していました。
このためGiSTはそのカーソルの実行が続く間、間違った結果をもたらすことがありました。
     </para>
    </listitem>

    <listitem>
     <para>
<<<<<<< HEAD
      Avoid memory leakage while <command>ANALYZE</command>'ing complex index
=======
<!--
      Avoid memory leakage while <command>ANALYZE</>'ing complex index
>>>>>>> doc_ja_10_premerge
      expressions (Tom Lane)
-->
複雑なインデックス式を<command>ANALYZE</command>する時のメモリリークを防ぎます。(Tom Lane)
     </para>
    </listitem>

    <listitem>
     <para>
<!--
      Ensure an index that uses a whole-row Var still depends on its table
      (Tom Lane)
-->
行全体のVarを使用するインデックスがそのテーブルに依存し続けることを確実にしました。(Tom Lane)
     </para>

     <para>
<<<<<<< HEAD
      An index declared like <literal>create index i on t (foo(t.*))</literal>
=======
<!--
      An index declared like <literal>create index i on t (foo(t.*))</>
>>>>>>> doc_ja_10_premerge
      would not automatically get dropped when its table was dropped.
-->
<literal>create index i on t (foo(t.*))</literal>のように宣言されたインデックスはそのテーブルが削除された時に自動的に削除されませんでした。
     </para>
    </listitem>

    <listitem>
     <para>
<<<<<<< HEAD
      Do not <quote>inline</quote> a SQL function with multiple <literal>OUT</literal>
=======
<!--
      Do not <quote>inline</> a SQL function with multiple <literal>OUT</>
>>>>>>> doc_ja_10_premerge
      parameters (Tom Lane)
-->
複数の<literal>OUT</literal>パラメータを持つSQL関数を<quote>インライン</quote>化しません。(Tom Lane)
     </para>

     <para>
<!--
      This avoids a possible crash due to loss of information about the
      expected result rowtype.
-->
結果の想定行型に関する情報が存在しないためにクラッシュする可能性を防ぎます。
     </para>
    </listitem>

    <listitem>
     <para>
<<<<<<< HEAD
      Behave correctly if <literal>ORDER BY</literal>, <literal>LIMIT</literal>,
      <literal>FOR UPDATE</literal>, or <literal>WITH</literal> is attached to the
      <literal>VALUES</literal> part of <literal>INSERT ... VALUES</literal> (Tom Lane)
=======
<!--
      Behave correctly if <literal>ORDER BY</>, <literal>LIMIT</>,
      <literal>FOR UPDATE</>, or <literal>WITH</> is attached to the
      <literal>VALUES</> part of <literal>INSERT ... VALUES</> (Tom Lane)
-->
<literal>ORDER BY</literal>、<literal>LIMIT</literal>、<literal>FOR UPDATE</literal>、<literal>WITH</literal>が<literal>INSERT ... VALUES</literal>の<literal>VALUES</literal>部に付いた場合の動作を正しくしました。(Tom Lane)
>>>>>>> doc_ja_10_premerge
     </para>
    </listitem>

    <listitem>
     <para>
<<<<<<< HEAD
      Fix constant-folding of <literal>COALESCE()</literal> expressions (Tom Lane)
=======
<!--
      Fix constant-folding of <literal>COALESCE()</> expressions (Tom Lane)
-->
<literal>COALESCE()</literal>式の定数折りたたみを修正しました。(Tom Lane)
>>>>>>> doc_ja_10_premerge
     </para>

     <para>
<!--
      The planner would sometimes attempt to evaluate sub-expressions that
      in fact could never be reached, possibly leading to unexpected errors.
-->
プランナは時々、実際には決して達しない副式の評価を行い、想定外のエラーをもたらす可能性がありました。
     </para>
    </listitem>

    <listitem>
     <para>
<<<<<<< HEAD
      Add print functionality for <structname>InhRelation</structname> nodes (Tom Lane)
     </para>

     <para>
      This avoids a failure when <varname>debug_print_parse</varname> is enabled
=======
<!--
      Add print functionality for <structname>InhRelation</> nodes (Tom Lane)
-->
<structname>InhRelation</structname>ノードに関する機能性出力を追加しました。(Tom Lane)
     </para>

     <para>
<!--
      This avoids a failure when <varname>debug_print_parse</> is enabled
>>>>>>> doc_ja_10_premerge
      and certain types of query are executed.
-->
これにより<varname>debug_print_parse</varname>が有効な場合に特定種類の問い合わせが行われた場合の失敗を防止します。
     </para>
    </listitem>

    <listitem>
     <para>
<!--
      Fix incorrect calculation of distance from a point to a horizontal
      line segment (Tom Lane)
-->
点から水平線分への距離計算を正しく修正しました。(Tom Lane)
     </para>

     <para>
<!--
      This bug affected several different geometric distance-measurement
      operators.
-->
この不具合は様々な複数の幾何距離測定演算子に影響します。
     </para>
    </listitem>

    <listitem>
     <para>
<<<<<<< HEAD
      Fix <application>PL/pgSQL</application>'s handling of <quote>simple</quote>
=======
<!--
      Fix <application>PL/pgSQL</>'s handling of <quote>simple</>
>>>>>>> doc_ja_10_premerge
      expressions to not fail in recursion or error-recovery cases (Tom Lane)
-->
再帰もしくはエラー修復状態にならない<quote>単純な</quote>式についての<application>PL/pgSQL</application>の扱いを修正しました。(Tom Lane)
     </para>
    </listitem>

    <listitem>
     <para>
<<<<<<< HEAD
      Fix <application>PL/Python</application>'s handling of set-returning functions
=======
<!--
      Fix <application>PL/Python</>'s handling of set-returning functions
>>>>>>> doc_ja_10_premerge
      (Jan Urbanski)
-->
<application>PL/Python</application>の集合を返す関数の扱いを修正しました。(Jan Urbanski)
     </para>

     <para>
<!--
      Attempts to call SPI functions within the iterator generating a set
      result would fail.
-->
集合結果を生成するイテレータ内でSPI関数呼び出しが失敗しました。
     </para>
    </listitem>

    <listitem>
     <para>
<<<<<<< HEAD
      Fix bug in <filename>contrib/cube</filename>'s GiST picksplit algorithm
=======
<!--
      Fix bug in <filename>contrib/cube</>'s GiST picksplit algorithm
>>>>>>> doc_ja_10_premerge
      (Alexander Korotkov)
-->
<filename>contrib/cube</filename>のGiST picksplitアルゴリズムの不具合を修正しました。(Alexander Korotkov)
     </para>

     <para>
<!--
      This could result in considerable inefficiency, though not actually
      incorrect answers, in a GiST index on a <type>cube</type> column.
      If you have such an index, consider <command>REINDEX</command>ing it after
      installing this update.
-->
<type>cube</type>列上のGiSTインデックスにおいて、実際に不正確な結果になることはありませんが、このため相当効率性が劣化する可能性がありました。
こうしたインデックスがある場合、この更新をインストールした後に<command>REINDEX</command>することを検討してください。
     </para>
    </listitem>

    <listitem>
     <para>
<<<<<<< HEAD
      Don't emit <quote>identifier will be truncated</quote> notices in
      <filename>contrib/dblink</filename> except when creating new connections
=======
<!--
      Don't emit <quote>identifier will be truncated</> notices in
      <filename>contrib/dblink</> except when creating new connections
>>>>>>> doc_ja_10_premerge
      (Itagaki Takahiro)
-->
<filename>contrib/dblink</filename>内で、新しい接続を作成する時を除き、<quote>identifier will be truncated</quote>注意を出力しないようにしました。(Itagaki Takahiro)
     </para>
    </listitem>

    <listitem>
     <para>
<!--
      Fix potential coredump on missing public key in
<<<<<<< HEAD
      <filename>contrib/pgcrypto</filename> (Marti Raudsepp)
=======
      <filename>contrib/pgcrypto</> (Marti Raudsepp)
-->
<filename>contrib/pgcrypto</filename>において公開キーがない場合にコアダンプする可能性を修正しました。(Marti Raudsepp)
>>>>>>> doc_ja_10_premerge
     </para>
    </listitem>

    <listitem>
     <para>
<<<<<<< HEAD
      Fix memory leak in <filename>contrib/xml2</filename>'s XPath query functions
=======
<!--
      Fix memory leak in <filename>contrib/xml2</>'s XPath query functions
>>>>>>> doc_ja_10_premerge
      (Tom Lane)
-->
<filename>contrib/xml2</filename>のXPath問い合わせ関数におけるメモリリークを修正しました。(Tom Lane)
     </para>
    </listitem>

    <listitem>
     <para>
<<<<<<< HEAD
      Update time zone data files to <application>tzdata</application> release 2010o
=======
<!--
      Update time zone data files to <application>tzdata</> release 2010o
>>>>>>> doc_ja_10_premerge
      for DST law changes in Fiji and Samoa;
      also historical corrections for Hong Kong.
-->
時間帯データファイルを<application>tzdata</application> release 2010oに更新しました。
フィジー、サモアにおける夏時間規則の変更、香港の歴史的な修正が含まれています。
     </para>
    </listitem>

   </itemizedlist>

  </sect2>
 </sect1>

 <sect1 id="release-8-2-18">
<!--
  <title>Release 8.2.18</title>
-->
  <title>リリース8.2.18</title>

  <formalpara>
<!--
  <title>Release date:</title>
-->
  <title>リリース日:</title>
  <para>2010-10-04</para>
  </formalpara>

  <para>
<!--
   This release contains a variety of fixes from 8.2.17.
   For information about new features in the 8.2 major release, see
   <xref linkend="release-8-2"/>.
<<<<<<< HEAD
=======
-->
このリリースは8.2.17に対し、各種の不具合を修正したものです。
8.2メジャーリリースにおける新機能については<xref linkend="release-8-2"/>を参照してください。
>>>>>>> doc_ja_10_premerge
  </para>

  <sect2>
<!--
   <title>Migration to Version 8.2.18</title>
-->
   <title>バージョン8.2.18への移行</title>

   <para>
<!--
    A dump/restore is not required for those running 8.2.X.
    However, if you are upgrading from a version earlier than 8.2.14,
    see <xref linkend="release-8-2-14"/>.
<<<<<<< HEAD
=======
-->
8.2.Xからの移行ではダンプ/リストアは不要です。
しかしながら、8.2.14以前のバージョンからアップデートする場合は<xref linkend="release-8-2-14"/>を参照してください。
>>>>>>> doc_ja_10_premerge
   </para>

  </sect2>

  <sect2>
<!--
   <title>Changes</title>
-->
   <title>変更点</title>

   <itemizedlist>

    <listitem>
     <para>
<!--
      Use a separate interpreter for each calling SQL userid in PL/Perl and
      PL/Tcl (Tom Lane)
-->
PL/PerlおよびPL/Tclにおいて、呼び出し元のSQLユーザIDごとに別のインタプリタを使用します。(Tom Lane)
     </para>

     <para>
<!--
      This change prevents security problems that can be caused by subverting
      Perl or Tcl code that will be executed later in the same session under
      another SQL user identity (for example, within a <literal>SECURITY
      DEFINER</literal> function).  Most scripting languages offer numerous ways that
      that might be done, such as redefining standard functions or operators
      called by the target function.  Without this change, any SQL user with
      Perl or Tcl language usage rights can do essentially anything with the
      SQL privileges of the target function's owner.
-->
この変更は、同じセッション内でその後に異なるSQLユーザIDにより実行されるPerlまたはTclコード（例えば<literal>SECURITY DEFINER</literal>の内部）を破壊することで発生する可能性があるというセキュリティ問題を防止するものです。
ほとんどのスクリプト用言語は、対象とする関数で呼び出される標準関数や演算子の再定義など、これを行うことができる多くの方法を提供します。
この変更がないと、PerlまたはTcl言語の使用権限を持つ任意のSQLユーザは基本的に、対象の関数の所有者が持つSQL権限でできることを何でもできるようになります。
     </para>

     <para>
<!--
      The cost of this change is that intentional communication among Perl
      and Tcl functions becomes more difficult.  To provide an escape hatch,
      PL/PerlU and PL/TclU functions continue to use only one interpreter
      per session.  This is not considered a security issue since all such
      functions execute at the trust level of a database superuser already.
-->
この変更の欠点はPerlおよびTcl関数間の内部通信がより難しくなるという点です。
逃げ道を提供するために、PL/PerlUおよびPL/TclU関数ではまだセッション当たり1つのインタプリタのみを使用します。
これらのすべての関数は従来よりデータベーススーパーユーザの信頼レベルで実行されますので、これはセキュリティ問題とはみなされません。
     </para>

     <para>
<!--
      It is likely that third-party procedural languages that claim to offer
      trusted execution have similar security issues.  We advise contacting
      the authors of any PL you are depending on for security-critical
      purposes.
-->
信頼された実行を提供することを主張するサードパーティ製の手続き言語は似たようなセキュリティ問題を持つ可能性が大きくあります。
セキュリティが非常に重要な目的のために依存している手続き言語があれば、その作者に連絡を取ることを勧めます。
     </para>

     <para>
<!--
      Our thanks to Tim Bunce for pointing out this issue (CVE-2010-3433).
-->
この問題を指摘いただいたTim Bunceに感謝します(CVE-2010-3433)。
     </para>
    </listitem>

    <listitem>
     <para>
<<<<<<< HEAD
      Prevent possible crashes in <function>pg_get_expr()</function> by disallowing
=======
<!--
      Prevent possible crashes in <function>pg_get_expr()</> by disallowing
>>>>>>> doc_ja_10_premerge
      it from being called with an argument that is not one of the system
      catalog columns it's intended to be used with
      (Heikki Linnakangas, Tom Lane)
-->
<function>pg_get_expr()</function>の用途として意図されたシステムカタログ列の一つではない引数で呼び出されることを拒絶することで<function>pg_get_expr()</function>内のクラッシュする可能性を防止します。(Heikki Linnakangas, Tom Lane)
     </para>
    </listitem>

    <listitem>
     <para>
<!--
      Fix Windows shared-memory allocation code
      (Tsutomu Yamada, Magnus Hagander)
-->
Windowsの共有メモリ割り当てコードを修正しました。(Tsutomu Yamada, Magnus Hagander)
     </para>

     <para>
<!--
      This bug led to the often-reported <quote>could not reattach to shared
      memory</quote> error message.  This is a back-patch of a fix that was
      applied to newer branches some time ago.
-->
この不具合により、よく報告された<quote>could not reattach to shared memory</quote>というエラーメッセージがもたらされました。
これは、すこし前により新しいブランチに適用された改修を過去のバージョンに適用したものです。
     </para>
    </listitem>

    <listitem>
     <para>
<<<<<<< HEAD
      Treat exit code 128 (<literal>ERROR_WAIT_NO_CHILDREN</literal>) as non-fatal on
=======
<!--
      Treat exit code 128 (<literal>ERROR_WAIT_NO_CHILDREN</>) as non-fatal on
>>>>>>> doc_ja_10_premerge
      Windows (Magnus Hagander)
-->
Windowsにおいて終了コード128（<literal>ERROR_WAIT_NO_CHILDREN</literal>）を致命的でないものと扱います。(Magnus Hagander)
     </para>

     <para>
<!--
      Under high load, Windows processes will sometimes fail at startup with
      this error code.  Formerly the postmaster treated this as a panic
      condition and restarted the whole database, but that seems to be
      an overreaction.
-->
高負荷状況下で、Windowsプロセスはこのエラーコードで起動に失敗することが時々あります。
以前はpostmasterはパニック状態としてこれを扱い、データベース全体を再起動しました。
しかしこれは過度の反応のように思われます。
     </para>
    </listitem>

    <listitem>
     <para>
<<<<<<< HEAD
      Fix possible duplicate scans of <literal>UNION ALL</literal> member relations
=======
<!--
      Fix possible duplicate scans of <literal>UNION ALL</> member relations
>>>>>>> doc_ja_10_premerge
      (Tom Lane)
-->
<literal>UNION ALL</literal>のメンバーリレーションの二重スキャンの可能性を修正しました。(Tom Lane)
     </para>
    </listitem>

    <listitem>
     <para>
<!--
      Fix <quote>cannot handle unplanned sub-select</quote> error (Tom Lane)
-->
<quote>cannot handle unplanned sub-select</quote>エラーを修正しました。(Tom Lane)
     </para>

     <para>
<!--
      This occurred when a sub-select contains a join alias reference that
      expands into an expression containing another sub-select.
-->
これは、副選択が他の副選択を含む式に展開される結合の別名参照を含む場合に発生しました。
     </para>
    </listitem>

    <listitem>
     <para>
<!--
      Reduce PANIC to ERROR in some occasionally-reported btree failure cases,
      and provide additional detail in the resulting error messages
      (Tom Lane)
-->
まれに報告されたB-tree失敗状況の一部をPANICからERRORを減らしました。
また出力されるエラーメッセージに追加の詳細を加えました。(Tom Lane)
     </para>

     <para>
<!--
      This should improve the system's robustness with corrupted indexes.
-->
これにより、破損したインデックスに対するシステムの堅牢性が向上したはずです。
     </para>
    </listitem>

    <listitem>
     <para>
<!--
      Prevent show_session_authorization() from crashing within autovacuum
      processes (Tom Lane)
-->
自動バキューム処理中にshow_session_authorization()がクラッシュしないようにします。(Tom Lane)
     </para>
    </listitem>

    <listitem>
     <para>
<!--
      Defend against functions returning setof record where not all the
      returned rows are actually of the same rowtype (Tom Lane)
-->
返される行のすべてが実際に同一の行型でない、レコードの集合を返す関数を防御します。(Tom Lane)
     </para>
    </listitem>

    <listitem>
     <para>
<!--
      Fix possible failure when hashing a pass-by-reference function result
      (Tao Ma, Tom Lane)
-->
参照渡し関数の結果をハッシュ化する時に失敗する可能性を修正しました。(Tao Ma, Tom Lane)
     </para>
    </listitem>

    <listitem>
     <para>
<!--
      Take care to fsync the contents of lockfiles (both
      <filename>postmaster.pid</filename> and the socket lockfile) while writing them
      (Tom Lane)
-->
ロックファイル（<filename>postmaster.pid</filename>およびソケット用のロックファイル）を書き出す時に、注意してその内容をfsyncします。(Tom Lane)
     </para>

     <para>
<!--
      This omission could result in corrupted lockfile contents if the
      machine crashes shortly after postmaster start.  That could in turn
      prevent subsequent attempts to start the postmaster from succeeding,
      until the lockfile is manually removed.
-->
これがないと、postmasterの起動後しばらくしてマシンがクラッシュした場合に、ロックファイルの内容が破損することがあり得ました。
これが起きると、このロックファイルを手作業で削除するまで、その後のpostmasterの起動試行が成功できなくなります。
     </para>
    </listitem>

    <listitem>
     <para>
<!--
      Avoid recursion while assigning XIDs to heavily-nested
      subtransactions (Andres Freund, Robert Haas)
-->
過度に入れ子になった副トランザクションに対してXIDを割り当てる際の再帰を防止します。(Andres Freund, Robert Haas)
     </para>

     <para>
<!--
      The original coding could result in a crash if there was limited
      stack space.
-->
元々のコードでは、制限されたスタック領域であった場合にクラッシュすることがあり得ました。
     </para>
    </listitem>

    <listitem>
     <para>
<<<<<<< HEAD
      Fix <varname>log_line_prefix</varname>'s <literal>%i</literal> escape,
=======
<!--
      Fix <varname>log_line_prefix</>'s <literal>%i</> escape,
>>>>>>> doc_ja_10_premerge
      which could produce junk early in backend startup (Tom Lane)
-->
バックエンド起動の初期にゴミを生成することがあった<varname>log_line_prefix</varname>の<literal>%i</literal>エスケープを修正しました。(Tom Lane)
     </para>
    </listitem>

    <listitem>
     <para>
<!--
      Fix possible data corruption in <command>ALTER TABLE ... SET
<<<<<<< HEAD
      TABLESPACE</command> when archiving is enabled (Jeff Davis)
=======
      TABLESPACE</> when archiving is enabled (Jeff Davis)
-->
アーカイブ処理が有効な場合、<command>ALTER TABLE ... SET TABLESPACE</command>におけるデータ破損の可能性を修正しました。(Jeff Davis)
>>>>>>> doc_ja_10_premerge
     </para>
    </listitem>

    <listitem>
     <para>
<<<<<<< HEAD
      Allow <command>CREATE DATABASE</command> and <command>ALTER DATABASE ... SET
      TABLESPACE</command> to be interrupted by query-cancel (Guillaume Lelarge)
=======
<!--
      Allow <command>CREATE DATABASE</> and <command>ALTER DATABASE ... SET
      TABLESPACE</> to be interrupted by query-cancel (Guillaume Lelarge)
-->
<command>CREATE DATABASE</command>と<command>ALTER DATABASE ... SET TABLESPACE</command>を問い合わせキャンセルにより中断させることができます。(Guillaume Lelarge)
>>>>>>> doc_ja_10_premerge
     </para>
    </listitem>

    <listitem>
     <para>
<!--
      In PL/Python, defend against null pointer results from
      <function>PyCObject_AsVoidPtr</function> and <function>PyCObject_FromVoidPtr</function>
      (Peter Eisentraut)
-->
PL/Pythonにおいて、<function>PyCObject_AsVoidPtr</function>および<function>PyCObject_FromVoidPtr</function>からのヌルポインタ結果を防止します。(Peter Eisentraut)
     </para>
    </listitem>

    <listitem>
     <para>
<<<<<<< HEAD
      Improve <filename>contrib/dblink</filename>'s handling of tables containing
=======
<!--
      Improve <filename>contrib/dblink</>'s handling of tables containing
>>>>>>> doc_ja_10_premerge
      dropped columns (Tom Lane)
-->
削除された列を含むテーブルに対する<filename>contrib/dblink</filename>の処理を改良しました。(Tom Lane)
     </para>
    </listitem>

    <listitem>
     <para>
<!--
      Fix connection leak after <quote>duplicate connection name</quote>
<<<<<<< HEAD
      errors in <filename>contrib/dblink</filename> (Itagaki Takahiro)
=======
      errors in <filename>contrib/dblink</> (Itagaki Takahiro)
-->
<filename>contrib/dblink</filename>において<quote>duplicate connection name</quote>エラー後の接続リークを修正しました。(Itagaki Takahiro)
>>>>>>> doc_ja_10_premerge
     </para>
    </listitem>

    <listitem>
     <para>
<<<<<<< HEAD
      Fix <filename>contrib/dblink</filename> to handle connection names longer than
=======
<!--
      Fix <filename>contrib/dblink</> to handle connection names longer than
>>>>>>> doc_ja_10_premerge
      62 bytes correctly (Itagaki Takahiro)
-->
62バイトより長い接続名に関する<filename>contrib/dblink</filename>の処理を正しく修正しました。(Itagaki Takahiro)
     </para>
    </listitem>

    <listitem>
     <para>
<<<<<<< HEAD
      Add <function>hstore(text, text)</function>
      function to <filename>contrib/hstore</filename> (Robert Haas)
=======
<!--
      Add <function>hstore(text, text)</>
      function to <filename>contrib/hstore</> (Robert Haas)
-->
<function>hstore(text, text)</function>関数を<filename>contrib/hstore</filename>に追加しました。(Robert Haas)
>>>>>>> doc_ja_10_premerge
     </para>

     <para>
<!--
      This function is the recommended substitute for the now-deprecated
      <literal>=&gt;</literal> operator.  It was back-patched so that future-proofed
      code can be used with older server versions.  Note that the patch will
      be effective only after <filename>contrib/hstore</filename> is installed or
      reinstalled in a particular database.  Users might prefer to execute
<<<<<<< HEAD
      the <command>CREATE FUNCTION</command> command by hand, instead.
=======
      the <command>CREATE FUNCTION</> command by hand, instead.
-->
この関数は、廃止予定となった<literal>=&gt;</literal>演算子に対する推奨の代替です。
将来を見据えたコードが古めのバージョンのサーバでも使用できるようにするために過去にもパッチが適用されました。
このパッチは、<filename>contrib/hstore</filename>のインストール後もしくは特定のデータベースに再インストールされた後にのみ効果を持つことに注意してください。
代わりに手作業で<command>CREATE FUNCTION</command>コマンドを実行することを選ぶユーザがいるかもしれません。
>>>>>>> doc_ja_10_premerge
     </para>
    </listitem>

    <listitem>
     <para>
<!--
      Update build infrastructure and documentation to reflect the source code
      repository's move from CVS to Git (Magnus Hagander and others)
-->
構築手順や文書を更新して、ソースコードリポジトリがCVSからGitに変更されたことを反映しました。(Magnus Hagander他)
     </para>
    </listitem>

    <listitem>
     <para>
<<<<<<< HEAD
      Update time zone data files to <application>tzdata</application> release 2010l
=======
<!--
      Update time zone data files to <application>tzdata</> release 2010l
>>>>>>> doc_ja_10_premerge
      for DST law changes in Egypt and Palestine; also historical corrections
      for Finland.
-->
時間帯データファイルを<application>tzdata</application> release 2010lに更新しました。
エジプト、パレスチナにおける夏時間規則の変更、フィンランドの歴史的な修正が含まれています。
     </para>

     <para>
<!--
      This change also adds new names for two Micronesian timezones:
      Pacific/Chuuk is now preferred over Pacific/Truk (and the preferred
      abbreviation is CHUT not TRUT) and Pacific/Pohnpei is preferred over
      Pacific/Ponape.
-->
またこの変更では、2つのミクロネシアの時間帯を追加しています。
Pacific/ChuukはPacific/Trukより好まれるようになり（好まれる省略形はTRUTではなくCHUT）、Pacific/PohnpeiはPacific/Ponapeより好まれるようになります。
     </para>
    </listitem>

    <listitem>
     <para>
<<<<<<< HEAD
      Make Windows' <quote>N. Central Asia Standard Time</quote> timezone map to
=======
<!--
      Make Windows' <quote>N. Central Asia Standard Time</> timezone map to
>>>>>>> doc_ja_10_premerge
      Asia/Novosibirsk, not Asia/Almaty (Magnus Hagander)
-->
Windowsの<quote>N. Central Asia Standard Time</quote>時間帯をAsia/AlmatyではなくAsia/Novosibirskに対応付けるようにしました。
     </para>

     <para>
<!--
      Microsoft changed the DST behavior of this zone in the timezone update
      from KB976098. Asia/Novosibirsk is a better match to its new behavior.
-->
MicrosoftはKB976098の時間帯更新からこの時間帯の夏時間の振舞いを変更しました。
Asia/Novosibirskはこの新しい振舞いにより合致しています。
     </para>
    </listitem>

   </itemizedlist>

  </sect2>
 </sect1>

 <sect1 id="release-8-2-17">
<!--
  <title>Release 8.2.17</title>
-->
  <title>リリース8.2.17</title>

  <formalpara>
<!--
  <title>Release date:</title>
-->
  <title>リリース日:</title>
  <para>2010-05-17</para>
  </formalpara>

  <para>
<!--
   This release contains a variety of fixes from 8.2.16.
   For information about new features in the 8.2 major release, see
   <xref linkend="release-8-2"/>.
<<<<<<< HEAD
=======
-->
このリリースは8.2.16に対し、各種の不具合を修正したものです。
8.2メジャーリリースにおける新機能については<xref linkend="release-8-2"/>を参照してください。
>>>>>>> doc_ja_10_premerge
  </para>

  <sect2>
<!--
   <title>Migration to Version 8.2.17</title>
-->
   <title>バージョン8.2.17への移行</title>

   <para>
<!--
    A dump/restore is not required for those running 8.2.X.
    However, if you are upgrading from a version earlier than 8.2.14,
    see <xref linkend="release-8-2-14"/>.
<<<<<<< HEAD
=======
-->
8.2.Xからの移行ではダンプ/リストアは不要です。
しかしながら、8.2.14以前のバージョンからアップデートする場合は<xref linkend="release-8-2-14"/>を参照してください。
>>>>>>> doc_ja_10_premerge
   </para>

  </sect2>

  <sect2>
<!--
   <title>Changes</title>
-->
   <title>変更点</title>

   <itemizedlist>

    <listitem>
     <para>
<<<<<<< HEAD
      Enforce restrictions in <literal>plperl</literal> using an opmask applied to
      the whole interpreter, instead of using <filename>Safe.pm</filename>
=======
<!--
      Enforce restrictions in <literal>plperl</> using an opmask applied to
      the whole interpreter, instead of using <filename>Safe.pm</>
>>>>>>> doc_ja_10_premerge
      (Tim Bunce, Andrew Dunstan)
-->
<filename>Safe.pm</filename>を使用するのではなく、インタプリタ全体に適用されるopmaskを使用して<literal>plperl</literal>を強制的に制限します。(Tim Bunce, Andrew Dunstan)
     </para>

     <para>
<<<<<<< HEAD
      Recent developments have convinced us that <filename>Safe.pm</filename> is too
      insecure to rely on for making <literal>plperl</literal> trustable.  This
      change removes use of <filename>Safe.pm</filename> altogether, in favor of using
=======
<!--
      Recent developments have convinced us that <filename>Safe.pm</> is too
      insecure to rely on for making <literal>plperl</> trustable.  This
      change removes use of <filename>Safe.pm</> altogether, in favor of using
>>>>>>> doc_ja_10_premerge
      a separate interpreter with an opcode mask that is always applied.
      Pleasant side effects of the change include that it is now possible to
      use Perl's <literal>strict</literal> pragma in a natural way in
      <literal>plperl</literal>, and that Perl's <literal>$a</literal> and <literal>$b</literal>
      variables work as expected in sort routines, and that function
      compilation is significantly faster.  (CVE-2010-1169)
-->
最近の開発により<literal>plperl</literal>を信頼できるとする根拠とするには<filename>Safe.pm</filename>が非常に安全ではないことを知らされました。
この変更により、<filename>Safe.pm</filename>の使用がなくなり、常に適用されるopcodeマスクを持つ別のインタプリタを使用するようになります。
この変更の喜ばしい副作用として、<literal>plperl</literal>内で普通の方法でPerlの<literal>strict</literal>プラグマが使用できるようになりました。
また、Perlの<literal>$a</literal>と<literal>$b</literal>がソート関数で想定される動作を行うようになり、関数のコンパイルが非常に高速になりました。(CVE-2010-1169)
     </para>
    </listitem>

    <listitem>
     <para>
<!--
      Prevent PL/Tcl from executing untrustworthy code from
<<<<<<< HEAD
      <structname>pltcl_modules</structname> (Tom)
=======
      <structname>pltcl_modules</> (Tom)
-->
PL/Tclにおいて<structname>pltcl_modules</structname>経由で信頼できないコードが実行されることを防止しました。(Tom)
>>>>>>> doc_ja_10_premerge
     </para>

     <para>
<!--
      PL/Tcl's feature for autoloading Tcl code from a database table
      could be exploited for trojan-horse attacks, because there was no
      restriction on who could create or insert into that table.  This change
      disables the feature unless <structname>pltcl_modules</structname> is owned by a
      superuser.  (However, the permissions on the table are not checked, so
      installations that really need a less-than-secure modules table can
      still grant suitable privileges to trusted non-superusers.)  Also,
      prevent loading code into the unrestricted <quote>normal</quote> Tcl
      interpreter unless we are really going to execute a <literal>pltclu</literal>
      function.  (CVE-2010-1170)
-->
PL/TclのデータベーステーブルからTclコードを自動読み込みする機能はトロイの木馬攻撃によりつけこまれる可能性がありました。
そのテーブルの作成や挿入できるユーザに対する制限がなかったためです。
この変更により、<structname>pltcl_modules</structname>がスーパーユーザにより所有されていない限り、この機能は無効になります。
(しかし、このテーブルに対する権限は検査されませんので、安全性が低いモジュールを本当に必要とするインストレーションでは、信頼された非スーパーユーザに適切な権限を付与できます。)
また、
<literal>pltclu</literal>関数を本当に実行しようとしていない限り、制限がない<quote>通常の</quote>Tclにコードが読み込まれることを防止しました。(CVE-2010-1170)
     </para>
    </listitem>

    <listitem>
     <para>
<!--
      Fix possible crash if a cache reset message is received during
      rebuild of a relcache entry (Heikki)
-->
relcache項目の再構築中にキャッシュ再設定メッセージを受け取った場合にクラッシュする可能性を修正しました。(Heikki)
     </para>

     <para>
<!--
      This error was introduced in 8.2.16 while fixing a related failure.
-->
8.2.16で関連する失敗を修正する時に、このエラーが入ってしまいました。
     </para>
    </listitem>

    <listitem>
     <para>
<!--
      Do not allow an unprivileged user to reset superuser-only parameter
      settings (Alvaro)
-->
非特権ユーザがスーパーユーザのみのパラメータ設定を再設定することを許しません。(Alvaro)
     </para>

     <para>
<!--
      Previously, if an unprivileged user ran <literal>ALTER USER ... RESET
      ALL</literal> for himself, or <literal>ALTER DATABASE ... RESET ALL</literal> for
      a database he owns, this would remove all special parameter settings
      for the user or database, even ones that are only supposed to be
      changeable by a superuser.  Now, the <command>ALTER</command> will only
      remove the parameters that the user has permission to change.
-->
これまで、非特権ユーザが自身に対する<literal>ALTER USER ... RESET ALL</literal>または自身が所有するデータベースに対する<literal>ALTER DATABASE ... RESET ALL</literal>を行った場合、そのユーザまたはデータベースに対する特別なパラメータ設定は、たとえスーパーユーザのみにより変更可能なものとして提供されるものであっても、すべて削除されました。
<command>ALTER</command>はそのユーザが変更権限を持つパラメータのみを削除するようになりました。
     </para>
    </listitem>

    <listitem>
     <para>
<!--
      Avoid possible crash during backend shutdown if shutdown occurs
<<<<<<< HEAD
      when a <literal>CONTEXT</literal> addition would be made to log entries (Tom)
=======
      when a <literal>CONTEXT</> addition would be made to log entries (Tom)
-->
<literal>CONTEXT</literal>追加がログ項目になされる時にシャットダウンが発生した場合に、バックエンドのシャットダウン時にクラッシュする可能性を防ぎました。(Tom)
>>>>>>> doc_ja_10_premerge
     </para>

     <para>
<!--
      In some cases the context-printing function would fail because the
      current transaction had already been rolled back when it came time
      to print a log message.
-->
現在のトランザクションがログメッセージを出力する時点に達した時にすでにロールバックされているために文脈出力関数が失敗することがありました。
     </para>
    </listitem>

    <listitem>
     <para>
<<<<<<< HEAD
      Update PL/Perl's <filename>ppport.h</filename> for modern Perl versions
=======
<!--
      Update PL/Perl's <filename>ppport.h</> for modern Perl versions
>>>>>>> doc_ja_10_premerge
      (Andrew)
-->
PL/Perlの<filename>ppport.h</filename>を最近のPerlバージョンに更新しました。(Andrew)
     </para>
    </listitem>

    <listitem>
     <para>
<!--
      Fix assorted memory leaks in PL/Python (Andreas Freund, Tom)
-->
PL/Python内の雑多なメモリリークを修正しました。(Andreas Freund, Tom)
     </para>
    </listitem>

    <listitem>
     <para>
<<<<<<< HEAD
      Prevent infinite recursion in <application>psql</application> when expanding
=======
<!--
      Prevent infinite recursion in <application>psql</> when expanding
>>>>>>> doc_ja_10_premerge
      a variable that refers to itself (Tom)
-->
変数展開が自身を参照している際の<application>psql</application>における無限再帰を防止します。(Tom)
     </para>
    </listitem>

    <listitem>
     <para>
<<<<<<< HEAD
      Fix <application>psql</application>'s <literal>\copy</literal> to not add spaces around
      a dot within <literal>\copy (select ...)</literal> (Tom)
=======
<!--
      Fix <application>psql</>'s <literal>\copy</> to not add spaces around
      a dot within <literal>\copy (select ...)</> (Tom)
-->
<literal>\copy (select ...)</literal>内のドットの前後に空白を追加しないように、<application>psql</application>の<literal>\copy</literal>を修正しました。(Tom)
>>>>>>> doc_ja_10_premerge
     </para>

     <para>
<!--
      Addition of spaces around the decimal point in a numeric literal would
      result in a syntax error.
-->
数値リテラルにおいて10進数の小数点の前後に空白が追加された場合、構文エラーが発生します。
     </para>
    </listitem>

    <listitem>
     <para>
<<<<<<< HEAD
      Ensure that <filename>contrib/pgstattuple</filename> functions respond to cancel
=======
<!--
      Ensure that <filename>contrib/pgstattuple</> functions respond to cancel
>>>>>>> doc_ja_10_premerge
      interrupts promptly (Tatsuhito Kasahara)
-->
<filename>contrib/pgstattuple</filename>関数がキャンセル割り込みに即座に応答することを確実にしました。(Tatsuhito Kasahara)
     </para>
    </listitem>

    <listitem>
     <para>
<!--
      Make server startup deal properly with the case that
      <function>shmget()</function> returns <literal>EINVAL</literal> for an existing
      shared memory segment (Tom)
-->
サーバ起動時に、既存の共有メモリセグメントに対して<function>shmget()</function>が<literal>EINVAL</literal>を返す状況を適切に扱うようにしました。(Tom)
     </para>

     <para>
<!--
      This behavior has been observed on BSD-derived kernels including macOS.
      It resulted in an entirely-misleading startup failure complaining that
      the shared memory request size was too large.
-->
この振舞いはmacOSを含むBSD派生のカーネルにおいて観測されました。
共有メモリ要求サイズが大きすぎるという警告の、完全に間違った起動失敗という結果になりました。
     </para>
    </listitem>

    <listitem>
     <para>
<!--
      Avoid possible crashes in syslogger process on Windows (Heikki)
-->
Windowsにおけるsysloggerプロセス内のクラッシュする可能性を防ぎます。(Heikki)
     </para>
    </listitem>

    <listitem>
     <para>
<!--
      Deal more robustly with incomplete time zone information in the
      Windows registry (Magnus)
-->
Windowsレジストリにおいて不完全な時間帯情報をより堅牢に扱います。(Magnus)
     </para>
    </listitem>

    <listitem>
     <para>
<!--
      Update the set of known Windows time zone names (Magnus)
-->
Windowsにおいて既知の時間帯名称の集合を更新しました。(Magnus)
     </para>
    </listitem>

    <listitem>
     <para>
<<<<<<< HEAD
      Update time zone data files to <application>tzdata</application> release 2010j
=======
<!--
      Update time zone data files to <application>tzdata</> release 2010j
>>>>>>> doc_ja_10_premerge
      for DST law changes in Argentina, Australian Antarctic, Bangladesh,
      Mexico, Morocco, Pakistan, Palestine, Russia, Syria, Tunisia;
      also historical corrections for Taiwan.
-->
時間帯データファイルを<application>tzdata</application> release 2010jに更新しました。
アルゼンチン、南極におけるオーストラリア、バングラデシュ、メキシコ、モロッコ、パキスタン、パレスチナ、ロシア、シリア、チュニジアにおける夏時間規則の変更、および、台湾の歴史的な修正が含まれます。
     </para>

     <para>
<<<<<<< HEAD
      Also, add <literal>PKST</literal> (Pakistan Summer Time) to the default set of
=======
<!--
      Also, add <literal>PKST</> (Pakistan Summer Time) to the default set of
>>>>>>> doc_ja_10_premerge
      timezone abbreviations.
-->
また、デフォルトの時間帯省略形の集合に<literal>PKST</literal>(パキスタン夏時間)を追加しました。
     </para>
    </listitem>

   </itemizedlist>

  </sect2>
 </sect1>

 <sect1 id="release-8-2-16">
<!--
  <title>Release 8.2.16</title>
-->
  <title>リリース8.2.16</title>

  <formalpara>
<!--
  <title>Release date:</title>
-->
  <title>リリース日:</title>
  <para>2010-03-15</para>
  </formalpara>

  <para>
<!--
   This release contains a variety of fixes from 8.2.15.
   For information about new features in the 8.2 major release, see
   <xref linkend="release-8-2"/>.
<<<<<<< HEAD
=======
-->
このリリースは8.2.15に対し、各種の不具合を修正したものです。
8.2メジャーリリースにおける新機能については<xref linkend="release-8-2"/>を参照してください。
>>>>>>> doc_ja_10_premerge
  </para>

  <sect2>
<!--
   <title>Migration to Version 8.2.16</title>
-->
   <title>バージョン8.2.16への移行</title>

   <para>
<!--
    A dump/restore is not required for those running 8.2.X.
    However, if you are upgrading from a version earlier than 8.2.14,
    see <xref linkend="release-8-2-14"/>.
<<<<<<< HEAD
=======
-->
8.2.Xからの移行ではダンプ/リストアは不要です。
しかしながら、8.2.14以前のバージョンからアップデートする場合は<xref linkend="release-8-2-14"/>を参照してください。
>>>>>>> doc_ja_10_premerge
   </para>

  </sect2>

  <sect2>
<!--
   <title>Changes</title>
-->
   <title>変更点</title>

   <itemizedlist>

    <listitem>
     <para>
<<<<<<< HEAD
      Add new configuration parameter <varname>ssl_renegotiation_limit</varname> to
=======
<!--
      Add new configuration parameter <varname>ssl_renegotiation_limit</> to
>>>>>>> doc_ja_10_premerge
      control how often we do session key renegotiation for an SSL connection
      (Magnus)
-->
SSL接続においてセッションキーの再調停をどの程度の頻度で行うかを制御する<varname>ssl_renegotiation_limit</varname>設定パラメータを新しく追加しました。(Magnus)
     </para>

     <para>
<!--
      This can be set to zero to disable renegotiation completely, which may
      be required if a broken SSL library is used.  In particular, some
      vendors are shipping stopgap patches for CVE-2009-3555 that cause
      renegotiation attempts to fail.
-->
これをゼロに設定することで、再調停を完全に無効にすることができます。
これは壊れたSSLライブラリを使用している場合に必要になる可能性があります。
具体的には一部のベンダは再調停の試行を失敗させるCVE-2009-3555に対する一時しのぎのパッチを提供しています。
     </para>
    </listitem>

    <listitem>
     <para>
<!--
      Fix possible deadlock during backend startup (Tom)
-->
バックエンド起動時のデッドロックの可能性を修正しました。(Tom)
     </para>
    </listitem>

    <listitem>
     <para>
<!--
      Fix possible crashes due to not handling errors during relcache reload
      cleanly (Tom)
-->
relcacheの再読み込みがきれいに行われている間にエラーを扱わないことが原因でクラッシュする可能性を修正しました。(Tom)
     </para>
    </listitem>

    <listitem>
     <para>
<!--
      Fix possible crashes when trying to recover from a failure in
      subtransaction start (Tom)
-->
副トランザクション起動時における失敗からのリカバリを試行する時にクラッシュする可能性を修正しました。(Tom)
     </para>
    </listitem>

    <listitem>
     <para>
<!--
      Fix server memory leak associated with use of savepoints and a client
      encoding different from server's encoding (Tom)
-->
セーブポイントの使用およびサーバの符号化方式と異なるクライアント符号化方式に関連したサーバのメモリリークを修正しました。(Tom)
     </para>
    </listitem>

    <listitem>
     <para>
<!--
      Fix incorrect WAL data emitted during end-of-recovery cleanup of a GIST
      index page split (Yoichi Hirai)
-->
GiSTインデックスページ分割のリカバリ終了時の整理において生成される不正なWALデータを修正しました。(Yoichi Hirai)
     </para>

     <para>
<!--
      This would result in index corruption, or even more likely an error
      during WAL replay, if we were unlucky enough to crash during
      end-of-recovery cleanup after having completed an incomplete GIST
      insertion.
-->
これはインデックスの破損という結果となり、WAL再生中にエラーが発生します。
もし運が悪ければ、未完全のGiST挿入に成功した後にリカバリ終了時の整理が行われている時にクラッシュしてしまいます。
     </para>
    </listitem>

    <listitem>
     <para>
<<<<<<< HEAD
      Make <function>substring()</function> for <type>bit</type> types treat any negative
      length as meaning <quote>all the rest of the string</quote> (Tom)
=======
<!--
      Make <function>substring()</> for <type>bit</> types treat any negative
      length as meaning <quote>all the rest of the string</> (Tom)
-->
<type>bit</type>型の<function>substring()</function>では、いかなる負の長さも<quote>文字列の残りすべて</quote>を意味するようにしました。(Tom)
>>>>>>> doc_ja_10_premerge
     </para>

     <para>
<!--
      The previous coding treated only -1 that way, and would produce an
      invalid result value for other negative values, possibly leading to
      a crash (CVE-2010-0442).
-->
これまでのコードでは-1のみを上のように扱い、他の負の値についてはクラッシュする可能性がある無効な結果値を生成しました。(CVE-2010-0442)
     </para>
    </listitem>

    <listitem>
     <para>
<!--
      Fix integer-to-bit-string conversions to handle the first fractional
      byte correctly when the output bit width is wider than the given
      integer by something other than a multiple of 8 bits (Tom)
-->
出力ビット幅が指定された整数よりも広く、それが8ビットの倍数以外である場合、先頭の端数のバイトを正確に扱うように整数からビット列への変換を修正しました。(Tom)
     </para>
    </listitem>

    <listitem>
     <para>
<!--
      Fix some cases of pathologically slow regular expression matching (Tom)
-->
正規表現マッチが異常なまでに低速になる一部の状況を修正しました。(Tom)
     </para>
    </listitem>

    <listitem>
     <para>
<<<<<<< HEAD
      Fix the <literal>STOP WAL LOCATION</literal> entry in backup history files to
=======
<!--
      Fix the <literal>STOP WAL LOCATION</> entry in backup history files to
>>>>>>> doc_ja_10_premerge
      report the next WAL segment's name when the end location is exactly at a
      segment boundary (Itagaki Takahiro)
-->
終了位置が正確にセグメント境界であった場合、次のWALセグメント名を報告するようにバックアップ履歴ファイル内の<literal>STOP WAL LOCATION</literal>を修正しました。(Itagaki Takahiro)
     </para>
    </listitem>

    <listitem>
     <para>
<!--
      Fix some more cases of temporary-file leakage (Heikki)
-->
一時ファイルが漏洩する一部の状況を修正しました。(Heikki)
     </para>

     <para>
<!--
      This corrects a problem introduced in the previous minor release.
      One case that failed is when a plpgsql function returning set is
      called within another function's exception handler.
-->
これは前のマイナーリリースでもたらされた問題を修正します。
失敗する状況の1つは集合を返すplpgsql関数が他の関数の例外ハンドラ内で呼び出された場合です。
     </para>
    </listitem>

    <listitem>
     <para>
<!--
      Improve constraint exclusion processing of boolean-variable cases,
      in particular make it possible to exclude a partition that has a
<<<<<<< HEAD
      <quote>bool_column = false</quote> constraint (Tom)
=======
      <quote>bool_column = false</> constraint (Tom)
-->
論理値変数の場合の制約による排他処理を改良しました。
具体的には、<quote>bool_column = false</quote>制約を持つパーティションを除外できるようになりました。(Tom)
>>>>>>> doc_ja_10_premerge
     </para>
    </listitem>

    <listitem>
     <para>
<<<<<<< HEAD
      When reading <filename>pg_hba.conf</filename> and related files, do not treat
      <literal>@something</literal> as a file inclusion request if the <literal>@</literal>
      appears inside quote marks; also, never treat <literal>@</literal> by itself
=======
<!--
      When reading <filename>pg_hba.conf</> and related files, do not treat
      <literal>@something</> as a file inclusion request if the <literal>@</>
      appears inside quote marks; also, never treat <literal>@</> by itself
>>>>>>> doc_ja_10_premerge
      as a file inclusion request (Tom)
-->
<filename>pg_hba.conf</filename>とその関連ファイルを読み取る時、<literal>@</literal>が引用符記号の内部にある場合に<literal>@something</literal>をファイル包含要求と扱わないようにしました。
また、<literal>@</literal>自身をファイル包含要求として扱いません。(Tom)
     </para>

     <para>
<!--
      This prevents erratic behavior if a role or database name starts with
      <literal>@</literal>.  If you need to include a file whose path name
      contains spaces, you can still do so, but you must write
      <literal>@"/path to/file"</literal> rather than putting the quotes around
      the whole construct.
-->
ロールまたはデータベース名が<literal>@</literal>から始まる場合の一定しない動作を防止します。
空白文字を含むパス名のファイルを包含する必要がある場合、まだ実現させることはできますが、式全体を引用符でくくるのではなく<literal>@"/path to/file"</literal>と記述しなければなりません。
     </para>
    </listitem>

    <listitem>
     <para>
<!--
      Prevent infinite loop on some platforms if a directory is named as
      an inclusion target in <filename>pg_hba.conf</filename> and related files
      (Tom)
-->
ディレクトリが<filename>pg_hba.conf</filename>とその関連ファイル内で含有対象と指定されていた場合の一部のプラットフォームにおける無限ループを防止します。(Tom)
     </para>
    </listitem>

    <listitem>
     <para>
<<<<<<< HEAD
      Fix possible infinite loop if <function>SSL_read</function> or
      <function>SSL_write</function> fails without setting <varname>errno</varname> (Tom)
=======
<!--
      Fix possible infinite loop if <function>SSL_read</> or
      <function>SSL_write</> fails without setting <varname>errno</> (Tom)
-->
<function>SSL_read</function>または<function>SSL_write</function>が<varname>errno</varname>を設定することなく失敗した場合に無限ループする可能性を修正しました。(Tom)
>>>>>>> doc_ja_10_premerge
     </para>

     <para>
<!--
      This is reportedly possible with some Windows versions of
<<<<<<< HEAD
      <application>OpenSSL</application>.
=======
      <application>openssl</>.
-->
一部の報告では<application>openssl</application>の一部のWindows版で発生する可能性がありました。
>>>>>>> doc_ja_10_premerge
     </para>
    </listitem>

    <listitem>
     <para>
<<<<<<< HEAD
      Fix <application>psql</application>'s <literal>numericlocale</literal> option to not
=======
<!--
      Fix <application>psql</>'s <literal>numericlocale</> option to not
>>>>>>> doc_ja_10_premerge
      format strings it shouldn't in latex and troff output formats (Heikki)
-->
latexおよびtroff出力書式では行うべきではない文字列の書式付けを行わないように<application>psql</application>の<literal>numericlocale</literal>オプションを修正しました。(Heikki)
     </para>
    </listitem>

    <listitem>
     <para>
<<<<<<< HEAD
      Make <application>psql</application> return the correct exit status (3) when
      <literal>ON_ERROR_STOP</literal> and <literal>--single-transaction</literal> are
      both specified and an error occurs during the implied <command>COMMIT</command>
=======
<!--
      Make <application>psql</> return the correct exit status (3) when
      <literal>ON_ERROR_STOP</> and <literal>&#045;-single-transaction</> are
      both specified and an error occurs during the implied <command>COMMIT</>
>>>>>>> doc_ja_10_premerge
      (Bruce)
-->
<literal>ON_ERROR_STOP</literal>と<literal>--single-transaction</literal>の両方が指定され、かつ、暗黙的な<command>COMMIT</command>時にエラーが起きた場合に、<application>psql</application>が正しい終了コード(3)を返すようにしました。(Bruce)
     </para>
    </listitem>

    <listitem>
     <para>
<!--
      Fix plpgsql failure in one case where a composite column is set to NULL
      (Tom)
-->
複合列がNULLに設定される場合にplpgsqlが失敗することを修正しました。(Tom)
     </para>
    </listitem>

    <listitem>
     <para>
<!--
      Fix possible failure when calling PL/Perl functions from PL/PerlU
      or vice versa (Tim Bunce)
-->
PL/PerlUからのPL/Perl関数の呼び出し、およびその逆の場合において失敗する可能性を修正しました。(Tim Bunce)
     </para>
    </listitem>

    <listitem>
     <para>
<<<<<<< HEAD
      Add <literal>volatile</literal> markings in PL/Python to avoid possible
=======
<!--
      Add <literal>volatile</> markings in PL/Python to avoid possible
>>>>>>> doc_ja_10_premerge
      compiler-specific misbehavior (Zdenek Kotala)
-->
コンパイラ固有の誤動作が起こる可能性を防ぐためにPL/Python内に<literal>volatile</literal>記号を追加しました。(Zdenek Kotala)
     </para>
    </listitem>

    <listitem>
     <para>
<!--
      Ensure PL/Tcl initializes the Tcl interpreter fully (Tom)
-->
PL/Tclは確実にTclインタプリタを完全に初期化します。(Tom)
     </para>

     <para>
<!--
      The only known symptom of this oversight is that the Tcl
<<<<<<< HEAD
      <literal>clock</literal> command misbehaves if using Tcl 8.5 or later.
=======
      <literal>clock</> command misbehaves if using Tcl 8.5 or later.
-->
このミスの既知の兆候は、Tcl 8.5以降を使用している場合のTclの<literal>clock</literal>コマンドの誤動作だけです。
>>>>>>> doc_ja_10_premerge
     </para>
    </listitem>

    <listitem>
     <para>
<<<<<<< HEAD
      Prevent crash in <filename>contrib/dblink</filename> when too many key
      columns are specified to a <function>dblink_build_sql_*</function> function
=======
<!--
      Prevent crash in <filename>contrib/dblink</> when too many key
      columns are specified to a <function>dblink_build_sql_*</> function
>>>>>>> doc_ja_10_premerge
      (Rushabh Lathia, Joe Conway)
-->
<function>dblink_build_sql_*</function>関数であまりに多くのキー列が指定された場合の<filename>contrib/dblink</filename>のクラッシュを防止します。(Rushabh Lathia, Joe Conway)
     </para>
    </listitem>

    <listitem>
     <para>
<<<<<<< HEAD
      Fix assorted crashes in <filename>contrib/xml2</filename> caused by sloppy
=======
<!--
      Fix assorted crashes in <filename>contrib/xml2</> caused by sloppy
>>>>>>> doc_ja_10_premerge
      memory management (Tom)
-->
ずさんなメモリ管理によって引き起こる<filename>contrib/xml2</filename>の雑多なクラッシュを修正しました。(Tom)
     </para>
    </listitem>

    <listitem>
     <para>
<<<<<<< HEAD
      Make building of <filename>contrib/xml2</filename> more robust on Windows
=======
<!--
      Make building of <filename>contrib/xml2</> more robust on Windows
>>>>>>> doc_ja_10_premerge
      (Andrew)
-->
Windowsにおいて<filename>contrib/xml2</filename>の構築をより堅牢にしました。(Andrew)
     </para>
    </listitem>

    <listitem>
     <para>
<!--
      Fix race condition in Windows signal handling (Radu Ilie)
-->
Windowsのシグナル処理における競合状態を修正しました。(Radu Ilie)
     </para>

     <para>
<<<<<<< HEAD
      One known symptom of this bug is that rows in <structname>pg_listener</structname>
=======
<!--
      One known symptom of this bug is that rows in <structname>pg_listener</>
>>>>>>> doc_ja_10_premerge
      could be dropped under heavy load.
-->
この不具合の兆候として既知のものは、負荷が高い状況において<structname>pg_listener</structname>内の行が削除されることです。
     </para>
    </listitem>

    <listitem>
     <para>
<<<<<<< HEAD
      Update time zone data files to <application>tzdata</application> release 2010e
=======
<!--
      Update time zone data files to <application>tzdata</> release 2010e
>>>>>>> doc_ja_10_premerge
      for DST law changes in Bangladesh, Chile, Fiji, Mexico, Paraguay, Samoa.
-->
時間帯データファイルを<application>tzdata</application> release 2010eに更新しました。
バングラデシュ、チリ、フィジー、メキシコ、パラグアイ、サモアにおける夏時間規則の変更が含まれます。
     </para>
    </listitem>

   </itemizedlist>

  </sect2>
 </sect1>

 <sect1 id="release-8-2-15">
<!--
  <title>Release 8.2.15</title>
-->
  <title>リリース8.2.15</title>

  <formalpara>
<!--
  <title>Release date:</title>
-->
  <title>リリース日:</title>
  <para>2009-12-14</para>
  </formalpara>

  <para>
<!--
   This release contains a variety of fixes from 8.2.14.
   For information about new features in the 8.2 major release, see
   <xref linkend="release-8-2"/>.
<<<<<<< HEAD
=======
-->
このリリースは8.2.14に対し、各種の不具合を修正したものです。
8.2メジャーリリースにおける新機能については<xref linkend="release-8-2"/>を参照してください。
>>>>>>> doc_ja_10_premerge
  </para>

  <sect2>
<!--
   <title>Migration to Version 8.2.15</title>
-->
   <title>バージョン8.2.15への移行</title>

   <para>
<!--
    A dump/restore is not required for those running 8.2.X.
    However, if you are upgrading from a version earlier than 8.2.14,
    see <xref linkend="release-8-2-14"/>.
<<<<<<< HEAD
=======
-->
8.2.Xからの移行ではダンプ/リストアは不要です。
しかしながら、8.2.14以前のバージョンからアップデートする場合は<xref linkend="release-8-2-14"/>を参照してください。
>>>>>>> doc_ja_10_premerge
   </para>

  </sect2>

  <sect2>
<!--
   <title>Changes</title>
-->
   <title>変更点</title>

   <itemizedlist>

    <listitem>
     <para>
<!--
      Protect against indirect security threats caused by index functions
      changing session-local state (Gurjeet Singh, Tom)
-->
セッション固有の状態を変更するインデックス関数により引き起こされる間接的なセキュリティ脅威から保護します。(Gurjeet Singh, Tom)
     </para>

     <para>
<!--
      This change prevents allegedly-immutable index functions from possibly
      subverting a superuser's session (CVE-2009-4136).
-->
この変更により不変インデックス関数がスーパーユーザのセッションを破壊する可能性を防ぎます。(CVE-2009-4136)
     </para>
    </listitem>

    <listitem>
     <para>
<!--
      Reject SSL certificates containing an embedded null byte in the common
      name (CN) field (Magnus)
-->
ヌルバイトが埋め込まれたコモンネーム（CN）フィールドをもつSSL証明書を拒絶します。(Magnus)
     </para>

     <para>
<!--
      This prevents unintended matching of a certificate to a server or client
      name during SSL validation (CVE-2009-4034).
-->
これは、SSL検証においてサーバまたはクライアント名に対する証明書が不正に一致しないようにします。(CVE-2009-4034)
     </para>
    </listitem>

    <listitem>
     <para>
<!--
      Fix possible crash during backend-startup-time cache initialization (Tom)
-->
バックエンド起動時のキャッシュ初期化の間でクラッシュする可能性を修正しました。(Tom)
     </para>
    </listitem>

    <listitem>
     <para>
<<<<<<< HEAD
      Prevent signals from interrupting <literal>VACUUM</literal> at unsafe times
=======
<!--
      Prevent signals from interrupting <literal>VACUUM</> at unsafe times
>>>>>>> doc_ja_10_premerge
      (Alvaro)
-->
安全ではない時点での<literal>VACUUM</literal>を中断するシグナルを防止します。 (Alvaro)
     </para>

     <para>
<<<<<<< HEAD
      This fix prevents a PANIC if a <literal>VACUUM FULL</literal> is canceled
=======
<!--
      This fix prevents a PANIC if a <literal>VACUUM FULL</> is canceled
>>>>>>> doc_ja_10_premerge
      after it's already committed its tuple movements, as well as transient
      errors if a plain <literal>VACUUM</literal> is interrupted after having
      truncated the table.
-->
この修正により、<literal>VACUUM FULL</literal>がすでにタプルの移動をコミットした後にキャンセルされた場合のパニックや、通常の<literal>VACUUM</literal>がテーブルを切り詰めた後に割り込みを受けた場合の一時的なエラーを防止します。
     </para>
    </listitem>

    <listitem>
     <para>
<!--
      Fix possible crash due to integer overflow in hash table size
      calculation (Tom)
-->
ハッシュテーブルサイズの計算における整数オーバーフローによるクラッシュの可能性を修正しました。(Tom)
     </para>

     <para>
<!--
      This could occur with extremely large planner estimates for the size of
      a hashjoin's result.
-->
これは、ハッシュ結合の結果のプランナの推定サイズが極端に大きい場合に発生することがありました。
     </para>
    </listitem>

    <listitem>
     <para>
<<<<<<< HEAD
      Fix very rare crash in <type>inet</type>/<type>cidr</type> comparisons (Chris
=======
<!--
      Fix very rare crash in <type>inet</>/<type>cidr</> comparisons (Chris
>>>>>>> doc_ja_10_premerge
      Mikkelson)
-->
<type>inet</type>/<type>cidr</type>の比較における非常にまれなクラッシュを修正しました。 (Chris Mikkelson)
     </para>
    </listitem>

    <listitem>
     <para>
<!--
      Ensure that shared tuple-level locks held by prepared transactions are
      not ignored (Heikki)
-->
準備されたトランザクションで保持されるタプルレベルの共有ロックを確実に無視しないようにしました。 (Heikki)
     </para>
    </listitem>

    <listitem>
     <para>
<!--
      Fix premature drop of temporary files used for a cursor that is accessed
      within a subtransaction (Heikki)
-->
副トランザクション内でアクセスされるカーソルで使用される一時ファイルの早すぎる削除を修正しました。 (Heikki)
     </para>
    </listitem>

    <listitem>
     <para>
<!--
      Fix incorrect logic for GiST index page splits, when the split depends
      on a non-first column of the index (Paul Ramsey)
-->
GiSTインデックスページ分割において、分割がインデックスの最初の列以外に依存する場合の不正なロジックを修正しました。(Paul Ramsey)
     </para>
    </listitem>

    <listitem>
     <para>
<!--
      Don't error out if recycling or removing an old WAL file fails at the
      end of checkpoint (Heikki)
-->
チェックポイントの最後で古いWALファイルの回収や削除が失敗した場合にエラーを出力しません。(Heikki)
     </para>

     <para>
<!--
      It's better to treat the problem as non-fatal and allow the checkpoint
      to complete.  Future checkpoints will retry the removal.  Such problems
      are not expected in normal operation, but have been seen to be
      caused by misdesigned Windows anti-virus and backup software.
-->
致命的ではないものと扱い、チェックポイントを完了させることができるようにする方が優れています。
将来のチェックポイントでは削除を再試行します。
こうした問題は通常の操作では想定されませんが、うまく設計されていないWindowsのアンチウィルスソフトウェアやバックアップソフトウェアにより現れることがあります。
     </para>
    </listitem>

    <listitem>
     <para>
<!--
      Ensure WAL files aren't repeatedly archived on Windows (Heikki)
-->
WindowsにおいてWALファイルが繰り返しアーカイブされないようにしました。 (Heikki)
     </para>

     <para>
<!--
      This is another symptom that could happen if some other process
      interfered with deletion of a no-longer-needed file.
-->
別の症状として、一部の他のプロセスが不要となったファイルの削除に干渉する場合にも発生します。
     </para>
    </listitem>

    <listitem>
     <para>
<!--
      Fix PAM password processing to be more robust (Tom)
-->
PAMパスワード処理をより堅牢に修正しました。(Tom)
     </para>

     <para>
<!--
      The previous code is known to fail with the combination of the Linux
      <literal>pam_krb5</literal> PAM module with Microsoft Active Directory as the
      domain controller.  It might have problems elsewhere too, since it was
      making unjustified assumptions about what arguments the PAM stack would
      pass to it.
-->
以前のコードでは、Linuxの<literal>pam_krb5</literal> PAMモジュールとドメインコントローラとしてのMicrosoft Active Directoryを組み合わせると失敗することが知られていました。
PAMスタックに渡される引数に関する正当ではない仮定を作成することであるため、どこかで問題になるかもしれません。
     </para>
    </listitem>

    <listitem>
     <para>
<!--
      Fix processing of ownership dependencies during <literal>CREATE OR
<<<<<<< HEAD
      REPLACE FUNCTION</literal> (Tom)
=======
      REPLACE FUNCTION</> (Tom)
-->
<literal>CREATE OR REPLACE FUNCTION</literal>における所有権限の依存関係の処理を修正しました。(Tom)
>>>>>>> doc_ja_10_premerge
     </para>
    </listitem>

    <listitem>
     <para>
<<<<<<< HEAD
      Fix bug with calling <literal>plperl</literal> from <literal>plperlu</literal> or vice
=======
<!--
      Fix bug with calling <literal>plperl</> from <literal>plperlu</> or vice
>>>>>>> doc_ja_10_premerge
      versa (Tom)
-->
<literal>plperlu</literal>から<literal>plperl</literal>の呼び出し、またはその逆における不具合を修正しました。(Tom)
     </para>

     <para>
<!--
      An error exit from the inner function could result in crashes due to
      failure to re-select the correct Perl interpreter for the outer function.
-->
内部の関数からのエラー終了が、外側の関数用のPerlインタプリタを正しく再選択できずにクラッシュをもたらす可能性がありました。
     </para>
    </listitem>

    <listitem>
     <para>
<!--
      Fix session-lifespan memory leak when a PL/Perl function is redefined
      (Tom)
-->
PL/Perl関数が再定義された時のセッション有効期間のメモリリークを修正しました。(Tom)
     </para>
    </listitem>

    <listitem>
     <para>
<!--
      Ensure that Perl arrays are properly converted to
      <productname>PostgreSQL</productname> arrays when returned by a set-returning
      PL/Perl function (Andrew Dunstan, Abhijit Menon-Sen)
-->
集合を返すPL/Perl関数により返される場合Perl配列が適切に<productname>PostgreSQL</productname>配列に返還されることを確実にしました。(Andrew Dunstan, Abhijit Menon-Sen)
     </para>

     <para>
<!--
      This worked correctly already for non-set-returning functions.
-->
集合以外を返す関数ではすでに正しく動作しました。
     </para>
    </listitem>

    <listitem>
     <para>
<!--
      Fix rare crash in exception processing in PL/Python (Peter)
-->
PL/Pythonの例外処理におけるまれなクラッシュを修正しました。(Peter)
     </para>
    </listitem>

    <listitem>
     <para>
<<<<<<< HEAD
      Ensure <application>psql</application>'s flex module is compiled with the correct
=======
<!--
      Ensure <application>psql</>'s flex module is compiled with the correct
>>>>>>> doc_ja_10_premerge
      system header definitions (Tom)
-->
<application>psql</application>のflexモジュールが正しいシステムヘッダファイルを使用してコンパイルされることを確実にしました。(Tom)
     </para>

     <para>
<!--
      This fixes build failures on platforms where
<<<<<<< HEAD
      <literal>--enable-largefile</literal> causes incompatible changes in the
=======
      <literal>&#045;-enable-largefile</> causes incompatible changes in the
>>>>>>> doc_ja_10_premerge
      generated code.
-->
これは、<literal>--enable-largefile</literal>が生成されたコード内に非互換の変更を引き起こすプラットフォームにおける構築失敗を修正します。
     </para>
    </listitem>

    <listitem>
     <para>
<<<<<<< HEAD
      Make the postmaster ignore any <literal>application_name</literal> parameter in
=======
<!--
      Make the postmaster ignore any <literal>application_name</> parameter in
>>>>>>> doc_ja_10_premerge
      connection request packets, to improve compatibility with future libpq
      versions (Tom)
-->
今後のバージョンのlibpqとの互換性を高めるために、postmasterが接続要求パケットにおける<literal>application_name</literal>パラメータをすべて無視するようにしました。(Tom)
     </para>
    </listitem>

    <listitem>
     <para>
<!--
      Update the timezone abbreviation files to match current reality (Joachim
      Wieland)
-->
最新の現実に合うように時間帯省略形ファイルを更新しました。(Joachim Wieland)
     </para>

     <para>
<<<<<<< HEAD
      This includes adding <literal>IDT</literal> and <literal>SGT</literal> to the default
=======
<!--
      This includes adding <literal>IDT</> and <literal>SGT</> to the default
>>>>>>> doc_ja_10_premerge
      timezone abbreviation set.
-->
デフォルト時間帯群に<literal>IDT</literal>の追加が含まれます。
     </para>
    </listitem>

    <listitem>
     <para>
<<<<<<< HEAD
      Update time zone data files to <application>tzdata</application> release 2009s
=======
<!--
      Update time zone data files to <application>tzdata</> release 2009s
>>>>>>> doc_ja_10_premerge
      for DST law changes in Antarctica, Argentina, Bangladesh, Fiji,
      Novokuznetsk, Pakistan, Palestine, Samoa, Syria; also historical
      corrections for Hong Kong.
-->
時間帯データファイルを<application>tzdata</application> release 2009sまで更新しました。
南極、アルゼンチン、バングラデシュ、フィジー、ノヴォクズネツク、パキスタン、パレスチナ、サモア、シリアにおける夏時間規則の変更、および香港に関する歴史的な修正が含まれます。
     </para>
    </listitem>

   </itemizedlist>

  </sect2>
 </sect1>

 <sect1 id="release-8-2-14">
<!--
  <title>Release 8.2.14</title>
-->
  <title>リリース8.2.14</title>

  <formalpara>
<!--
  <title>Release date:</title>
-->
  <title>リリース日:</title>
  <para>2009-09-09</para>
  </formalpara>

  <para>
<!--
   This release contains a variety of fixes from 8.2.13.
   For information about new features in the 8.2 major release, see
   <xref linkend="release-8-2"/>.
<<<<<<< HEAD
=======
-->
このリリースは8.2.13に対し、各種の不具合を修正したものです。
8.2メジャーリリースにおける新機能については<xref linkend="release-8-2"/>を参照してください。
>>>>>>> doc_ja_10_premerge
  </para>

  <sect2>
<!--
   <title>Migration to Version 8.2.14</title>
-->
   <title>バージョン8.2.14への移行</title>

   <para>
<!--
    A dump/restore is not required for those running 8.2.X.
    However, if you have any hash indexes on <type>interval</type> columns,
    you must <command>REINDEX</command> them after updating to 8.2.14.
    Also, if you are upgrading from a version earlier than 8.2.11,
    see <xref linkend="release-8-2-11"/>.
<<<<<<< HEAD
=======
-->
8.2.Xからの移行ではダンプ/リストアは不要です。
しかしながら、<type>interval</type>列に対するハッシュインデックスを持つ場合は8.2.14にアップデートした後にそれらを<command>REINDEX</command>しなければなりません。
また、8.2.11より前のバージョンからアップグレードする場合は、<xref linkend="release-8-2-11"/>を参照してください。
>>>>>>> doc_ja_10_premerge
   </para>

  </sect2>

  <sect2>
<!--
   <title>Changes</title>
-->
   <title>変更点</title>

   <itemizedlist>

    <listitem>
     <para>
<<<<<<< HEAD
      Force WAL segment switch during <function>pg_start_backup()</function>
=======
<!--
      Force WAL segment switch during <function>pg_start_backup()</>
>>>>>>> doc_ja_10_premerge
      (Heikki)
-->
<function>pg_start_backup()</function>実行中にWALセグメントスイッチを強制します。(Heikki)
     </para>

     <para>
<!--
      This avoids corner cases that could render a base backup unusable.
-->
これによりベースバックアップが使用不可となる可能性がある境界状態を防止します。
     </para>
    </listitem>

    <listitem>
     <para>
<<<<<<< HEAD
      Disallow <command>RESET ROLE</command> and <command>RESET SESSION
      AUTHORIZATION</command> inside security-definer functions (Tom, Heikki)
=======
<!--
      Disallow <command>RESET ROLE</> and <command>RESET SESSION
      AUTHORIZATION</> inside security-definer functions (Tom, Heikki)
-->
security-definer関数内部の<command>RESET ROLE</command>および<command>RESET SESSION AUTHORIZATION</command>を不許可としました。(Tom, Heikki)
>>>>>>> doc_ja_10_premerge
     </para>

     <para>
<!--
      This covers a case that was missed in the previous patch that
      disallowed <command>SET ROLE</command> and <command>SET SESSION
      AUTHORIZATION</command> inside security-definer functions.
      (See CVE-2007-6600)
-->
これは、security-definer関数内部における<command>SET ROLE</command>と<command>SET SESSION AUTHORIZATION</command>を不許可にする過去のパッチ（CVE-2007-6600参照）で抜けていたものを補うものです。
     </para>
    </listitem>

    <listitem>
     <para>
<<<<<<< HEAD
      Make <command>LOAD</command> of an already-loaded loadable module
=======
<!--
      Make <command>LOAD</> of an already-loaded loadable module
>>>>>>> doc_ja_10_premerge
      into a no-op (Tom)
-->
既にロードされたロード可能モジュールに対する<command>LOAD</command>を何も行わないようにしました。(Tom)
     </para>

     <para>
<<<<<<< HEAD
      Formerly, <command>LOAD</command> would attempt to unload and re-load the
=======
<!--
      Formerly, <command>LOAD</> would attempt to unload and re-load the
>>>>>>> doc_ja_10_premerge
      module, but this is unsafe and not all that useful.
-->
これまでは、<command>LOAD</command>はそのモジュールをアンロードし、再ロードしようとしました。
ですが、これは安全ではなく、かつ、まったく意味がないものでした。
     </para>
    </listitem>

    <listitem>
     <para>
<!--
      Disallow empty passwords during LDAP authentication (Magnus)
-->
LDAP認証における空のパスワードを許可しません。(Magnus)
     </para>
    </listitem>

    <listitem>
     <para>
<!--
      Fix handling of sub-SELECTs appearing in the arguments of
      an outer-level aggregate function (Tom)
-->
外側の集約関数の引数に現れる副SELECTの扱いを修正しました。(Tom)
     </para>
    </listitem>

    <listitem>
     <para>
<!--
      Fix bugs associated with fetching a whole-row value from the
      output of a Sort or Materialize plan node (Tom)
-->
ソートまたはマテリアライズ計画ノードの出力から行全体の値の抽出する処理に関連した不具合を修正しました。(Tom)
     </para>
    </listitem>

    <listitem>
     <para>
<!--
      Revert planner change that disabled partial-index and constraint
      exclusion optimizations when there were more than 100 clauses in
      an AND or OR list (Tom)
-->
100句を超えるANDまたはORリストが存在した場合に部分インデックスと制約による除外の最適化を無効にするプランナの変更を元に戻しました。(Tom)
     </para>
    </listitem>

    <listitem>
     <para>
<<<<<<< HEAD
      Fix hash calculation for data type <type>interval</type> (Tom)
=======
<!--
      Fix hash calculation for data type <type>interval</> (Tom)
-->
<type>interval</type>データ型のハッシュ計算を修正しました。(Tom)
>>>>>>> doc_ja_10_premerge
     </para>

     <para>
<!--
      This corrects wrong results for hash joins on interval values.
      It also changes the contents of hash indexes on interval columns.
      If you have any such indexes, you must <command>REINDEX</command> them
      after updating.
-->
これは、時間間隔値に対するハッシュ結合が間違った結果を生成しないように修正します。
また、時間間隔型の列に対するハッシュインデックスの内容も変更します。
もしこうしたインデックスがあれば、アップデートの後にそれらを<command>REINDEX</command>する必要があります。
     </para>
    </listitem>

    <listitem>
     <para>
<<<<<<< HEAD
      Treat <function>to_char(..., 'TH')</function> as an uppercase ordinal
      suffix with <literal>'HH'</literal>/<literal>'HH12'</literal> (Heikki)
     </para>

     <para>
      It was previously handled as <literal>'th'</literal> (lowercase).
=======
<!--
      Treat <function>to_char(..., 'TH')</> as an uppercase ordinal
      suffix with <literal>'HH'</>/<literal>'HH12'</> (Heikki)
-->
<function>to_char(..., 'TH')</function>を<literal>'HH'</literal>/<literal>'HH12'</literal>の大文字の序数表現と扱います。(Heikki)
     </para>

     <para>
<!--
      It was previously handled as <literal>'th'</> (lowercase).
-->
以前は<literal>'th'</literal>（小文字）として扱われました。
>>>>>>> doc_ja_10_premerge
     </para>
    </listitem>

    <listitem>
     <para>
<<<<<<< HEAD
      Fix overflow for <literal>INTERVAL '<replaceable>x</replaceable> ms'</literal>
      when <replaceable>x</replaceable> is more than 2 million and integer
=======
<!--
      Fix overflow for <literal>INTERVAL '<replaceable>x</> ms'</literal>
      when <replaceable>x</> is more than 2 million and integer
>>>>>>> doc_ja_10_premerge
      datetimes are in use (Alex Hunsaker)
-->
<literal>INTERVAL '<replaceable>x</replaceable> ms'</literal>において<replaceable>x</replaceable>が200万を超え、かつ、整数型の日付時刻が使用された場合のオーバーフローを修正しました。(Alex Hunsaker)
     </para>
    </listitem>

    <listitem>
     <para>
<!--
      Fix calculation of distance between a point and a line segment (Tom)
-->
点と線分間の距離計算を修正しました。(Tom)
     </para>

     <para>
<!--
      This led to incorrect results from a number of geometric operators.
-->
これにより幾何演算子の一部が間違った結果を返していました。
     </para>
    </listitem>

    <listitem>
     <para>
<<<<<<< HEAD
      Fix <type>money</type> data type to work in locales where currency
=======
<!--
      Fix <type>money</> data type to work in locales where currency
>>>>>>> doc_ja_10_premerge
      amounts have no fractional digits, e.g. Japan (Itagaki Takahiro)
-->
通貨が端数桁を持たないロケール、たとえば日本、において<type>money</type>データ型が動作するように修正しました。(Itagaki Takahiro)
     </para>
    </listitem>

    <listitem>
     <para>
<!--
      Properly round datetime input like
<<<<<<< HEAD
      <literal>00:12:57.9999999999999999999999999999</literal> (Tom)
=======
      <literal>00:12:57.9999999999999999999999999999</> (Tom)
-->
<literal>00:12:57.9999999999999999999999999999</literal>のような日付時刻入力を適切に丸めます。(Tom)
>>>>>>> doc_ja_10_premerge
     </para>
    </listitem>

    <listitem>
     <para>
<!--
      Fix poor choice of page split point in GiST R-tree operator classes
      (Teodor)
-->
GiST R-tree演算子クラスにおけるページ分割点の選択を改良しました。(Teodor)
     </para>
    </listitem>

    <listitem>
     <para>
<!--
      Avoid performance degradation in bulk inserts into GIN indexes
      when the input values are (nearly) in sorted order (Tom)
-->
入力値が（ほぼ）ソート済の順序であった場合におけるGINインデックスへの一括挿入の性能劣化を防止します。(Tom)
     </para>
    </listitem>

    <listitem>
     <para>
<!--
      Correctly enforce NOT NULL domain constraints in some contexts in
      PL/pgSQL (Tom)
-->
PL/pgSQLの一部の文脈における、NOT NULLドメイン制約を正しく強制します。(Tom)
     </para>
    </listitem>

    <listitem>
     <para>
<!--
      Fix portability issues in plperl initialization (Andrew Dunstan)
-->
plperlの初期化における移植性の問題を修正しました。(Andrew Dunstan)
     </para>
    </listitem>

    <listitem>
     <para>
<<<<<<< HEAD
      Fix <application>pg_ctl</application> to not go into an infinite loop if
      <filename>postgresql.conf</filename> is empty (Jeff Davis)
=======
<!--
      Fix <application>pg_ctl</> to not go into an infinite loop if
      <filename>postgresql.conf</> is empty (Jeff Davis)
-->
<filename>postgresql.conf</filename>が空の場合に、<application>pg_ctl</application>が無限ループに陥らないように修正しました。(Jeff Davis)
>>>>>>> doc_ja_10_premerge
     </para>
    </listitem>

    <listitem>
     <para>
<<<<<<< HEAD
      Make <filename>contrib/hstore</filename> throw an error when a key or
=======
<!--
      Make <filename>contrib/hstore</> throw an error when a key or
>>>>>>> doc_ja_10_premerge
      value is too long to fit in its data structure, rather than
      silently truncating it (Andrew Gierth)
-->
キーまたは値がデータ構造に合わないほど長い場合、<filename>contrib/hstore</filename>が警告なく切り詰めるのではなく、エラーとなるようにしました。(Andrew Gierth)
     </para>
    </listitem>

    <listitem>
     <para>
<<<<<<< HEAD
      Fix <filename>contrib/xml2</filename>'s <function>xslt_process()</function> to
=======
<!--
      Fix <filename>contrib/xml2</>'s <function>xslt_process()</> to
>>>>>>> doc_ja_10_premerge
      properly handle the maximum number of parameters (twenty) (Tom)
-->
<filename>contrib/xml2</filename>の<function>xslt_process()</function>がパラメータの最大値(20)を正しく扱うように修正しました。(Tom)
     </para>
    </listitem>

    <listitem>
     <para>
<<<<<<< HEAD
      Improve robustness of <application>libpq</application>'s code to recover
      from errors during <command>COPY FROM STDIN</command> (Tom)
=======
<!--
      Improve robustness of <application>libpq</>'s code to recover
      from errors during <command>COPY FROM STDIN</> (Tom)
-->
<command>COPY FROM STDIN</command>中のエラーからの復旧するための<application>libpq</application>のコードについて、堅牢性を高めました。(Tom)
>>>>>>> doc_ja_10_premerge
     </para>
    </listitem>

    <listitem>
     <para>
<!--
      Avoid including conflicting readline and editline header files
      when both libraries are installed (Zdenek Kotala)
-->
readlineとeditlineライブラリの両方がインストールされている場合、それらの競合するヘッダファイルがincludeされないようにしました。(Zdenek Kotala)
     </para>
    </listitem>

    <listitem>
     <para>
<<<<<<< HEAD
      Update time zone data files to <application>tzdata</application> release 2009l
=======
<!--
      Update time zone data files to <application>tzdata</> release 2009l
>>>>>>> doc_ja_10_premerge
      for DST law changes in Bangladesh, Egypt, Jordan, Pakistan,
      Argentina/San_Luis, Cuba, Jordan (historical correction only),
      Mauritius, Morocco, Palestine, Syria, Tunisia.
-->
バングラデシュ、エジプト、ヨルダン、パキスタン、アルゼンチン/サンルイス、キューバ、ヨルダン（歴史的な修正のみ）、モーリシャス、モロッコ、パレスチナ、シリア、チュニジアにおける夏時間規則の変更のため、時間帯データファイルを<application>tzdata</application>リリース2009lに更新しました。
     </para>
    </listitem>

   </itemizedlist>

  </sect2>
 </sect1>

 <sect1 id="release-8-2-13">
<!--
  <title>Release 8.2.13</title>
-->
  <title>リリース8.2.13</title>

  <formalpara>
<!--
  <title>Release date:</title>
-->
  <title>リリース日:</title>
  <para>2009-03-16</para>
  </formalpara>

  <para>
<!--
   This release contains a variety of fixes from 8.2.12.
   For information about new features in the 8.2 major release, see
   <xref linkend="release-8-2"/>.
<<<<<<< HEAD
=======
-->
このリリースは8.2.12に対し、各種の不具合を修正したものです。
8.2メジャーリリースにおける新機能については<xref linkend="release-8-2"/>を参照してください。
>>>>>>> doc_ja_10_premerge
  </para>

  <sect2>
<!--
   <title>Migration to Version 8.2.13</title>
-->
   <title>バージョン8.2.13への移行</title>

   <para>
<!--
    A dump/restore is not required for those running 8.2.X.
    However, if you are upgrading from a version earlier than 8.2.11,
    see <xref linkend="release-8-2-11"/>.
<<<<<<< HEAD
=======
-->
8.2.Xからの移行ではダンプ/リストアは不要です。
しかしながら、8.2.11より前のバージョンからアップグレードする場合は、<xref linkend="release-8-2-11"/>を参照してください。
>>>>>>> doc_ja_10_premerge
   </para>

  </sect2>

  <sect2>
<!--
   <title>Changes</title>
-->
   <title>変更点</title>

   <itemizedlist>

    <listitem>
     <para>
<!--
      Prevent error recursion crashes when encoding conversion fails (Tom)
-->
符号化方式の変換に失敗した時、再帰的なエラーによるクラッシュを防止しました。(Tom)
     </para>

     <para>
<!--
      This change extends fixes made in the last two minor releases for
      related failure scenarios.  The previous fixes were narrowly tailored
      for the original problem reports, but we have now recognized that
      <emphasis>any</emphasis> error thrown by an encoding conversion function could
      potentially lead to infinite recursion while trying to report the
      error.  The solution therefore is to disable translation and encoding
      conversion and report the plain-ASCII form of any error message,
      if we find we have gotten into a recursive error reporting situation.
      (CVE-2009-0922)
-->
この変更は、最近の2つのマイナーリリースにて関連する失敗の状況に対してなされた改修を拡張したものです。
前回の修正は元の問題報告に特化したものでしたが、符号化方式変換関数で発生する<emphasis>すべての</emphasis>エラーがそのエラーを報告しようとして、無限に再帰される可能性があることが分かりました。
したがって、再帰的なエラー報告を行う状況になったことがわかった時の解決策は、変換と符号化方式を無効にし、通常のASCII形式のエラーメッセージで報告することです。
      (CVE-2009-0922)
     </para>
    </listitem>

    <listitem>
     <para>
<<<<<<< HEAD
      Disallow <command>CREATE CONVERSION</command> with the wrong encodings
=======
<!--
      Disallow <command>CREATE CONVERSION</> with the wrong encodings
>>>>>>> doc_ja_10_premerge
      for the specified conversion function (Heikki)
-->
特定の変換関数に対する、間違った符号化方式を用いた<command>CREATE CONVERSION</command>を許可しません。(Heikki)
     </para>

     <para>
<!--
      This prevents one possible scenario for encoding conversion failure.
      The previous change is a backstop to guard against other kinds of
      failures in the same area.
-->
これにより、符号化方式に関する失敗における、あり得る状況を防止します。
前回の変更は、同じ問題における別の種類の失敗に対する防止策でした。
     </para>
    </listitem>

    <listitem>
     <para>
<<<<<<< HEAD
      Fix core dump when <function>to_char()</function> is given format codes that
=======
<!--
      Fix core dump when <function>to_char()</> is given format codes that
>>>>>>> doc_ja_10_premerge
      are inappropriate for the type of the data argument (Tom)
-->
<function>to_char()</function>に引数のデータに対して不適切な整形用のコードが渡された時のコアダンプを修正しました。(Tom)
     </para>
    </listitem>

    <listitem>
     <para>
<<<<<<< HEAD
      Fix possible failure in <filename>contrib/tsearch2</filename> when C locale is
=======
<!--
      Fix possible failure in <filename>contrib/tsearch2</> when C locale is
>>>>>>> doc_ja_10_premerge
      used with a multi-byte encoding (Teodor)
-->
Cロケールがマルチバイト符号化方式で使用された場合の<filename>contrib/tsearch2</filename>が失敗する可能性を修正しました。(Teodor)
     </para>

     <para>
<<<<<<< HEAD
      Crashes were possible on platforms where <type>wchar_t</type> is narrower
      than <type>int</type>; Windows in particular.
=======
<!--
      Crashes were possible on platforms where <type>wchar_t</> is narrower
      than <type>int</>; Windows in particular.
-->
<type>wchar_t</type>が<type>int</type>よりもビット数が小さい時にクラッシュする可能性がありました。
具体的にはWindowsです。
>>>>>>> doc_ja_10_premerge
     </para>
    </listitem>

    <listitem>
     <para>
<<<<<<< HEAD
      Fix extreme inefficiency in <filename>contrib/tsearch2</filename> parser's
      handling of an email-like string containing multiple <literal>@</literal>
=======
<!--
      Fix extreme inefficiency in <filename>contrib/tsearch2</> parser's
      handling of an email-like string containing multiple <literal>@</>
>>>>>>> doc_ja_10_premerge
      characters (Heikki)
-->
Eメールのような複数の<literal>@</literal>文字を含む文字列に対する、非常に非効率的な<filename>contrib/tsearch2</filename>のパーサの扱いを修正しました。(Heikki)
     </para>
    </listitem>

    <listitem>
     <para>
<<<<<<< HEAD
      Fix decompilation of <literal>CASE WHEN</literal> with an implicit coercion
=======
<!--
      Fix decompilation of <literal>CASE WHEN</> with an implicit coercion
-->
暗黙的な強制を使用した<literal>CASE WHEN</literal>の逆コンパイルを修正しました。
>>>>>>> doc_ja_10_premerge
      (Tom)
     </para>

     <para>
<!--
      This mistake could lead to Assert failures in an Assert-enabled build,
      or an <quote>unexpected CASE WHEN clause</quote> error message in other
      cases, when trying to examine or dump a view.
-->
この間違いにより、アサートを有効にして構築した場合にアサート失敗が発生する可能性がありました。
また、他の構築状況でもビューの検証やダンプを行う際に<quote>unexpected CASE WHEN clause</quote>というエラーメッセージが発生する可能性がありました。
     </para>
    </listitem>

    <listitem>
     <para>
<!--
      Fix possible misassignment of the owner of a TOAST table's rowtype (Tom)
-->
TOASTテーブルの行型に対する所有者を間違って割り当てる可能性を修正しました。(Tom)
     </para>

     <para>
<<<<<<< HEAD
      If <command>CLUSTER</command> or a rewriting variant of <command>ALTER TABLE</command>
=======
<!--
      If <command>CLUSTER</> or a rewriting variant of <command>ALTER TABLE</>
>>>>>>> doc_ja_10_premerge
      were executed by someone other than the table owner, the
      <structname>pg_type</structname> entry for the table's TOAST table would end up
      marked as owned by that someone.  This caused no immediate problems,
      since the permissions on the TOAST rowtype aren't examined by any
      ordinary database operation.  However, it could lead to unexpected
      failures if one later tried to drop the role that issued the command
<<<<<<< HEAD
      (in 8.1 or 8.2), or <quote>owner of data type appears to be invalid</quote>
      warnings from <application>pg_dump</application> after having done so (in 8.3).
=======
      (in 8.1 or 8.2), or <quote>owner of data type appears to be invalid</>
      warnings from <application>pg_dump</> after having done so (in 8.3).
-->
<command>CLUSTER</command>または<command>ALTER TABLE</command>の書き換え構文がテーブル所有者以外のユーザにより実行された場合、テーブルのTOASTテーブル向けの<structname>pg_type</structname>項目が実行したユーザの所有するものとして記録されてしまいました。
TOASTの行型に対する権限は通常のデータベース操作ではまったく検証されませんので、これによりすぐに問題が発生することはありません。
しかし、後でコマンドを発行したロールを削除しようとした場合に想定外の失敗（8.1または8.2）や削除後に<application>pg_dump</application>が<quote>owner of data type appears to be invalid</quote>という警告が発生する（8.3）可能性がありました。
>>>>>>> doc_ja_10_premerge
     </para>
    </listitem>

    <listitem>
     <para>
<<<<<<< HEAD
      Fix PL/pgSQL to not treat <literal>INTO</literal> after <command>INSERT</command> as
      an INTO-variables clause anywhere in the string, not only at the start;
      in particular, don't fail for <command>INSERT INTO</command> within
      <command>CREATE RULE</command> (Tom)
=======
<!--
      Fix PL/pgSQL to not treat <literal>INTO</> after <command>INSERT</> as
      an INTO-variables clause anywhere in the string, not only at the start;
      in particular, don't fail for <command>INSERT INTO</> within
      <command>CREATE RULE</> (Tom)
-->
PL/pgSQLが、<command>INSERT</command>後の<literal>INTO</literal>を文字列の起点だけではなく、任意の位置におけるINTO変数句として扱わないように修正しました。
具体的には、<command>CREATE RULE</command>内の<command>INSERT INTO</command>にて失敗しないようにしました。(Tom)
>>>>>>> doc_ja_10_premerge
     </para>
    </listitem>

    <listitem>
     <para>
<!--
      Clean up PL/pgSQL error status variables fully at block exit
      (Ashesh Vashi and Dave Page)
-->
ブロックの終了時に、PL/pgSQLのエラー状態変数を完全に消去します。(Ashesh Vashi、Dave Page)
     </para>

     <para>
<!--
      This is not a problem for PL/pgSQL itself, but the omission could cause
      the PL/pgSQL Debugger to crash while examining the state of a function.
-->
これはPL/pgSQL自体の問題ではありませんが、これを行わないと、PL/pgSQLデバッガが関数の状態を検証する際にクラッシュする可能性がありました。
     </para>
    </listitem>

    <listitem>
     <para>
<<<<<<< HEAD
      Retry failed calls to <function>CallNamedPipe()</function> on Windows
=======
<!--
      Retry failed calls to <function>CallNamedPipe()</> on Windows
>>>>>>> doc_ja_10_premerge
      (Steve Marshall, Magnus)
-->
Windowsにおいて<function>CallNamedPipe()</function>呼び出しが失敗した時に再試行します。(Steve Marshall、Magnus)
     </para>

     <para>
<!--
      It appears that this function can sometimes fail transiently;
      we previously treated any failure as a hard error, which could
      confuse <command>LISTEN</command>/<command>NOTIFY</command> as well as other
      operations.
-->
この関数は一時的に失敗することが時々あるようです。
これまでは重大なエラーとしてすべての失敗を扱っていましたが、<command>LISTEN</command>、<command>NOTIFY</command>やその他の操作が混乱する可能性がありました。
     </para>
    </listitem>

    <listitem>
     <para>
<<<<<<< HEAD
      Add <literal>MUST</literal> (Mauritius Island Summer Time) to the default list
=======
<!--
      Add <literal>MUST</> (Mauritius Island Summer Time) to the default list
>>>>>>> doc_ja_10_premerge
      of known timezone abbreviations (Xavier Bugaud)
-->
デフォルトの既知の時間帯省略形のリストに<literal>MUST</literal>（モーリシャス島夏時間）を追加しました。(Xavier Bugaud)
     </para>
    </listitem>

   </itemizedlist>

  </sect2>
 </sect1>

 <sect1 id="release-8-2-12">
<!--
  <title>Release 8.2.12</title>
-->
  <title>リリース8.2.12</title>

  <formalpara>
<!--
  <title>Release date:</title>
-->
  <title>リリース日:</title>
  <para>2009-02-02</para>
  </formalpara>

  <para>
<!--
   This release contains a variety of fixes from 8.2.11.
   For information about new features in the 8.2 major release, see
   <xref linkend="release-8-2"/>.
<<<<<<< HEAD
=======
-->
このリリースは8.2.11に対し、各種の不具合を修正したものです。
8.2メジャーリリースにおける新機能については<xref linkend="release-8-2"/>を参照してください。
>>>>>>> doc_ja_10_premerge
  </para>

  <sect2>
<!--
   <title>Migration to Version 8.2.12</title>
-->
   <title>バージョン8.2.12への移行</title>

   <para>
<!--
    A dump/restore is not required for those running 8.2.X.
    However, if you are upgrading from a version earlier than 8.2.11,
    see <xref linkend="release-8-2-11"/>.
<<<<<<< HEAD
=======
-->
8.2.Xからの移行ではダンプ/リストアは不要です。
しかしながら、8.2.11より前のバージョンからアップグレードする場合は、<xref linkend="release-8-2-11"/>を参照してください。
>>>>>>> doc_ja_10_premerge
   </para>

  </sect2>

  <sect2>
<!--
   <title>Changes</title>
-->
   <title>変更点</title>

   <itemizedlist>

    <listitem>
     <para>
<<<<<<< HEAD
      Improve handling of URLs in <function>headline()</function> function (Teodor)
=======
<!--
      Improve handling of URLs in <function>headline()</> function (Teodor)
-->
<function>headline()</function>関数におけるURLの扱いを改良しました。(Teodor)
>>>>>>> doc_ja_10_premerge
     </para>
    </listitem>

    <listitem>
     <para>
<<<<<<< HEAD
      Improve handling of overlength headlines in <function>headline()</function>
=======
<!--
      Improve handling of overlength headlines in <function>headline()</>
>>>>>>> doc_ja_10_premerge
      function (Teodor)
-->
<function>headline()</function>関数における延長見出しの扱いを改良しました。(Teodor)
     </para>
    </listitem>

    <listitem>
     <para>
<!--
      Prevent possible Assert failure or misconversion if an encoding
      conversion is created with the wrong conversion function for the
      specified pair of encodings (Tom, Heikki)
-->
符号化方式の変換が符号化方式の組み合わせの指定を間違えた変換関数で作成された場合にあり得る、アサートの失敗や誤変換を防止します。(Tom, Heikki)
     </para>
    </listitem>

    <listitem>
     <para>
<!--
      Fix possible Assert failure if a statement executed in PL/pgSQL is
      rewritten into another kind of statement, for example if an
<<<<<<< HEAD
      <command>INSERT</command> is rewritten into an <command>UPDATE</command> (Heikki)
=======
      <command>INSERT</> is rewritten into an <command>UPDATE</> (Heikki)
-->
例えば<command>INSERT</command>が<command>UPDATE</command>に書き換えられるといった、PL/pgSQLで実行された文が他の種類の文に書き換えられた場合にあり得るアサートの失敗を修正しました。(Heikki)
>>>>>>> doc_ja_10_premerge
     </para>
    </listitem>

    <listitem>
     <para>
<!--
      Ensure that a snapshot is available to datatype input functions (Tom)
-->
データ型入力関数でスナップショットが利用できることを確実にしました。(Tom)
     </para>

     <para>
<<<<<<< HEAD
      This primarily affects domains that are declared with <literal>CHECK</literal>
=======
<!--
      This primarily affects domains that are declared with <literal>CHECK</>
>>>>>>> doc_ja_10_premerge
      constraints involving user-defined stable or immutable functions.  Such
      functions typically fail if no snapshot has been set.
-->
これは主に、ユーザ定義の安定または不変関数を含む<literal>CHECK</literal>制約付きで宣言されたドメインに影響します。
こうした関数は通常、スナップショットが設定されていない場合失敗します。
     </para>
    </listitem>

    <listitem>
     <para>
<!--
      Make it safer for SPI-using functions to be used within datatype I/O;
      in particular, to be used in domain check constraints (Tom)
-->
データ型入出力、特に、ドメインの検査制約で使用されるSPIを使用する関数をより安全にしました。(Tom)
     </para>
    </listitem>

    <listitem>
     <para>
<<<<<<< HEAD
      Avoid unnecessary locking of small tables in <command>VACUUM</command>
=======
<!--
      Avoid unnecessary locking of small tables in <command>VACUUM</>
-->
<command>VACUUM</command>において小規模なテーブルに対する不要なロックを防止しました。
>>>>>>> doc_ja_10_premerge
      (Heikki)
     </para>
    </listitem>

    <listitem>
     <para>
<<<<<<< HEAD
      Fix a problem that made <literal>UPDATE RETURNING tableoid</literal>
=======
<!--
      Fix a problem that made <literal>UPDATE RETURNING tableoid</>
>>>>>>> doc_ja_10_premerge
      return zero instead of the correct OID (Tom)
-->
<literal>UPDATE RETURNING tableoid</literal>が現在のOIDではなくゼロをかえす問題を修正しました。(Tom)
     </para>
    </listitem>

    <listitem>
     <para>
<!--
      Fix planner misestimation of selectivity when transitive equality
      is applied to an outer-join clause (Tom)
-->
推移的な等価性が外部結合句に適用される場合のプランナの選択度の誤推定を修正しました。(Tom)
     </para>

     <para>
<!--
      This could result in bad plans for queries like
<<<<<<< HEAD
      <literal>... from a left join b on a.a1 = b.b1 where a.a1 = 42 ...</literal>
=======
      <literal>... from a left join b on a.a1 = b.b1 where a.a1 = 42 ...</>
-->
これにより<literal>... from a left join b on a.a1 = b.b1 where a.a1 = 42 ...</literal>のような問い合わせで劣化した計画が作成されました。
>>>>>>> doc_ja_10_premerge
     </para>
    </listitem>

    <listitem>
     <para>
<<<<<<< HEAD
      Improve optimizer's handling of long <literal>IN</literal> lists (Tom)
=======
<!--
      Improve optimizer's handling of long <literal>IN</> lists (Tom)
-->
オプティマイザの長大な<literal>IN</literal>リストの扱いを改良しました。
>>>>>>> doc_ja_10_premerge
     </para>

     <para>
<!--
      This change avoids wasting large amounts of time on such lists
      when constraint exclusion is enabled.
-->
この変更により、制約による除外が有効な場合にこうしたリストが、長く時間を浪費することを防止します。
     </para>
    </listitem>

    <listitem>
     <para>
<!--
      Ensure that the contents of a holdable cursor don't depend on the
      contents of TOAST tables (Tom)
-->
保持可能なカーソルの内容がTOASTテーブルの内容に依存しないことを確実にしました。(Tom)
     </para>

     <para>
<!--
      Previously, large field values in a cursor result might be represented
      as TOAST pointers, which would fail if the referenced table got dropped
      before the cursor is read, or if the large value is deleted and then
      vacuumed away.  This cannot happen with an ordinary cursor,
      but it could with a cursor that is held past its creating transaction.
-->
これまでカーソル内の大規模なフィールドはTOASTポインタとして表現される可能性がありました。
これは、参照先のテーブルがカーソルを読み取る前に削除された場合や、大規模な値が削除、そしてバキュームされてしまった場合に失敗しました。
これは通常のカーソルでは発生することはあり得ませんが、トランザクションの生成以降保持されるカーソルではあり得ます。
     </para>
    </listitem>

    <listitem>
     <para>
<!--
      Fix memory leak when a set-returning function is terminated without
      reading its whole result (Tom)
-->
集合を返す関数が結果全体を読み取らずに終了した時のメモリリークを修正しました。(Tom)
     </para>
    </listitem>

    <listitem>
     <para>
<<<<<<< HEAD
      Fix <filename>contrib/dblink</filename>'s
      <function>dblink_get_result(text,bool)</function> function (Joe)
=======
<!--
      Fix <filename>contrib/dblink</>'s
      <function>dblink_get_result(text,bool)</> function (Joe)
-->
<filename>contrib/dblink</filename>の<function>dblink_get_result(text,bool)</function>関数を修正しました。(Joe)
>>>>>>> doc_ja_10_premerge
     </para>
    </listitem>

    <listitem>
     <para>
<<<<<<< HEAD
      Fix possible garbage output from <filename>contrib/sslinfo</filename> functions
=======
<!--
      Fix possible garbage output from <filename>contrib/sslinfo</> functions
-->
<filename>contrib/sslinfo</filename>関数から不要な出力が行われる可能性を修正しました。
>>>>>>> doc_ja_10_premerge
      (Tom)
     </para>
    </listitem>

    <listitem>
     <para>
<<<<<<< HEAD
      Fix <application>configure</application> script to properly report failure when
=======
<!--
      Fix <application>configure</> script to properly report failure when
>>>>>>> doc_ja_10_premerge
      unable to obtain linkage information for PL/Perl (Andrew)
-->
<application>configure</application>スクリプトがPL/Perl用のリンク情報の入手ができなかった場合に失敗を適切に報告するように修正しました。(Andrew)
     </para>
    </listitem>

    <listitem>
     <para>
<<<<<<< HEAD
      Make all documentation reference <literal>pgsql-bugs</literal> and/or
      <literal>pgsql-hackers</literal> as appropriate, instead of the
      now-decommissioned <literal>pgsql-ports</literal> and <literal>pgsql-patches</literal>
=======
<!--
      Make all documentation reference <literal>pgsql-bugs</> and/or
      <literal>pgsql-hackers</> as appropriate, instead of the
      now-decommissioned <literal>pgsql-ports</> and <literal>pgsql-patches</>
>>>>>>> doc_ja_10_premerge
      mailing lists (Tom)
-->
すべての文書において、現在活動していない<literal>pgsql-ports</literal>と<literal>pgsql-patches</literal>メーリングリストの代わりに、<literal>pgsql-bugs</literal>または<literal>pgsql-hackers</literal>を参照するようにしました。
     </para>
    </listitem>

    <listitem>
     <para>
<<<<<<< HEAD
      Update time zone data files to <application>tzdata</application> release 2009a (for
=======
<!--
      Update time zone data files to <application>tzdata</> release 2009a (for
>>>>>>> doc_ja_10_premerge
      Kathmandu and historical DST corrections in Switzerland, Cuba)
-->
時間帯データファイルを<application>tzdata</application>リリース2009a（カトマンズ、およびスイス、キューバにおける歴史的なDSTの訂正）に更新しました。
     </para>
    </listitem>

   </itemizedlist>

  </sect2>
 </sect1>

 <sect1 id="release-8-2-11">
<!--
  <title>Release 8.2.11</title>
-->
  <title>リリース8.2.11</title>

  <formalpara>
<!--
  <title>Release date:</title>
-->
  <title>リリース日:</title>
  <para>2008-11-03</para>
  </formalpara>

  <para>
<!--
   This release contains a variety of fixes from 8.2.10.
   For information about new features in the 8.2 major release, see
   <xref linkend="release-8-2"/>.
<<<<<<< HEAD
=======
-->
このリリースは8.2.10に対し、各種の不具合を修正したものです。
8.2メジャーリリースにおける新機能については<xref linkend="release-8-2"/>を参照してください。
>>>>>>> doc_ja_10_premerge
  </para>

  <sect2>
<!--
   <title>Migration to Version 8.2.11</title>
-->
   <title>バージョン8.2.11への移行</title>

   <para>
<!--
    A dump/restore is not required for those running 8.2.X.
    However, if you are upgrading from a version earlier than 8.2.7,
    see <xref linkend="release-8-2-7"/>.  Also, if you were running a previous
<<<<<<< HEAD
    8.2.X release, it is recommended to <command>REINDEX</command> all GiST
=======
    8.2.X release, it is recommended to <command>REINDEX</> all GiST
>>>>>>> doc_ja_10_premerge
    indexes after the upgrade.
-->
8.2.Xからの移行ではダンプ/リストアは不要です。
しかしながら、8.2.7より前のバージョンからアップグレードする場合は、<xref linkend="release-8-2-7"/>を参照してください。
また、これまでの8.2.Xリリースを使用していた場合、アップグレード後にすべてのGiSTインデックスを<command>REINDEX</command>することを勧めます。
   </para>

  </sect2>

  <sect2>
<!--
   <title>Changes</title>
-->
   <title>変更点</title>

   <itemizedlist>

    <listitem>
     <para>
<!--
      Fix GiST index corruption due to marking the wrong index entry
<<<<<<< HEAD
      <quote>dead</quote> after a deletion (Teodor)
=======
      <quote>dead</> after a deletion (Teodor)
-->
削除後に間違ったインデックス項目を<quote>dead</quote>と印付けたことによるGiSTインデックスの破損を修正しました。(Teodor)
>>>>>>> doc_ja_10_premerge
     </para>

     <para>
<!--
      This would result in index searches failing to find rows they
      should have found.  Corrupted indexes can be fixed with
<<<<<<< HEAD
      <command>REINDEX</command>.
=======
      <command>REINDEX</>.
-->
これによりインデックス検索は存在するはずの行の検索に失敗します。
破損したインデックスは<command>REINDEX</command>を使用して修復できます。
>>>>>>> doc_ja_10_premerge
     </para>
    </listitem>

    <listitem>
     <para>
<!--
      Fix backend crash when the client encoding cannot represent a localized
      error message (Tom)
-->
クライアントの符号化方式が翻訳されたエラーメッセージを表すことができない時のバックエンドのクラッシュを修正しました。(Tom)
     </para>

     <para>
<!--
      We have addressed similar issues before, but it would still fail if
      the <quote>character has no equivalent</quote> message itself couldn't
      be converted.  The fix is to disable localization and send the plain
      ASCII error message when we detect such a situation.
-->
以前にも同様の問題に対応しましたが、<quote>等価な文字を持たない</quote>メッセージ自体が変換されない場合にまだ失敗しました。
今回の修正では、こうした状況を検知した時、翻訳を無効にし、通常のASCIIエラーメッセージを送信します。
     </para>
    </listitem>

    <listitem>
     <para>
<!--
      Fix possible crash when deeply nested functions are invoked from
      a trigger (Tom)
-->
トリガから深い入れ子状態の関数が呼び出された時にクラッシュする可能性を修正しました。(Tom)
     </para>
    </listitem>

    <listitem>
     <para>
<<<<<<< HEAD
      Improve optimization of <replaceable>expression</replaceable> <literal>IN</literal>
      (<replaceable>expression-list</replaceable>) queries (Tom, per an idea from Robert
=======
<!--
      Improve optimization of <replaceable>expression</> <literal>IN</>
      (<replaceable>expression-list</>) queries (Tom, per an idea from Robert
>>>>>>> doc_ja_10_premerge
      Haas)
-->
<replaceable>expression</replaceable> <literal>IN</literal> (<replaceable>expression-list</replaceable>)問い合わせの最適化を改良しました。(Tom。Robert Haasの発案に基づいた。)
     </para>

     <para>
<!--
      Cases in which there are query variables on the right-hand side had been
      handled less efficiently in 8.2.x and 8.3.x than in prior versions.
      The fix restores 8.1 behavior for such cases.
-->
8.2.xおよび8.3.xでは、右辺に問い合わせ変数が存在する状況を取扱う効率が過去のバージョンより落ちていました。
今回の修正では、こうした状況における振舞いを8.1に戻しました。
     </para>
    </listitem>

    <listitem>
     <para>
<<<<<<< HEAD
      Fix mis-expansion of rule queries when a sub-<literal>SELECT</literal> appears
      in a function call in <literal>FROM</literal>,  a multi-row <literal>VALUES</literal>
      list, or a <literal>RETURNING</literal> list (Tom)
     </para>

     <para>
      The usual symptom of this problem is an <quote>unrecognized node type</quote>
=======
<!--
      Fix mis-expansion of rule queries when a sub-<literal>SELECT</> appears
      in a function call in <literal>FROM</>,  a multi-row <literal>VALUES</>
      list, or a <literal>RETURNING</> list (Tom)
-->
副<literal>SELECT</literal>が<literal>FROM</literal>、複数行の<literal>VALUES</literal>リスト、<literal>RETURNING</literal>リスト内の関数呼び出し内に存在する場合の、間違ったルール問い合わせの展開を修正しました。(Tom)
     </para>

     <para>
<!--
      The usual symptom of this problem is an <quote>unrecognized node type</>
>>>>>>> doc_ja_10_premerge
      error.
-->
この問題のよくある徴候は、<quote>unrecognized node type</quote>というエラーです。
     </para>
    </listitem>

    <listitem>
     <para>
<!--
      Fix memory leak during rescan of a hashed aggregation plan (Neil)
-->
ハッシュされた集約計画の再スキャン中のメモリリークを修正しました。(Neil)
     </para>
    </listitem>

    <listitem>
     <para>
<!--
      Ensure an error is reported when a newly-defined PL/pgSQL trigger
      function is invoked as a normal function (Tom)
-->
新しく定義されたPL/pgSQLトリガ関数が通常の関数として呼び出された場合に報告されるエラーを確実なものにしました。(Tom)
     </para>
    </listitem>

    <listitem>
     <para>
<<<<<<< HEAD
      Prevent possible collision of <structfield>relfilenode</structfield> numbers
      when moving a table to another tablespace with <command>ALTER SET
      TABLESPACE</command> (Heikki)
=======
<!--
      Prevent possible collision of <structfield>relfilenode</> numbers
      when moving a table to another tablespace with <command>ALTER SET
      TABLESPACE</> (Heikki)
-->
<command>ALTER SET TABLESPACE</command>を使ってテーブルを別のテーブル空間に移動する時に<structfield>relfilenode</structfield>番号が衝突する可能性を防止します。(Heikki)
>>>>>>> doc_ja_10_premerge
     </para>

     <para>
<!--
      The command tried to re-use the existing filename, instead of
      picking one that is known unused in the destination directory.
-->
このコマンドは、先のディレクトリで未使用であることが確認されたファイル名を選ばずに、既存のファイル名を再使用しようとしていました。
     </para>
    </listitem>

    <listitem>
     <para>
<!--
      Fix incorrect tsearch2 headline generation when single query
      item matches first word of text (Sushant Sinha)
-->
1つの問い合わせ項目がテキストの先頭の単語に一致した場合、テキスト検索の間違った見出し生成を修正しました。(Sushant Sinha)
     </para>
    </listitem>

    <listitem>
     <para>
<!--
      Fix improper display of fractional seconds in interval values when
<<<<<<< HEAD
      using a non-ISO datestyle in an <option>--enable-integer-datetimes</option>
=======
      using a non-ISO datestyle in an <option>&#045;-enable-integer-datetimes</>
>>>>>>> doc_ja_10_premerge
      build (Ron Mayer)
-->
<option>--enable-integer-datetimes</option>で構築された場合、ISO以外の日付書式を使用した時の時間間隔値における不適切な秒端数表示を修正しました。(Ron Mayer)
     </para>
    </listitem>

    <listitem>
     <para>
<<<<<<< HEAD
      Ensure <function>SPI_getvalue</function> and <function>SPI_getbinval</function>
=======
<!--
      Ensure <function>SPI_getvalue</> and <function>SPI_getbinval</>
>>>>>>> doc_ja_10_premerge
      behave correctly when the passed tuple and tuple descriptor have
      different numbers of columns (Tom)
-->
渡されたタプルとタプル記述子が異なる列数を持っていた場合に<function>SPI_getvalue</function>および<function>SPI_getbinval</function>が適切に動作することを確実にしました。(Tom)
     </para>

     <para>
<!--
      This situation is normal when a table has had columns added or removed,
      but these two functions didn't handle it properly.
      The only likely consequence is an incorrect error indication.
-->
テーブルに列が追加または削除された場合、こうした状況は正常です。
しかしこの2つの関数は適切に扱っていませんでした。
起こり得る唯一の結果は間違ったエラーが示されることです。
     </para>
    </listitem>

    <listitem>
     <para>
<<<<<<< HEAD
      Fix <application>ecpg</application>'s parsing of <command>CREATE ROLE</command> (Michael)
=======
<!--
      Fix <application>ecpg</>'s parsing of <command>CREATE ROLE</> (Michael)
-->
<application>ecpg</application>の<command>CREATE ROLE</command>解析を修正しました。(Michael)
>>>>>>> doc_ja_10_premerge
     </para>
    </listitem>

    <listitem>
     <para>
<<<<<<< HEAD
      Fix recent breakage of <literal>pg_ctl restart</literal> (Tom)
=======
<!--
      Fix recent breakage of <literal>pg_ctl restart</> (Tom)
-->
<literal>pg_ctl restart</literal>の最近の破損を修正しました。(Tom)
>>>>>>> doc_ja_10_premerge
     </para>
    </listitem>

    <listitem>
     <para>
<<<<<<< HEAD
      Ensure <filename>pg_control</filename> is opened in binary mode
=======
<!--
      Ensure <filename>pg_control</> is opened in binary mode
>>>>>>> doc_ja_10_premerge
      (Itagaki Takahiro)
-->
<filename>pg_control</filename>がバイナリモードで開かれることを確実にしました。(Itagaki Takahiro)
     </para>

     <para>
<<<<<<< HEAD
      <application>pg_controldata</application> and <application>pg_resetxlog</application>
=======
<!--
      <application>pg_controldata</> and <application>pg_resetxlog</>
>>>>>>> doc_ja_10_premerge
      did this incorrectly, and so could fail on Windows.
-->
<application>pg_controldata</application>および<application>pg_resetxlog</application>はこれを正しく行っていませんでした。
このためWindowsで失敗しました。
     </para>
    </listitem>

    <listitem>
     <para>
<<<<<<< HEAD
      Update time zone data files to <application>tzdata</application> release 2008i (for
=======
<!--
      Update time zone data files to <application>tzdata</> release 2008i (for
>>>>>>> doc_ja_10_premerge
      DST law changes in Argentina, Brazil, Mauritius, Syria)
-->
時間帯データファイルを<application>tzdata</application>リリース2008i（アルゼンチン、ブラジル、モーリシャス、シリアにおける夏時間規則の変更）まで更新しました。
     </para>
    </listitem>

   </itemizedlist>

  </sect2>
 </sect1>

 <sect1 id="release-8-2-10">
<!--
  <title>Release 8.2.10</title>
-->
  <title>リリース8.2.10</title>

  <formalpara>
<!--
  <title>Release date:</title>
-->
  <title>リリース日:</title>
  <para>2008-09-22</para>
  </formalpara>

  <para>
<!--
   This release contains a variety of fixes from 8.2.9.
   For information about new features in the 8.2 major release, see
   <xref linkend="release-8-2"/>.
<<<<<<< HEAD
=======
-->
このリリースは8.2.9に対し、各種の不具合を修正したものです。
8.2メジャーリリースにおける新機能については<xref linkend="release-8-2"/>を参照してください。
>>>>>>> doc_ja_10_premerge
  </para>

  <sect2>
<!--
   <title>Migration to Version 8.2.10</title>
-->
   <title>バージョン8.2.10への移行</title>

   <para>
<!--
    A dump/restore is not required for those running 8.2.X.
    However, if you are upgrading from a version earlier than 8.2.7,
    see <xref linkend="release-8-2-7"/>.
<<<<<<< HEAD
=======
-->
8.2.Xからの移行ではダンプ/リストアは不要です。
しかしながら、8.2.7より前のバージョンからアップグレードする場合は、<xref linkend="release-8-2-7"/>を参照してください。
>>>>>>> doc_ja_10_premerge
   </para>

  </sect2>

  <sect2>
<!--
   <title>Changes</title>
-->
   <title>変更点</title>

   <itemizedlist>

    <listitem>
     <para>
<!--
      Fix bug in btree WAL recovery code (Heikki)
-->
B-tree WALリカバリコード内の不具合を修正しました。(Heikki)
     </para>

     <para>
<!--
      Recovery failed if the WAL ended partway through a page split operation.
-->
ページ分割操作中にWALが途中で止まった場合にリカバリが失敗しました。
     </para>
    </listitem>

    <listitem>
     <para>
<<<<<<< HEAD
      Fix potential miscalculation of <structfield>datfrozenxid</structfield> (Alvaro)
=======
<!--
      Fix potential miscalculation of <structfield>datfrozenxid</> (Alvaro)
-->
<structfield>datfrozenxid</structfield>の誤計算の可能性を修正しました。(Alvaro)
>>>>>>> doc_ja_10_premerge
     </para>

     <para>
<!--
      This error may explain some recent reports of failure to remove old
<<<<<<< HEAD
      <structname>pg_clog</structname> data.
=======
      <structname>pg_clog</> data.
-->
このエラーにより古い<structname>pg_clog</structname>データの削除に失敗するというここ最近の報告が説明できます。
>>>>>>> doc_ja_10_premerge
     </para>
    </listitem>

    <listitem>
     <para>
<!--
      Widen local lock counters from 32 to 64 bits (Tom)
-->
局所ロックのカウンタを32ビットから64ビットに広げました。(Tom)
     </para>

     <para>
<!--
      This responds to reports that the counters could overflow in
      sufficiently long transactions, leading to unexpected <quote>lock is
<<<<<<< HEAD
      already held</quote> errors.
=======
      already held</> errors.
-->
これは、かなり長いトランザクションでカウンタがオーバーフローし、想定外の<quote>すでに保持済のロックである</quote>というエラーになるという報告に対応したものです。
>>>>>>> doc_ja_10_premerge
     </para>
    </listitem>

    <listitem>
     <para>
<!--
      Fix possible duplicate output of tuples during a GiST index scan (Teodor)
-->
GiSTインデックススキャン中に出力タプルが重複する可能性を修正しました。(Teodor)
     </para>
    </listitem>

    <listitem>
     <para>
<!--
      Fix missed permissions checks when a view contains a simple
<<<<<<< HEAD
      <literal>UNION ALL</literal> construct (Heikki)
=======
      <literal>UNION ALL</> construct (Heikki)
-->
ビューが単純な<literal>UNION ALL</literal>式を含む場合、行われなかった権限検査を修正しました。(Heikki)
>>>>>>> doc_ja_10_premerge
     </para>

     <para>
<!--
      Permissions for the referenced tables were checked properly, but not
      permissions for the view itself.
-->
被参照テーブルの権限は正しく検査されていましたが、ビュー自体の権限はそうでありませんでした。
     </para>
    </listitem>

    <listitem>
     <para>
<!--
      Add checks in executor startup to ensure that the tuples produced by an
      <command>INSERT</command> or <command>UPDATE</command> will match the target table's
      current rowtype (Tom)
-->
<command>INSERT</command>または<command>UPDATE</command>で生成されるタプルが対象のテーブルの現在の行型に一致するか確認するために、エグゼキュータ起動の際の検査を追加しました。(Tom)
     </para>

     <para>
<<<<<<< HEAD
      <command>ALTER COLUMN TYPE</command>, followed by re-use of a previously
=======
<!--
      <command>ALTER COLUMN TYPE</>, followed by re-use of a previously
>>>>>>> doc_ja_10_premerge
      cached plan, could produce this type of situation.  The check protects
      against data corruption and/or crashes that could ensue.
-->
<command>ALTER COLUMN TYPE</command>の後にこれまでキャッシュしていた計画を再利用した場合、こうした状況が起こります。
データ破壊やその結果発生するクラッシュをこの検査により防ぎます。
     </para>
    </listitem>

    <listitem>
     <para>
<<<<<<< HEAD
      Fix possible repeated drops during <command>DROP OWNED</command> (Tom)
=======
<!--
      Fix possible repeated drops during <command>DROP OWNED</> (Tom)
-->
<command>DROP OWNED</command>中の削除が繰り返される可能性を修正しました。(Tom)
>>>>>>> doc_ja_10_premerge
     </para>

     <para>
<!--
      This would typically result in strange errors such as <quote>cache
<<<<<<< HEAD
      lookup failed for relation NNN</quote>.
=======
      lookup failed for relation NNN</>.
-->
これによりよく<quote>リレーションNNNのキャッシュ検索に失敗した</quote>などのおかしなエラーが発生しました。
>>>>>>> doc_ja_10_premerge
     </para>
    </listitem>

    <listitem>
     <para>
<<<<<<< HEAD
      Fix <literal>AT TIME ZONE</literal> to first try to interpret its timezone
=======
<!--
      Fix <literal>AT TIME ZONE</> to first try to interpret its timezone
>>>>>>> doc_ja_10_premerge
      argument as a timezone abbreviation, and only try it as a full timezone
      name if that fails, rather than the other way around as formerly (Tom)
-->
まず時間帯引数を時間帯省略形として解釈し、これまでのように他の方法を取らずに、それが失敗した場合にのみ完全な時間帯名称として解釈するように<literal>AT TIME ZONE</literal>を修正しました。(Tom)
     </para>

     <para>
<!--
      The timestamp input functions have always resolved ambiguous zone names
      in this order.  Making <literal>AT TIME ZONE</literal> do so as well improves
      consistency, and fixes a compatibility bug introduced in 8.1:
      in ambiguous cases we now behave the same as 8.0 and before did,
<<<<<<< HEAD
      since in the older versions <literal>AT TIME ZONE</literal> accepted
      <emphasis>only</emphasis> abbreviations.
=======
      since in the older versions <literal>AT TIME ZONE</> accepted
      <emphasis>only</> abbreviations.
-->
タイムスタンプ入力関数は常にこの順序であいまいな時間帯名の解決を行っていました。
<literal>AT TIME ZONE</literal>も同様にすることで一貫性が向上し、そして、8.1で混入された互換性に関する不具合を修正します。
過去のバージョンの<literal>AT TIME ZONE</literal>では省略形<emphasis>のみ</emphasis>を受け付けていましたので、あいまいな場合に8.0以前と同様な動作をするようになりました。
>>>>>>> doc_ja_10_premerge
     </para>
    </listitem>

    <listitem>
     <para>
<!--
      Fix datetime input functions to correctly detect integer overflow when
      running on a 64-bit platform (Tom)
-->
64ビットプラットフォームで稼働している場合、日付時刻入力関数が正しく整数オーバーフローを検知できるよう修正しました。(Tom)
     </para>
    </listitem>

    <listitem>
     <para>
<!--
      Prevent integer overflows during units conversion when displaying a
      configuration parameter that has units (Tom)
-->
単位指定がある設定パラメータを表示する際に、単位変換による整数オーバーフローを防ぎます。(Tom)
     </para>
    </listitem>

    <listitem>
     <para>
<!--
      Improve performance of writing very long log messages to syslog (Tom)
-->
非常に長いログメッセージをsyslogに書き出す際の性能を向上しました。(Tom)
     </para>
    </listitem>

    <listitem>
     <para>
<!--
      Allow spaces in the suffix part of an LDAP URL in
<<<<<<< HEAD
      <filename>pg_hba.conf</filename> (Tom)
=======
      <filename>pg_hba.conf</> (Tom)
-->
<filename>pg_hba.conf</filename>内のLDAP URLの接尾辞部分に空白文字を許します。(Tom)
>>>>>>> doc_ja_10_premerge
     </para>
    </listitem>

    <listitem>
     <para>
<!--
      Fix bug in backwards scanning of a cursor on a <literal>SELECT DISTINCT
<<<<<<< HEAD
      ON</literal> query (Tom)
=======
      ON</> query (Tom)
-->
<literal>SELECT DISTINCT ON</literal>問い合わせに対するカーソルの後方スキャンにおける不具合を修正しました。(Tom)
>>>>>>> doc_ja_10_premerge
     </para>
    </listitem>

    <listitem>
     <para>
<!--
      Fix planner bug with nested sub-select expressions (Tom)
-->
入れ子状の副問い合わせ式がある場合のプランナの不具合を修正しました。(Tom)
     </para>

     <para>
<!--
      If the outer sub-select has no direct dependency on the parent query,
      but the inner one does, the outer value might not get recalculated
      for new parent query rows.
-->
外側の副問い合わせが親問い合わせに直接の依存性がなく、内側の副問い合わせが依存性がある場合、外側の値が新しい親問い合わせの行に対して再計算されなくなる可能性がありました。
     </para>
    </listitem>

    <listitem>
     <para>
<<<<<<< HEAD
      Fix planner to estimate that <literal>GROUP BY</literal> expressions yielding
=======
<!--
      Fix planner to estimate that <literal>GROUP BY</> expressions yielding
>>>>>>> doc_ja_10_premerge
      boolean results always result in two groups, regardless of the
      expressions' contents (Tom)
-->
プランナが論理型の結果を生成する<literal>GROUP BY</literal>式を、式の内容に関係なく、常に2つのグループになると推定することを修正しました。(Tom)
     </para>

     <para>
<!--
      This is very substantially more accurate than the regular <literal>GROUP
<<<<<<< HEAD
      BY</literal> estimate for certain boolean tests like <replaceable>col</replaceable>
      <literal>IS NULL</literal>.
=======
      BY</> estimate for certain boolean tests like <replaceable>col</>
      <literal>IS NULL</>.
-->
これにより、<replaceable>col</replaceable> <literal>IS NULL</literal>などの特定の論理試験に対して、通常の<literal>GROUP BY</literal>推定より非常により良く精度が上がります。
>>>>>>> doc_ja_10_premerge
     </para>
    </listitem>

    <listitem>
     <para>
<<<<<<< HEAD
      Fix PL/pgSQL to not fail when a <literal>FOR</literal> loop's target variable
=======
<!--
      Fix PL/pgSQL to not fail when a <literal>FOR</> loop's target variable
>>>>>>> doc_ja_10_premerge
      is a record containing composite-type fields (Tom)
-->
<literal>FOR</literal>ループの対象値が複合型のフィールドを含むレコードである場合に失敗しないようにPL/pgSQLを修正しました。(Tom)
     </para>
    </listitem>

    <listitem>
     <para>
<!--
      Fix PL/Tcl to behave correctly with Tcl 8.5, and to be more careful
      about the encoding of data sent to or from Tcl (Tom)
-->
Tcl 8.5で正しく動作するようPL/Tclを修正しました。
また、Tcl間でやりとりされるデータの符号化方式についてより注意を払うように修正しました。(Tom)
     </para>
    </listitem>

    <listitem>
     <para>
<!--
      On Windows, work around a Microsoft bug by preventing
      <application>libpq</application> from trying to send more than 64kB per system call
      (Magnus)
-->
Windowsにおいて、<application>libpq</application>がシステムコール当たり64kBを超えて送信しないようにすることで、Microsoftの不具合を回避しました。(Magnus)
     </para>
    </listitem>

    <listitem>
     <para>
<<<<<<< HEAD
      Improve <application>pg_dump</application> and <application>pg_restore</application>'s
=======
<!--
      Improve <application>pg_dump</> and <application>pg_restore</>'s
>>>>>>> doc_ja_10_premerge
      error reporting after failure to send a SQL command (Tom)
-->
<application>pg_dump</application>および<application>pg_restore</application>がSQLコマンドの送信に失敗した後に報告するエラーを改良しました。(Tom)
     </para>
    </listitem>

    <listitem>
     <para>
<<<<<<< HEAD
      Fix <application>pg_ctl</application> to properly preserve postmaster
      command-line arguments across a <literal>restart</literal> (Bruce)
=======
<!--
      Fix <application>pg_ctl</> to properly preserve postmaster
      command-line arguments across a <literal>restart</> (Bruce)
-->
<application>pg_ctl</application>が<literal>restart</literal>の間正しくpostmasterのコマンドライン引数を保持するように修正しました。(Bruce)
>>>>>>> doc_ja_10_premerge
     </para>
    </listitem>

    <listitem>
     <para>
<<<<<<< HEAD
      Update time zone data files to <application>tzdata</application> release 2008f (for
=======
<!--
      Update time zone data files to <application>tzdata</> release 2008f (for
>>>>>>> doc_ja_10_premerge
      DST law changes in Argentina, Bahamas, Brazil, Mauritius, Morocco,
      Pakistan, Palestine, and Paraguay)
-->
時間帯データファイルを<application>tzdata</application>リリース2008f（アルゼンチン、バハマ、ブラジル、モーリシャス、モロッコ、パキスタン、パレスチナ、パラグアイにおける夏時間規則の変更）まで更新しました。
     </para>
    </listitem>

   </itemizedlist>

  </sect2>
 </sect1>

 <sect1 id="release-8-2-9">
<!--
  <title>Release 8.2.9</title>
-->
  <title>リリース8.2.9</title>

  <formalpara>
<!--
  <title>Release date:</title>
-->
  <title>リリース日:</title>
  <para>2008-06-12</para>
  </formalpara>

  <para>
<!--
   This release contains one serious and one minor bug fix over 8.2.8.
   For information about new features in the 8.2 major release, see
   <xref linkend="release-8-2"/>.
<<<<<<< HEAD
=======
-->
このリリースは8.2.8に対し、重大な1つの不具合と軽微な1つの不具合を修正したものです。
8.2メジャーリリースにおける新機能については<xref linkend="release-8-2"/>を参照してください。
>>>>>>> doc_ja_10_premerge
  </para>

  <sect2>
<!--
   <title>Migration to Version 8.2.9</title>
-->
   <title>バージョン8.2.9への移行</title>

   <para>
<!--
    A dump/restore is not required for those running 8.2.X.
    However, if you are upgrading from a version earlier than 8.2.7,
    see <xref linkend="release-8-2-7"/>.
<<<<<<< HEAD
=======
-->
8.2.Xからの移行ではダンプ/リストアは不要です。
しかしながら、8.2.7より前のバージョンからアップグレードする場合は、<xref linkend="release-8-2-7"/>を参照してください。
>>>>>>> doc_ja_10_premerge
   </para>

  </sect2>

  <sect2>
<!--
   <title>Changes</title>
-->
   <title>変更点</title>

   <itemizedlist>

    <listitem>
     <para>
<<<<<<< HEAD
      Make <function>pg_get_ruledef()</function> parenthesize negative constants (Tom)
=======
<!--
      Make <function>pg_get_ruledef()</> parenthesize negative constants (Tom)
-->
<function>pg_get_ruledef()</function>で負の定数を括弧でくくるようにしました。(Tom)
>>>>>>> doc_ja_10_premerge
     </para>

     <para>
<!--
      Before this fix, a negative constant in a view or rule might be dumped
      as, say, <literal>-42::integer</literal>, which is subtly incorrect: it should
      be <literal>(-42)::integer</literal> due to operator precedence rules.
      Usually this would make little difference, but it could interact with
      another recent patch to cause
      <productname>PostgreSQL</productname> to reject what had been a valid
      <command>SELECT DISTINCT</command> view query.  Since this could result in
      <application>pg_dump</application> output failing to reload, it is being treated
      as a high-priority fix.  The only released versions in which dump
      output is actually incorrect are 8.3.1 and 8.2.7.
-->
この修正前では、ビューまたはルールにおける負の定数がそのまま、例えば<literal>-42::integer</literal>のようにダンプされる可能性がありました。
これは若干正しくありません。
演算子の前置規則に従うと、<literal>(-42)::integer</literal>となるべきです。
通常は大した違いが起こることはありませんが、最近の別のパッチと相互作用して、<productname>PostgreSQL</productname>が有効な<command>SELECT DISTINCT</command>ビューの問い合わせを拒絶することになりました。
<application>pg_dump</application>の出力のリロード失敗という結果になることもあり得たため、これは高優先度の修正として扱われました。
実際にダンプ出力が正しくなかったバージョンは8.3.1と8.2.7だけです。
     </para>
    </listitem>

    <listitem>
     <para>
<<<<<<< HEAD
      Make <command>ALTER AGGREGATE ... OWNER TO</command> update
      <structname>pg_shdepend</structname> (Tom)
=======
<!--
      Make <command>ALTER AGGREGATE ... OWNER TO</> update
      <structname>pg_shdepend</> (Tom)
-->
<command>ALTER AGGREGATE ... OWNER TO</command>が<structname>pg_shdepend</structname>を更新するようにしました。(Tom)
>>>>>>> doc_ja_10_premerge
     </para>

     <para>
<!--
      This oversight could lead to problems if the aggregate was later
      involved in a <command>DROP OWNED</command> or <command>REASSIGN OWNED</command>
      operation.
-->
この見落としにより、集約が後で<command>DROP OWNED</command>または<command>REASSIGN OWNED</command>操作で使用された場合に問題が発生するおそれがありました。
     </para>
    </listitem>

   </itemizedlist>

  </sect2>
 </sect1>

 <sect1 id="release-8-2-8">
<!--
  <title>Release 8.2.8</title>
-->
  <title>リリース8.2.8</title>

  <formalpara>
<!--
  <title>Release date:</title>
  <para>never released</para>
-->
  <title>リリース日:</title>
  <para>リリースされませんでした</para>
  </formalpara>

  <para>
<!--
   This release contains a variety of fixes from 8.2.7.
   For information about new features in the 8.2 major release, see
   <xref linkend="release-8-2"/>.
<<<<<<< HEAD
=======
-->
このリリースには8.2.7からの各種修正が含まれています。
8.2メジャーリリースにおける新機能については<xref linkend="release-8-2"/>を参照してください。
>>>>>>> doc_ja_10_premerge
  </para>

  <sect2>
<!--
   <title>Migration to Version 8.2.8</title>
-->
   <title>バージョン8.2.8への移行</title>

   <para>
<!--
    A dump/restore is not required for those running 8.2.X.
    However, if you are upgrading from a version earlier than 8.2.7,
    see <xref linkend="release-8-2-7"/>.
<<<<<<< HEAD
=======
-->
8.2.Xからの移行ではダンプ/リストアは不要です。
しかしながら、8.2.7より前のバージョンからアップグレードする場合は、<xref linkend="release-8-2-7"/>を参照してください。
>>>>>>> doc_ja_10_premerge
   </para>

  </sect2>

  <sect2>
<!--
   <title>Changes</title>
-->
   <title>変更点</title>

   <itemizedlist>

    <listitem>
     <para>
<!--
      Fix <literal>ERRORDATA_STACK_SIZE exceeded</literal> crash that
      occurred on Windows when using UTF-8 database encoding and a different
      client encoding (Tom)
-->
WindowsでUTF-8データベース符号化方式と異なるクライアント符号化方式が使用された場合に発生する<literal>ERRORDATA_STACK_SIZE exceeded</literal>のクラッシュを修正しました。(Tom)
     </para>
    </listitem>

    <listitem>
     <para>
<<<<<<< HEAD
      Fix <command>ALTER TABLE ADD COLUMN ... PRIMARY KEY</command> so that the new
=======
<!--
      Fix <command>ALTER TABLE ADD COLUMN ... PRIMARY KEY</> so that the new
>>>>>>> doc_ja_10_premerge
      column is correctly checked to see if it's been initialized to all
      non-nulls (Brendan Jurd)
-->
新しい列がすべて非NULLに初期化されていることが正しく検査されるように<command>ALTER TABLE ADD COLUMN ... PRIMARY KEY</command>を修正しました。(Brendan Jurd)
     </para>

     <para>
<!--
      Previous versions neglected to check this requirement at all.
-->
これまでのバージョンでは、この必要条件の検査をまったく行っていませんでした。
     </para>
    </listitem>

    <listitem>
     <para>
<<<<<<< HEAD
      Fix possible <command>CREATE TABLE</command> failure when inheriting the
      <quote>same</quote> constraint from multiple parent relations that
=======
<!--
      Fix possible <command>CREATE TABLE</> failure when inheriting the
      <quote>same</> constraint from multiple parent relations that
>>>>>>> doc_ja_10_premerge
      inherited that constraint from a common ancestor (Tom)
-->
<quote>同じ</quote>制約を、共通の祖先からその制約を継承する複数の親リレーションから継承する場合に、<command>CREATE TABLE</command>が失敗する可能性を修正しました。(Tom)
     </para>
    </listitem>

    <listitem>
     <para>
<<<<<<< HEAD
      Fix <function>pg_get_ruledef()</function> to show the alias, if any, attached
      to the target table of an <command>UPDATE</command> or <command>DELETE</command>
=======
<!--
      Fix <function>pg_get_ruledef()</> to show the alias, if any, attached
      to the target table of an <command>UPDATE</> or <command>DELETE</>
>>>>>>> doc_ja_10_premerge
      (Tom)
-->
<command>UPDATE</command>または<command>DELETE</command>の対象テーブルに別名が付与されていたならば、<function>pg_get_ruledef()</function>がその別名を表示するように修正しました。(Tom)
     </para>
    </listitem>

    <listitem>
     <para>
<!--
      Fix GIN bug that could result in a <literal>too many LWLocks
      taken</literal> failure (Teodor)
-->
<literal>too many LWLocks taken</literal>という結果をもたらす、GINの不具合を修正しました。(Teodor)
     </para>
    </listitem>

    <listitem>
     <para>
<!--
      Avoid possible crash when decompressing corrupted data
      (Zdenek Kotala)
-->
破損したデータを伸長する時に潜在するクラッシュを防止します。(Zdenek Kotala)
     </para>
    </listitem>

    <listitem>
     <para>
<!--
      Repair two places where SIGTERM exit of a backend could leave corrupted
      state in shared memory (Tom)
-->
バックエンドのSIGTERMによる終了が共有メモリを破損したままにする2か所を修正しました。(Tom)
     </para>

     <para>
<!--
      Neither case is very important if SIGTERM is used to shut down the
      whole database cluster together, but there was a problem if someone
      tried to SIGTERM individual backends.
-->
SIGTERMがデータベースクラスタ全体を停止するために使用された場合、どちらも非常に重要ではありません。
しかし、個々のバックエンドにSIGTERMを送信することを試みる場合が問題でした。
     </para>
    </listitem>

    <listitem>
     <para>
<!--
      Fix conversions between ISO-8859-5 and other encodings to handle
      Cyrillic <quote>Yo</quote> characters (<literal>e</literal> and <literal>E</literal> with
      two dots) (Sergey Burladyan)
-->
キリル語の<quote>Yo</quote>文字（2つのドットを持つ<literal>e</literal>と<literal>E</literal>）を扱うISO-8859-5と他の符号化方式との間の変換を修正しました。(Sergey Burladyan)
     </para>
    </listitem>

    <listitem>
     <para>
<<<<<<< HEAD
      Fix several datatype input functions, notably <function>array_in()</function>,
=======
<!--
      Fix several datatype input functions, notably <function>array_in()</>,
>>>>>>> doc_ja_10_premerge
      that were allowing unused bytes in their results to contain
      uninitialized, unpredictable values (Tom)
-->
複数のデータ型入力関数、特に、結果に初期化されず予測できない値を含む未使用のバイトを許す<function>array_in()</function>を修正しました。(Tom)
     </para>

     <para>
<!--
      This could lead to failures in which two apparently identical literal
      values were not seen as equal, resulting in the parser complaining
      about unmatched <literal>ORDER BY</literal> and <literal>DISTINCT</literal>
      expressions.
-->
これは、2つの明らかに同じリテラル値が等しいとみなされず、結果パーサは一致しない<literal>ORDER BY</literal>および<literal>DISTINCT</literal>式に関して不平をいうといったエラーをもたらします。
     </para>
    </listitem>

    <listitem>
     <para>
<!--
      Fix a corner case in regular-expression substring matching
<<<<<<< HEAD
      (<literal>substring(<replaceable>string</replaceable> from
      <replaceable>pattern</replaceable>)</literal>) (Tom)
=======
      (<literal>substring(<replaceable>string</> from
      <replaceable>pattern</>)</literal>) (Tom)
-->
正規表現副文字列一致（<literal>substring(<replaceable>string</replaceable> from <replaceable>pattern</replaceable>)</literal>）における境界状態を修正しました。(Tom)
>>>>>>> doc_ja_10_premerge
     </para>

     <para>
<!--
      The problem occurs when there is a match to the pattern overall but
      the user has specified a parenthesized subexpression and that
      subexpression hasn't got a match.  An example is
      <literal>substring('foo' from 'foo(bar)?')</literal>.
      This should return NULL, since <literal>(bar)</literal> isn't matched, but
      it was mistakenly returning the whole-pattern match instead (ie,
<<<<<<< HEAD
      <literal>foo</literal>).
=======
      <literal>foo</>).
-->
この問題は、パターン全体は一致するが、ユーザが括弧付きの副式を指定し、その副式が一致しなかった時に発生します。
例えば、<literal>substring('foo' from 'foo(bar)?')</literal>です。
<literal>(bar)</literal>は一致しませんので、これはNULLを返すべきです。
しかし、間違ってパターン全体が一致（つまり<literal>foo</literal>）という結果を返していました。
>>>>>>> doc_ja_10_premerge
     </para>
    </listitem>

    <listitem>
     <para>
<<<<<<< HEAD
      Update time zone data files to <application>tzdata</application> release 2008c (for
=======
<!--
      Update time zone data files to <application>tzdata</> release 2008c (for
>>>>>>> doc_ja_10_premerge
      DST law changes in Morocco, Iraq, Choibalsan, Pakistan, Syria, Cuba, and
      Argentina/San_Luis)
-->
時間帯データファイルを<application>tzdata</application>リリース2008c（モナコ、イラク、チョイバルサン、パキスタン、シリア、キューバ、アルゼンチン/サンルイスにおける夏時間規則の変更）まで更新しました。
     </para>
    </listitem>

    <listitem>
     <para>
<<<<<<< HEAD
      Fix incorrect result from <application>ecpg</application>'s
      <function>PGTYPEStimestamp_sub()</function> function (Michael)
=======
<!--
      Fix incorrect result from <application>ecpg</>'s
      <function>PGTYPEStimestamp_sub()</> function (Michael)
-->
<application>ecpg</application>の<function>PGTYPEStimestamp_sub()</function>関数からの不正確な結果を修正しました。(Michael)
>>>>>>> doc_ja_10_premerge
     </para>
    </listitem>

    <listitem>
     <para>
<<<<<<< HEAD
      Fix broken GiST comparison function for <filename>contrib/tsearch2</filename>'s
      <type>tsquery</type> type (Teodor)
=======
<!--
      Fix broken GiST comparison function for <filename>contrib/tsearch2</>'s
      <type>tsquery</> type (Teodor)
-->
<filename>contrib/tsearch2</filename>の<type>tsquery</type>型用の壊れたGiST比較関数を修正しました。(Teodor)
>>>>>>> doc_ja_10_premerge
     </para>
    </listitem>

    <listitem>
     <para>
<<<<<<< HEAD
      Fix possible crashes in <filename>contrib/cube</filename> functions (Tom)
=======
<!--
      Fix possible crashes in <filename>contrib/cube</> functions (Tom)
-->
<filename>contrib/cube</filename>関数に潜在したクラッシュを修正しました。(Tom)
>>>>>>> doc_ja_10_premerge
     </para>
    </listitem>

    <listitem>
     <para>
<<<<<<< HEAD
      Fix core dump in <filename>contrib/xml2</filename>'s
      <function>xpath_table()</function> function when the input query returns a
=======
<!--
      Fix core dump in <filename>contrib/xml2</>'s
      <function>xpath_table()</> function when the input query returns a
>>>>>>> doc_ja_10_premerge
      NULL value (Tom)
-->
入力問い合わせがNULL値を返す場合の<filename>contrib/xml2</filename>の<function>xpath_table()</function>関数のコアダンプを修正しました。(Tom)
     </para>
    </listitem>

    <listitem>
     <para>
<<<<<<< HEAD
      Fix <filename>contrib/xml2</filename>'s makefile to not override
      <literal>CFLAGS</literal> (Tom)
=======
<!--
      Fix <filename>contrib/xml2</>'s makefile to not override
      <literal>CFLAGS</> (Tom)
-->
<filename>contrib/xml2</filename>のmakefileが<literal>CFLAGS</literal>を上書きしないように修正しました。(Tom)
>>>>>>> doc_ja_10_premerge
     </para>
    </listitem>

    <listitem>
     <para>
<<<<<<< HEAD
      Fix <literal>DatumGetBool</literal> macro to not fail with <application>gcc</application>
=======
<!--
      Fix <literal>DatumGetBool</> macro to not fail with <application>gcc</>
>>>>>>> doc_ja_10_premerge
      4.3 (Tom)
-->
<literal>DatumGetBool</literal>マクロが<application>gcc</application> 4.3でエラーにならないよう修正しました。 (Tom)
     </para>

     <para>
<<<<<<< HEAD
      This problem affects <quote>old style</quote> (V0) C functions that
=======
<!--
      This problem affects <quote>old style</> (V0) C functions that
>>>>>>> doc_ja_10_premerge
      return boolean.  The fix is already in 8.3, but the need to
      back-patch it was not realized at the time.
-->
この問題は、論理値を返す<quote>古い形式</quote> (V0)のC関数に影響します。
これは8.3ではすでに修正されていましたが、当時なかったバックパッチが必要になりました。
     </para>
    </listitem>

   </itemizedlist>

  </sect2>
 </sect1>

 <sect1 id="release-8-2-7">
<!--
  <title>Release 8.2.7</title>
-->
  <title>リリース8.2.7</title>

  <formalpara>
<!--
  <title>Release date:</title>
-->
  <title>リリース日:</title>
  <para>2008-03-17</para>
  </formalpara>

  <para>
<!--
   This release contains a variety of fixes from 8.2.6.
   For information about new features in the 8.2 major release, see
   <xref linkend="release-8-2"/>.
<<<<<<< HEAD
=======
-->
このリリースは8.2.6の各種不具合を修正したものです。
8.2メジャーリリースにおける新機能については<xref linkend="release-8-2"/>を参照してください。
>>>>>>> doc_ja_10_premerge
  </para>

  <sect2>
<!--
   <title>Migration to Version 8.2.7</title>
-->
    <title>バージョン8.2.7への移行</title>

   <para>
<!--
    A dump/restore is not required for those running 8.2.X.
    However, you might need to <command>REINDEX</command> indexes on textual
    columns after updating, if you are affected by the Windows locale
    issue described below.
-->
8.2.Xからの移行ではダンプ/リストアは不要です。
しかしながら、後述のWindowsロケール問題の影響がある場合、移行後にテキスト型の列上のインデックスに対し<command>REINDEX</command>を行わなければならないかもしれません。
   </para>

  </sect2>

  <sect2>
<!--
   <title>Changes</title>
-->
   <title>変更点</title>

   <itemizedlist>

    <listitem>
     <para>
<!--
      Fix character string comparison for Windows locales that consider
      different character combinations as equal (Tom)
-->
異なる文字の組み合わせを等価とみなすWindowsロケールにおける文字列比較を修正しました。(Tom)
     </para>

     <para>
<!--
      This fix applies only on Windows and only when using UTF-8
      database encoding.  The same fix was made for all other cases
      over two years ago, but Windows with UTF-8 uses a separate code
      path that was not updated.  If you are using a locale that
      considers some non-identical strings as equal, you may need to
<<<<<<< HEAD
      <command>REINDEX</command> to fix existing indexes on textual columns.
=======
      <command>REINDEX</> to fix existing indexes on textual columns.
-->
この修正はWindowsのみ、かつ、UTF-8データベース符号化方式を使用している場合にのみ当てはまります。
他の状況に対する同じ修正が2年前になされましたが、UTF-8を使用するWindowsでは変更されなかった経路のコードを使用しました。
同一ではない一部の文字列を等価とみなすロケールを使用している場合、既存のテキスト型列上のインデックスを修正するために<command>REINDEX</command>を行う必要があるかもしれません。
>>>>>>> doc_ja_10_premerge
     </para>
    </listitem>

    <listitem>
     <para>
<<<<<<< HEAD
      Repair potential deadlock between concurrent <command>VACUUM FULL</command>
=======
<!--
      Repair potential deadlock between concurrent <command>VACUUM FULL</>
>>>>>>> doc_ja_10_premerge
      operations on different system catalogs (Tom)
-->
異なるシステムカタログに対する同時実行<command>VACUUM FULL</command>の間でのデッドロックの可能性を修正しました。(Tom)
     </para>
    </listitem>

    <listitem>
     <para>
<<<<<<< HEAD
      Fix longstanding <command>LISTEN</command>/<command>NOTIFY</command>
=======
<!--
      Fix longstanding <command>LISTEN</>/<command>NOTIFY</>
>>>>>>> doc_ja_10_premerge
      race condition (Tom)
-->
長く存在した<command>LISTEN</command>/<command>NOTIFY</command>競合条件を修正しました。(Tom)
     </para>

     <para>
<!--
      In rare cases a session that had just executed a
      <command>LISTEN</command> might not get a notification, even though
      one would be expected because the concurrent transaction executing
<<<<<<< HEAD
      <command>NOTIFY</command> was observed to commit later.
=======
      <command>NOTIFY</> was observed to commit later.
-->
まれな場合ですが、<command>NOTIFY</command>を実行した同時実行中のトランザクションが後でコミットされたことが確認できたため、受け取ることが期待できる場合であっても、<command>LISTEN</command>を実行したばかりのセッションが注意を受け取らない可能性がありました。
>>>>>>> doc_ja_10_premerge
     </para>

     <para>
<!--
      A side effect of the fix is that a transaction that has executed
      a not-yet-committed <command>LISTEN</command> command will not see any
      row in <structname>pg_listener</structname> for the <command>LISTEN</command>,
      should it choose to look; formerly it would have.  This behavior
      was never documented one way or the other, but it is possible that
      some applications depend on the old behavior.
-->
この修正の副作用として、
まだコミットされていない<command>LISTEN</command>コマンドを実行したトランザクションが、<command>LISTEN</command>で検索するために選ばなければならない<structname>pg_listener</structname>内の行にまったく現れなくなりました。
これまでは現れていました。
この動作についてはどちらの方式も文書化されていませんでしたが、過去の動作に依存するアプリケーションがあるかもしれません。
     </para>
    </listitem>

    <listitem>
     <para>
<<<<<<< HEAD
      Disallow <command>LISTEN</command> and <command>UNLISTEN</command> within a
=======
<!--
      Disallow <command>LISTEN</> and <command>UNLISTEN</> within a
>>>>>>> doc_ja_10_premerge
      prepared transaction (Tom)
-->
準備されたトランザクションでは<command>LISTEN</command>と<command>UNLISTEN</command>は使用できません。(Tom)
     </para>

     <para>
<!--
      This was formerly allowed but trying to do it had various unpleasant
      consequences, notably that the originating backend could not exit
<<<<<<< HEAD
      as long as an <command>UNLISTEN</command> remained uncommitted.
=======
      as long as an <command>UNLISTEN</> remained uncommitted.
-->
これまでは許されていましたが、これを行うと様々な悪影響が発生しました。
特に構成したバックエンドは<command>UNLISTEN</command>が未コミットである間終了することができませんでした。
>>>>>>> doc_ja_10_premerge
     </para>
    </listitem>

    <listitem>
     <para>
<!--
      Disallow dropping a temporary table within a
      prepared transaction (Heikki)
-->
準備されたトランザクションでは一時テーブルの削除を行うことはできません。(Heikki)
     </para>

     <para>
<!--
      This was correctly disallowed by 8.1, but the check was inadvertently
      broken in 8.2.
-->
これは正確には8.1で禁止されていたのですが、8.2では不注意にこの検査が壊れていました。
     </para>
    </listitem>

    <listitem>
     <para>
<!--
      Fix rare crash when an error occurs during a query using a hash index
-->
ハッシュインデックスを使用する問い合わせの間にエラーが発生した場合のまれなクラッシュを修正しました。
      (Heikki)
     </para>
    </listitem>

    <listitem>
     <para>
<!--
      Fix memory leaks in certain usages of set-returning functions (Neil)
-->
ある方法で集合を返す関数を使用した場合のメモリリークを修正しました。(Neil)
     </para>
    </listitem>

    <listitem>
     <para>
<!--
      Fix input of datetime values for February 29 in years BC (Tom)
-->
紀元前の2月29日に関する日付時刻値の入力を修正しました。(Tom)
     </para>

     <para>
<!--
      The former coding was mistaken about which years were leap years.
-->
これまでのコードでは、うるう年の判定に間違いがありました。
     </para>
    </listitem>

    <listitem>
     <para>
<<<<<<< HEAD
      Fix <quote>unrecognized node type</quote> error in some variants of
      <command>ALTER OWNER</command> (Tom)
=======
<!--
      Fix <quote>unrecognized node type</> error in some variants of
      <command>ALTER OWNER</> (Tom)
-->
<command>ALTER OWNER</command>の一部の構文で発生した<quote>未知のノード型</quote>エラーを修正しました。(Tom)
>>>>>>> doc_ja_10_premerge
     </para>
    </listitem>

    <listitem>
     <para>
<<<<<<< HEAD
      Ensure <structname>pg_stat_activity</structname>.<structfield>waiting</structfield> flag
=======
<!--
      Ensure <structname>pg_stat_activity</>.<structfield>waiting</> flag
>>>>>>> doc_ja_10_premerge
      is cleared when a lock wait is aborted (Tom)
-->
ロック待ちが中断した時に<structname>pg_stat_activity</structname>.<structfield>waiting</structfield>フラグを確実に初期化します。(Tom)
     </para>
    </listitem>

    <listitem>
     <para>
<!--
      Fix handling of process permissions on Windows Vista (Dave, Magnus)
-->
Windows Vistaにおいてプロセス処理の取扱いを修正しました。(Dave, Magnus)
     </para>

     <para>
<!--
      In particular, this fix allows starting the server as the Administrator
      user.
-->
具体的には、この修正により管理者ユーザとしてサーバを起動できるようになります。
     </para>
    </listitem>

    <listitem>
     <para>
<<<<<<< HEAD
      Update time zone data files to <application>tzdata</application> release 2008a
      (in particular, recent Chile changes); adjust timezone abbreviation
      <literal>VET</literal> (Venezuela) to mean UTC-4:30, not UTC-4:00 (Tom)
=======
<!--
      Update time zone data files to <application>tzdata</> release 2008a
      (in particular, recent Chile changes); adjust timezone abbreviation
      <literal>VET</> (Venezuela) to mean UTC-4:30, not UTC-4:00 (Tom)
-->
時間帯データファイルを<application>tzdata</application>リリース2008aに更新しました（具体的には、最近のチリの変更です）。
時間帯省略形<literal>VET</literal> (ベネズエラ)がUTC-4:00ではなくUTC-4:30を意味するように調整しました。(Tom)
>>>>>>> doc_ja_10_premerge
     </para>
    </listitem>

    <listitem>
     <para>
<<<<<<< HEAD
      Fix <application>pg_ctl</application> to correctly extract the postmaster's port
=======
<!--
      Fix <application>pg_ctl</> to correctly extract the postmaster's port
>>>>>>> doc_ja_10_premerge
      number from command-line options (Itagaki Takahiro, Tom)
-->
<application>pg_ctl</application>が正しくコマンドラインオプションからpostmasterのポート番号を取り出すように修正しました。(Itagaki Takahiro, Tom)
     </para>

     <para>
<<<<<<< HEAD
      Previously, <literal>pg_ctl start -w</literal> could try to contact the
=======
<!--
      Previously, <literal>pg_ctl start -w</> could try to contact the
>>>>>>> doc_ja_10_premerge
      postmaster on the wrong port, leading to bogus reports of startup
      failure.
-->
これまでは、<literal>pg_ctl start -w</literal>は間違ったポート上のpostmasterに接続しようとし、おかしな起動失敗の報告をもたらしていました。
     </para>
    </listitem>

    <listitem>
     <para>
<<<<<<< HEAD
      Use <option>-fwrapv</option> to defend against possible misoptimization
      in recent <application>gcc</application> versions (Tom)
     </para>

     <para>
      This is known to be necessary when building <productname>PostgreSQL</productname>
      with <application>gcc</application> 4.3 or later.
=======
<!--
      Use <option>-fwrapv</> to defend against possible misoptimization
      in recent <application>gcc</> versions (Tom)
-->
最近のバージョンの<application>gcc</application>における、最適化ミスの可能性を防止するために<option>-fwrapv</option>を使用します。(Tom)
     </para>

     <para>
<!--
      This is known to be necessary when building <productname>PostgreSQL</>
      with <application>gcc</> 4.3 or later.
-->
これは<application>gcc</application> 4.3以降で<productname>PostgreSQL</productname>を構築する場合に必須であることは分かっていました。
>>>>>>> doc_ja_10_premerge
     </para>
    </listitem>


    <listitem>
     <para>
<<<<<<< HEAD
      Correctly enforce <varname>statement_timeout</varname> values longer
      than <literal>INT_MAX</literal> microseconds (about 35 minutes) (Tom)
     </para>

     <para>
      This bug affects only builds with <option>--enable-integer-datetimes</option>.
=======
<!--
      Correctly enforce <varname>statement_timeout</> values longer
      than <literal>INT_MAX</> microseconds (about 35 minutes) (Tom)
-->
<literal>INT_MAX</literal>マイクロ秒（約35分）より大きい<varname>statement_timeout</varname>値を正しく強制します。(Tom)
     </para>

     <para>
<!--
      This bug affects only builds with <option>&#045;-enable-integer-datetimes</>.
-->
この不具合は<option>--enable-integer-datetimes</option>で構築した場合にのみ影響します。
>>>>>>> doc_ja_10_premerge
     </para>
    </listitem>

    <listitem>
     <para>
<<<<<<< HEAD
      Fix <quote>unexpected PARAM_SUBLINK ID</quote> planner error when
=======
<!--
      Fix <quote>unexpected PARAM_SUBLINK ID</> planner error when
>>>>>>> doc_ja_10_premerge
      constant-folding simplifies a sub-select (Tom)
-->
一定の折りたたみが副問い合わせを単純化する時の<quote>想定外のPARAM_SUBLINK ID</quote>というプランナエラーを修正しました。(Tom)
     </para>
    </listitem>

    <listitem>
     <para>
<!--
      Fix logical errors in constraint-exclusion handling of <literal>IS
<<<<<<< HEAD
      NULL</literal> and <literal>NOT</literal> expressions (Tom)
=======
      NULL</> and <literal>NOT</> expressions (Tom)
-->
<literal>IS NULL</literal>および<literal>NOT</literal>式の、制約による除外の取扱いにおける論理エラーを修正しました。(Tom)
>>>>>>> doc_ja_10_premerge
     </para>

     <para>
<!--
      The planner would sometimes exclude partitions that should not
      have been excluded because of the possibility of NULL results.
-->
プランナは時々、NULL結果の可能性のために除外すべきでないパーティションを除外しました。
     </para>
    </listitem>

    <listitem>
     <para>
<<<<<<< HEAD
      Fix another cause of <quote>failed to build any N-way joins</quote>
=======
<!--
      Fix another cause of <quote>failed to build any N-way joins</>
>>>>>>> doc_ja_10_premerge
      planner errors (Tom)
-->
<quote>failed to build any N-way joins</quote>というプランナエラーの別の原因を修正しました。(Tom)
     </para>

     <para>
<!--
      This could happen in cases where a clauseless join needed to be
      forced before a join clause could be exploited.
-->
これは、結合句が見つかる前に句のない結合を強制しなければならない場合に発生しました。
     </para>
    </listitem>

    <listitem>
     <para>
<!--
      Fix incorrect constant propagation in outer-join planning (Tom)
-->
外部結合の計画作成における間違った定数の伝搬を修正しました。(Tom)
     </para>

     <para>
<!--
      The planner could sometimes incorrectly conclude that a variable
      could be constrained to be equal to a constant, leading
      to wrong query results.
-->
プランナは時々、間違った問い合わせ結果をもたらす、変数が定数と同じであると制約されていると間違った判断を行いました。
     </para>
    </listitem>

    <listitem>
     <para>
<<<<<<< HEAD
      Fix display of constant expressions in <literal>ORDER BY</literal>
      and <literal>GROUP BY</literal> (Tom)
=======
<!--
      Fix display of constant expressions in <literal>ORDER BY</>
      and <literal>GROUP BY</> (Tom)
-->
<literal>ORDER BY</literal>および<literal>GROUP BY</literal>における定数式の表示を修正しました。(Tom)
>>>>>>> doc_ja_10_premerge
     </para>

     <para>
<!--
      An explicitly casted constant would be shown incorrectly.  This could
      for example lead to corruption of a view definition during
      dump and reload.
-->
明示的にキャストされた定数が間違って表示されていました。
これは例えば、ダンプ/再ロード時のビュー定義の破壊をもたらします。
     </para>
    </listitem>

    <listitem>
     <para>
<<<<<<< HEAD
      Fix <application>libpq</application> to handle NOTICE messages correctly
=======
<!--
      Fix <application>libpq</> to handle NOTICE messages correctly
>>>>>>> doc_ja_10_premerge
      during COPY OUT (Tom)
-->
COPY OUT時にNOTICEメッセージを正しく扱うように<application>libpq</application>を修正しました。(Tom)
     </para>

     <para>
<!--
      This failure has only been observed to occur when a user-defined
      datatype's output routine issues a NOTICE, but there is no
      guarantee it couldn't happen due to other causes.
-->
この失敗は、ユーザ定義データ型の出力関数がNOTICEを発行する時にのみ発生することが観察されました。
しかし、他の原因により発生しないことは保証しません。
     </para>
    </listitem>

   </itemizedlist>

  </sect2>
 </sect1>

 <sect1 id="release-8-2-6">
<!--
  <title>Release 8.2.6</title>
-->
  <title>リリース8.2.6</title>

  <formalpara>
<!--
  <title>Release date:</title>
-->
  <title>リリース日:</title>
  <para>2008-01-07</para>
  </formalpara>

  <para>
<!--
   This release contains a variety of fixes from 8.2.5,
   including fixes for significant security issues.
   For information about new features in the 8.2 major release, see
   <xref linkend="release-8-2"/>.
<<<<<<< HEAD
=======
-->
このリリースは、重大なセキュリティ問題の修正を含む、8.2.5の各種不具合を修正したものです。
8.2メジャーリリースにおける新機能については<xref linkend="release-8-2"/>を参照してください。
>>>>>>> doc_ja_10_premerge
  </para>

  <sect2>
<!--
   <title>Migration to Version 8.2.6</title>
-->
    <title>バージョン8.2.6への移行</title>

   <para>
<!--
    A dump/restore is not required for those running 8.2.X.
-->
8.2.Xからの移行ではダンプ/リストアは不要です。
   </para>

  </sect2>

  <sect2>
<!--
   <title>Changes</title>
-->
    <title>変更点</title>

   <itemizedlist>

    <listitem>
     <para>
<!--
      Prevent functions in indexes from executing with the privileges of
<<<<<<< HEAD
      the user running <command>VACUUM</command>, <command>ANALYZE</command>, etc (Tom)
=======
      the user running <command>VACUUM</>, <command>ANALYZE</>, etc (Tom)
-->
インデックス内の関数が<command>VACUUM</command>、<command>ANALYZE</command>などを実行するユーザの権限で実行されることを防止します。(Tom)
>>>>>>> doc_ja_10_premerge
     </para>

     <para>
<!--
      Functions used in index expressions and partial-index
      predicates are evaluated whenever a new table entry is made.  It has
      long been understood that this poses a risk of trojan-horse code
      execution if one modifies a table owned by an untrustworthy user.
      (Note that triggers, defaults, check constraints, etc. pose the
      same type of risk.)  But functions in indexes pose extra danger
      because they will be executed by routine maintenance operations
      such as <command>VACUUM FULL</command>, which are commonly performed
      automatically under a superuser account.  For example, a nefarious user
      can execute code with superuser privileges by setting up a
      trojan-horse index definition and waiting for the next routine vacuum.
      The fix arranges for standard maintenance operations
      (including <command>VACUUM</command>, <command>ANALYZE</command>, <command>REINDEX</command>,
      and <command>CLUSTER</command>) to execute as the table owner rather than
      the calling user, using the same privilege-switching mechanism already
      used for <literal>SECURITY DEFINER</literal> functions.  To prevent bypassing
      this security measure, execution of <command>SET SESSION
<<<<<<< HEAD
      AUTHORIZATION</command> and <command>SET ROLE</command> is now forbidden within a
      <literal>SECURITY DEFINER</literal> context.  (CVE-2007-6600)
=======
      AUTHORIZATION</> and <command>SET ROLE</> is now forbidden within a
      <literal>SECURITY DEFINER</> context.  (CVE-2007-6600)
-->
インデックス式内で使用される関数および部分インデックスの述語は、新しいテーブル項目が作成されると評価されます。
これが、もし信頼できないユーザが所有するテーブルを変更したとすると、トロイの木馬となるコードの実行という危険性を引き起こすことは以前から解っていました。
（トリガ、デフォルト、検査制約なども同種の危険性を引き起こします。）
しかしインデックス内の関数は、<command>VACUUM FULL</command>などの日常の保守作業で実行される可能性があるため、さらに危険です。
こうした保守作業は通常自動的にスーパーユーザ権限で行われます。
例えば、極悪なユーザがトロイの木馬となるインデックス定義を設定し、次回の日常のバキューム処理を待つことで、スーパーユーザ権限でコードを実行することが可能です。
この修正は、<literal>SECURITY DEFINER</literal>関数で使用されていた権限変更機構を使用して、標準的な保守作業（<command>VACUUM</command>、<command>ANALYZE</command>、<command>REINDEX</command>、<command>CLUSTER</command>を含む）が呼び出したユーザではなくテーブル所有者として実行するように調整しました。
こうしたセキュリティ制限の迂回を防ぐために、<command>SET SESSION AUTHORIZATION</command>および<command>SET ROLE</command>が<literal>SECURITY DEFINER</literal>コンテキストで禁止されるようになりました。(CVE-2007-6600)
>>>>>>> doc_ja_10_premerge
     </para>
    </listitem>

    <listitem>
     <para>
<!--
      Repair assorted bugs in the regular-expression package (Tom, Will Drewry)
-->
正規表現パッケージ内のさまざまな不具合を修正しました。(Tom, Will Drewry)
     </para>

     <para>
<!--
      Suitably crafted regular-expression patterns could cause crashes,
      infinite or near-infinite looping, and/or massive memory consumption,
      all of which pose denial-of-service hazards for applications that
      accept regex search patterns from untrustworthy sources.
      (CVE-2007-4769, CVE-2007-4772, CVE-2007-6067)
-->
より巧妙な正規表現パターンにより、信頼できないソースから正規表現検索パターンを受け付けるアプリケーションでは、クラッシュ、無限または無限に近いループ、大量のメモリの浪費、DoS攻撃を引き起こすすべてが発生する可能性がありました。(CVE-2007-4769、CVE-2007-4772、CVE-2007-6067)
     </para>
    </listitem>

    <listitem>
     <para>
<<<<<<< HEAD
      Require non-superusers who use <filename>/contrib/dblink</filename> to use only
=======
<!--
      Require non-superusers who use <filename>/contrib/dblink</> to use only
>>>>>>> doc_ja_10_premerge
      password authentication, as a security measure (Joe)
-->
<filename>/contrib/dblink</filename>を使用する非スーパーユーザは、パスワード認証のみをセキュリティ制限として使用しなければなりません。(Joe)
     </para>

     <para>
<!--
      The fix that appeared for this in 8.2.5 was incomplete, as it plugged
      the hole for only some <filename>dblink</filename> functions.  (CVE-2007-6601,
      CVE-2007-3278)
-->
8.2.5で行った修正は不十分で、一部の<filename>dblink</filename>関数に対してのみ問題を解消していました。(CVE-2007-6601,CVE-2007-3278)
     </para>
    </listitem>

    <listitem>
     <para>
<!--
      Fix bugs in WAL replay for GIN indexes (Teodor)
-->
GINインデックスに対するWAL再生における不具合を修正しました。(Teodor)
     </para>
    </listitem>

    <listitem>
     <para>
<!--
      Fix GIN index build to work properly when
<<<<<<< HEAD
      <varname>maintenance_work_mem</varname> is 4GB or more (Tom)
=======
      <varname>maintenance_work_mem</> is 4GB or more (Tom)
-->
<varname>maintenance_work_mem</varname>が4GB以上の場合にGINインデックスの構築が適切に動作するように修正しました。(Tom)
>>>>>>> doc_ja_10_premerge
     </para>
    </listitem>

    <listitem>
     <para>
<<<<<<< HEAD
      Update time zone data files to <application>tzdata</application> release 2007k
=======
<!--
      Update time zone data files to <application>tzdata</> release 2007k
>>>>>>> doc_ja_10_premerge
      (in particular, recent Argentina changes) (Tom)
-->
時間帯ファイルを<application>tzdata</application>リリース2007kに更新しました（具体的には最近のアルゼンチンの変更）。(Tom)
     </para>
    </listitem>

    <listitem>
     <para>
<!--
      Improve planner's handling of LIKE/regex estimation in non-C locales
      (Tom)
-->
非CロケールにおけるプランナのLIKE/正規表現の推定を改良しました。(Tom)
     </para>
    </listitem>

    <listitem>
     <para>
<!--
      Fix planning-speed problem for deep outer-join nests, as well as
      possible poor choice of join order (Tom)
-->
深い階層の外部結合における計画処理速度を修正しました。
同様に結合順の非効率な選択を行う可能性も修正しました。(Tom)
     </para>
    </listitem>

    <listitem>
     <para>
<!--
      Fix planner failure in some cases of <literal>WHERE false AND var IN
<<<<<<< HEAD
      (SELECT ...)</literal> (Tom)
=======
      (SELECT ...)</> (Tom)
-->
一部の<literal>WHERE false AND var IN (SELECT ...)</literal>におけるプランナの失敗を修正しました。 (Tom)
>>>>>>> doc_ja_10_premerge
     </para>
    </listitem>

    <listitem>
     <para>
<<<<<<< HEAD
      Make <command>CREATE TABLE ... SERIAL</command> and
      <command>ALTER SEQUENCE ... OWNED BY</command> not change the
      <function>currval()</function> state of the sequence (Tom)
=======
<!--
      Make <command>CREATE TABLE ... SERIAL</> and
      <command>ALTER SEQUENCE ... OWNED BY</> not change the
      <function>currval()</> state of the sequence (Tom)
-->
<command>CREATE TABLE ... SERIAL</command>と<command>ALTER SEQUENCE ... OWNED BY</command>がシーケンスの<function>currval()</function>状態を変更しないようにしました。(Tom)
>>>>>>> doc_ja_10_premerge
     </para>
    </listitem>

    <listitem>
     <para>
<!--
      Preserve the tablespace and storage parameters of indexes that are
<<<<<<< HEAD
      rebuilt by <command>ALTER TABLE ... ALTER COLUMN TYPE</command> (Tom)
=======
      rebuilt by <command>ALTER TABLE ... ALTER COLUMN TYPE</> (Tom)
-->
<command>ALTER TABLE ... ALTER COLUMN TYPE</command>で再構築されるインデックスのテーブル空間と格納パラメータを保持します。(Tom)
>>>>>>> doc_ja_10_premerge
     </para>
    </listitem>

    <listitem>
     <para>
<!--
      Make archive recovery always start a new WAL timeline, rather than only
      when a recovery stop time was used (Simon)
-->
アーカイブリカバリが、リカバリの停止時間が使用された時だけではなく、常に新しいWAL時系列から始まるようにしました。
     </para>

     <para>
<!--
      This avoids a corner-case risk of trying to overwrite an existing
      archived copy of the last WAL segment, and seems simpler and cleaner
      than the original definition.
-->
これは、まれに起こる可能性のある既存の最後のWALセグメントのアーカイブされたコピーを上書きしようとする危険を防止します。
また元の定義より単純、明確になったと考えられます。
     </para>
    </listitem>

    <listitem>
     <para>
<<<<<<< HEAD
      Make <command>VACUUM</command> not use all of <varname>maintenance_work_mem</varname>
=======
<!--
      Make <command>VACUUM</> not use all of <varname>maintenance_work_mem</>
>>>>>>> doc_ja_10_premerge
      when the table is too small for it to be useful (Alvaro)
-->
テーブルが小さすぎて有用でない場合、<command>VACUUM</command>がすべての<varname>maintenance_work_mem</varname>を使用しないようにしました。(Alvaro)
     </para>
    </listitem>

    <listitem>
     <para>
<<<<<<< HEAD
      Fix potential crash in <function>translate()</function> when using a multibyte
=======
<!--
      Fix potential crash in <function>translate()</> when using a multibyte
>>>>>>> doc_ja_10_premerge
      database encoding (Tom)
-->
マルチバイトデータベース符号化方式を使用している時に潜在する、<function>translate()</function>のクラッシュを修正しました。
     </para>
    </listitem>

    <listitem>
     <para>
<<<<<<< HEAD
      Make <function>corr()</function> return the correct result for negative
=======
<!--
      Make <function>corr()</> return the correct result for negative
>>>>>>> doc_ja_10_premerge
      correlation values (Neil)
-->
<function>corr()</function>が負の相関値に対して正しい結果を返すようにしました。(Neil)
     </para>
    </listitem>

    <listitem>
     <para>
<<<<<<< HEAD
      Fix overflow in <literal>extract(epoch from interval)</literal> for intervals
=======
<!--
      Fix overflow in <literal>extract(epoch from interval)</> for intervals
>>>>>>> doc_ja_10_premerge
      exceeding 68 years (Tom)
-->
68年を超える間隔で<literal>extract(epoch from interval)</literal>がオーバーフローすることを修正しました。(Tom)
     </para>
    </listitem>

    <listitem>
     <para>
<!--
      Fix PL/Perl to not fail when a UTF-8 regular expression is used
      in a trusted function (Andrew)
-->
信頼された関数内でUTF-8正規表現が使用された場合にPL/Perlが失敗しないように修正しました。(Andrew)
     </para>
    </listitem>

    <listitem>
     <para>
<<<<<<< HEAD
      Fix PL/Perl to cope when platform's Perl defines type <literal>bool</literal>
      as <literal>int</literal> rather than <literal>char</literal> (Tom)
=======
<!--
      Fix PL/Perl to cope when platform's Perl defines type <literal>bool</>
      as <literal>int</> rather than <literal>char</> (Tom)
-->
プラットフォームのPerlが<literal>bool</literal>型を<literal>char</literal>ではなく<literal>int</literal>として定義した場合に対応するようにPL/Perlを修正しました。(Tom)
>>>>>>> doc_ja_10_premerge
     </para>

     <para>
<!--
      While this could theoretically happen anywhere, no standard build of
<<<<<<< HEAD
      Perl did things this way ... until <productname>macOS</productname> 10.5.
=======
      Perl did things this way ... until <productname>macOS</> 10.5.
-->
これは理論上どこでも発生する可能性がありましたが、標準的に構築されたPerlではこうなりませんでした。<productname>macOS</productname> 10.5までは…。
>>>>>>> doc_ja_10_premerge
     </para>
    </listitem>

    <listitem>
     <para>
<!--
      Fix PL/Python to work correctly with Python 2.5 on 64-bit machines
      (Marko Kreen)
-->
64ビットマシン上のPython 2.5で正常に動作するようPL/Pythonを修正しました。(Marko Kreen)
     </para>
    </listitem>

    <listitem>
     <para>
<!--
      Fix PL/Python to not crash on long exception messages (Alvaro)
-->
長い例外メッセージでクラッシュしないようPL/Pythonを修正しました。(Alvaro)
     </para>
    </listitem>

    <listitem>
     <para>
<<<<<<< HEAD
      Fix <application>pg_dump</application> to correctly handle inheritance child tables
=======
<!--
      Fix <application>pg_dump</> to correctly handle inheritance child tables
>>>>>>> doc_ja_10_premerge
      that have default expressions different from their parent's (Tom)
-->
親テーブルと異なるデフォルト式を持つ、継承子テーブルを正しく扱うよう<application>pg_dump</application>を修正しました。(Tom)
     </para>
    </listitem>

    <listitem>
     <para>
<<<<<<< HEAD
      Fix <application>libpq</application> crash when <varname>PGPASSFILE</varname> refers
=======
<!--
      Fix <application>libpq</> crash when <varname>PGPASSFILE</> refers
>>>>>>> doc_ja_10_premerge
      to a file that is not a plain file (Martin Pitt)
-->
<varname>PGPASSFILE</varname>が普通のファイル以外のファイルを参照する場合に<application>libpq</application>がクラッシュすることを修正しました。
     </para>
    </listitem>

    <listitem>
     <para>
<<<<<<< HEAD
      <application>ecpg</application> parser fixes (Michael)
=======
<!--
      <application>ecpg</> parser fixes (Michael)
-->
<application>ecpg</application>パーサを修正しました。(Michael)
>>>>>>> doc_ja_10_premerge
     </para>
    </listitem>

    <listitem>
     <para>
<<<<<<< HEAD
      Make <filename>contrib/pgcrypto</filename> defend against
      <application>OpenSSL</application> libraries that fail on keys longer than 128
=======
<!--
      Make <filename>contrib/pgcrypto</> defend against
      <application>OpenSSL</> libraries that fail on keys longer than 128
>>>>>>> doc_ja_10_premerge
      bits; which is the case at least on some Solaris versions (Marko Kreen)
-->
128ビットより長いキーで失敗する<application>OpenSSL</application>ライブラリに対して<filename>contrib/pgcrypto</filename>が防衛するようにしました。
これは少なくとも一部のバージョンのSolarisで発生します。(Marko Kreen)
     </para>
    </listitem>

    <listitem>
     <para>
<<<<<<< HEAD
      Make <filename>contrib/tablefunc</filename>'s <function>crosstab()</function> handle
=======
<!--
      Make <filename>contrib/tablefunc</>'s <function>crosstab()</> handle
>>>>>>> doc_ja_10_premerge
      NULL rowid as a category in its own right, rather than crashing (Joe)
-->
<filename>contrib/tablefunc</filename>の<function>crosstab()</function>が、クラッシュするのではなく、独自の意味でカテゴリとしてNULL行識別子を扱うようにしました。(Joe)
     </para>
    </listitem>

    <listitem>
     <para>
<<<<<<< HEAD
      Fix <type>tsvector</type> and <type>tsquery</type> output routines to
=======
<!--
      Fix <type>tsvector</> and <type>tsquery</> output routines to
>>>>>>> doc_ja_10_premerge
      escape backslashes correctly (Teodor, Bruce)
-->
<type>tsvector</type>および<type>tsquery</type>出力関数が正しくバックスラッシュをエスケープするように修正しました。(Teodor, Bruce)
     </para>
    </listitem>

    <listitem>
     <para>
<<<<<<< HEAD
      Fix crash of <function>to_tsvector()</function> on huge input strings (Teodor)
=======
<!--
      Fix crash of <function>to_tsvector()</> on huge input strings (Teodor)
-->
入力文字列が大きな場合に<function>to_tsvector()</function>がクラッシュすることを修正しました。(Teodor)
>>>>>>> doc_ja_10_premerge
     </para>
    </listitem>

    <listitem>
     <para>
<<<<<<< HEAD
      Require a specific version of <productname>Autoconf</productname> to be used
      when re-generating the <command>configure</command> script (Peter)
=======
<!--
      Require a specific version of <productname>Autoconf</> to be used
      when re-generating the <command>configure</> script (Peter)
-->
<command>configure</command>スクリプトを再生成する場合、特定のバージョンの<productname>Autoconf</productname>を使用することが必要になりました。(Peter)
>>>>>>> doc_ja_10_premerge
     </para>

     <para>
<!--
      This affects developers and packagers only.  The change was made
      to prevent accidental use of untested combinations of
      <productname>Autoconf</productname> and <productname>PostgreSQL</productname> versions.
      You can remove the version check if you really want to use a
      different <productname>Autoconf</productname> version, but it's
      your responsibility whether the result works or not.
-->
これは開発者とパッケージ作成者のみに影響します。
この変更は、<productname>Autoconf</productname>と<productname>PostgreSQL</productname>の未確認のバージョンの組み合わせを使用する事故を防ぐためになされました。
その結果がうまくいくかどうかについて責任を負う限り、異なるバージョンの<productname>Autoconf</productname>を本当に使用したい場合は、このバージョン検査を取り除くことができます。
     </para>
    </listitem>

    <listitem>
     <para>
<<<<<<< HEAD
      Update <function>gettimeofday</function> configuration check so that
      <productname>PostgreSQL</productname> can be built on newer versions of
      <productname>MinGW</productname> (Magnus)
=======
<!--
      Update <function>gettimeofday</> configuration check so that
      <productname>PostgreSQL</> can be built on newer versions of
      <productname>MinGW</> (Magnus)
-->
<productname>PostgreSQL</productname>が<productname>MinGW</productname>の新しいバージョンで構築できるように<function>gettimeofday</function>の構築用検査を更新しました。
>>>>>>> doc_ja_10_premerge
     </para>
    </listitem>

   </itemizedlist>

  </sect2>
 </sect1>

 <sect1 id="release-8-2-5">
<!--
  <title>Release 8.2.5</title>
-->
  <title>リリース8.2.5</title>

  <formalpara>
<!--
  <title>Release date:</title>
-->
  <title>リリース日:</title>
  <para>2007-09-17</para>
  </formalpara>

  <para>
<!--
   This release contains a variety of fixes from 8.2.4.
   For information about new features in the 8.2 major release, see
   <xref linkend="release-8-2"/>.
<<<<<<< HEAD
=======
-->
このリリースは8.2.4の各種不具合を修正したものです。
8.2メジャーリリースにおける新機能については<xref linkend="release-8-2"/>を参照してください。
>>>>>>> doc_ja_10_premerge
  </para>

  <sect2>
<!--
   <title>Migration to Version 8.2.5</title>
-->
   <title>バージョン8.2.5への移行</title>

   <para>
<!--
    A dump/restore is not required for those running 8.2.X.
-->
8.2.Xからの移行ではダンプ/リストアは不要です。
   </para>

  </sect2>

  <sect2>
<!--
   <title>Changes</title>
-->
   <title>変更点</title>

   <itemizedlist>

    <listitem>
     <para>
<!--
      Prevent index corruption when a transaction inserts rows and
      then aborts close to the end of a concurrent <command>VACUUM</command>
      on the same table (Tom)
-->
トランザクションが、行を挿入した後に、同一テーブルに対する同時実行中の<command>VACUUM</command>の終了時刻とほぼ同じ時点でアボートした場合のインデックス破損を防止します。(Tom)
     </para>
    </listitem>

    <listitem>
     <para>
<<<<<<< HEAD
      Fix <literal>ALTER DOMAIN ADD CONSTRAINT</literal> for cases involving
=======
<!--
      Fix <literal>ALTER DOMAIN ADD CONSTRAINT</> for cases involving
>>>>>>> doc_ja_10_premerge
      domains over domains (Tom)
-->
ドメイン越しのドメインを含む場合の<literal>ALTER DOMAIN ADD CONSTRAINT</literal>を修正しました。(Tom)
     </para>
    </listitem>

    <listitem>
     <para>
<<<<<<< HEAD
      Make <command>CREATE DOMAIN ... DEFAULT NULL</command> work properly (Tom)
=======
<!--
      Make <command>CREATE DOMAIN ... DEFAULT NULL</> work properly (Tom)
-->
<command>CREATE DOMAIN ... DEFAULT NULL</command>が適切に動作するようにしました。(Tom)
>>>>>>> doc_ja_10_premerge
     </para>
    </listitem>

    <listitem>
     <para>
<!--
      Fix some planner problems with outer joins, notably poor
      size estimation for <literal>t1 LEFT JOIN t2 WHERE t2.col IS NULL</literal>
      (Tom)
-->
外部結合に関するプランナの問題をいくつか、特に、<literal>t1 LEFT JOIN t2 WHERE t2.col IS NULL</literal>に対するおかしなサイズ推定を修正しました。
     </para>
    </listitem>

    <listitem>
     <para>
<<<<<<< HEAD
      Allow the <type>interval</type> data type to accept input consisting only of
=======
<!--
      Allow the <type>interval</> data type to accept input consisting only of
>>>>>>> doc_ja_10_premerge
      milliseconds or microseconds (Neil)
-->
<type>interval</type>データ型が、ミリ秒のみ、または、マイクロ秒のみから構成された入力を受け付けられるようになりました。(Neil)
     </para>
    </listitem>

    <listitem>
     <para>
<<<<<<< HEAD
      Allow timezone name to appear before the year in <type>timestamp</type> input (Tom)
=======
<!--
      Allow timezone name to appear before the year in <type>timestamp</> input (Tom)
-->
<type>timestamp</type>型の入力で、時間帯名称が年の前に来てもよくなりました。(Tom)
>>>>>>> doc_ja_10_premerge
     </para>
    </listitem>

    <listitem>
     <para>
<<<<<<< HEAD
      Fixes for <acronym>GIN</acronym> indexes used by <filename>/contrib/tsearch2</filename> (Teodor)
=======
<!--
      Fixes for <acronym>GIN</> indexes used by <filename>/contrib/tsearch2</> (Teodor)
-->
<filename>/contrib/tsearch2</filename>で使用される<acronym>GIN</acronym>インデックスを修正しました。(Teodor)
>>>>>>> doc_ja_10_premerge
     </para>
    </listitem>

    <listitem>
     <para>
<!--
      Speed up rtree index insertion (Teodor)
-->
r-treeインデックスの挿入を高速化しました。(Teodor)
     </para>
    </listitem>

    <listitem>
     <para>
<<<<<<< HEAD
      Fix excessive logging of <acronym>SSL</acronym> error messages (Tom)
=======
<!--
      Fix excessive logging of <acronym>SSL</> error messages (Tom)
-->
過度な<acronym>SSL</acronym>エラーメッセージのログ処理を修正しました。(Tom)
>>>>>>> doc_ja_10_premerge
     </para>
    </listitem>

    <listitem>
     <para>
<!--
      Fix logging so that log messages are never interleaved when using
      the syslogger process (Andrew)
-->
sysloggerプロセスを使用する時にログメッセージが差し込まれないようにログ処理を修正しました。(Andrew)
     </para>
    </listitem>

    <listitem>
     <para>
<<<<<<< HEAD
      Fix crash when <varname>log_min_error_statement</varname> logging runs out
=======
<!--
      Fix crash when <varname>log_min_error_statement</> logging runs out
>>>>>>> doc_ja_10_premerge
      of memory (Tom)
-->
<varname>log_min_error_statement</varname>ログ処理がメモリ不足になった時のクラッシュを修正しました。(Tom)
     </para>
    </listitem>

    <listitem>
     <para>
<!--
      Fix incorrect handling of some foreign-key corner cases (Tom)
-->
一部の外部キーの境界の不正な扱いを修正しました。(Tom)
     </para>
    </listitem>

    <listitem>
     <para>
<<<<<<< HEAD
      Fix <function>stddev_pop(numeric)</function> and <function>var_pop(numeric)</function> (Tom)
=======
<!--
      Fix <function>stddev_pop(numeric)</> and <function>var_pop(numeric)</> (Tom)
-->
<function>stddev_pop(numeric)</function>と<function>var_pop(numeric)</function>を修正しました。(Tom)
>>>>>>> doc_ja_10_premerge
     </para>
    </listitem>

    <listitem>
     <para>
<<<<<<< HEAD
      Prevent <command>REINDEX</command> and <command>CLUSTER</command> from failing
=======
<!--
      Prevent <command>REINDEX</> and <command>CLUSTER</> from failing
>>>>>>> doc_ja_10_premerge
      due to attempting to process temporary tables of other sessions (Alvaro)
-->
他のセッションによる一時テーブル処理を防ぐために起こる<command>REINDEX</command>と<command>CLUSTER</command>の失敗を防ぎます。(Alvaro)
     </para>
    </listitem>

    <listitem>
     <para>
<!--
      Update the time zone database rules, particularly New Zealand's upcoming changes (Tom)
-->
時間帯データベース規則を更新しました。具体的にはニュージーランドで予定している変更です。(Tom)
     </para>
    </listitem>

    <listitem>
     <para>
<!--
      Windows socket and semaphore improvements (Magnus)
-->
Windowsソケットとセマフォを改良しました。(Magnus)
     </para>
    </listitem>

    <listitem>
     <para>
<<<<<<< HEAD
      Make <command>pg_ctl -w</command> work properly in Windows service mode (Dave Page)
=======
<!--
      Make <command>pg_ctl -w</> work properly in Windows service mode (Dave Page)
-->
<command>pg_ctl -w</command>がWin32サービスモードで適切に動作するようになりました。(Dave Page)
>>>>>>> doc_ja_10_premerge
     </para>
    </listitem>

    <listitem>
     <para>
<<<<<<< HEAD
      Fix memory allocation bug when using <application>MIT Kerberos</application> on Windows (Magnus)
=======
<!--
      Fix memory allocation bug when using <application>MIT Kerberos</> on Windows (Magnus)
-->
Windowsで<application>MIT Kerberos</application>を使用する場合のメモリ割り当てに関する不具合を修正しました。(Magnus)
>>>>>>> doc_ja_10_premerge
     </para>
    </listitem>

    <listitem>
     <para>
<<<<<<< HEAD
      Suppress timezone name (<literal>%Z</literal>) in log timestamps on Windows
=======
<!--
      Suppress timezone name (<literal>%Z</>) in log timestamps on Windows
>>>>>>> doc_ja_10_premerge
      because of possible encoding mismatches (Tom)
-->
符号化方式が不整合となる可能性があるため、Windowsにてログのタイムスタンプに時間帯名(<literal>%Z</literal>)を出力しないようにしました。(Tom)
     </para>
    </listitem>

    <listitem>
     <para>
<<<<<<< HEAD
      Require non-superusers who use <filename>/contrib/dblink</filename> to use only
=======
<!--
      Require non-superusers who use <filename>/contrib/dblink</> to use only
>>>>>>> doc_ja_10_premerge
      password authentication, as a security measure (Joe)
-->
セキュリティ強化のため、パスワード認証のみを使用する<filename>/contrib/dblink</filename>を使用するユーザが非特権ユーザであることを要求します。(Joe)
     </para>
    </listitem>

    <listitem>
     <para>
<<<<<<< HEAD
      Restrict <filename>/contrib/pgstattuple</filename> functions to superusers, for security reasons (Tom)
=======
<!--
      Restrict <filename>/contrib/pgstattuple</> functions to superusers, for security reasons (Tom)
-->
セキュリティ上の理由で、<filename>/contrib/pgstattuple</filename>関数をスーパーユーザに制限しました。(Tom)
>>>>>>> doc_ja_10_premerge
     </para>
    </listitem>

    <listitem>
     <para>
<<<<<<< HEAD
      Do not let <filename>/contrib/intarray</filename> try to make its GIN opclass
=======
<!--
      Do not let <filename>/contrib/intarray</> try to make its GIN opclass
>>>>>>> doc_ja_10_premerge
      the default (this caused problems at dump/restore) (Tom)
-->
<filename>/contrib/intarray</filename>がGIN演算子クラスをデフォルトにしないようにしました（ダンプ/リストア時に問題が発生します）。(Tom)
     </para>
    </listitem>

   </itemizedlist>

  </sect2>
 </sect1>

 <sect1 id="release-8-2-4">
<!--
  <title>Release 8.2.4</title>
-->
  <title>リリース8.2.4</title>

  <formalpara>
<!--
  <title>Release date:</title>
-->
  <title>リリース日:</title>
  <para>2007-04-23</para>
  </formalpara>

  <para>
<!--
   This release contains a variety of fixes from 8.2.3,
   including a security fix.
   For information about new features in the 8.2 major release, see
   <xref linkend="release-8-2"/>.
<<<<<<< HEAD
=======
-->
このリリースは8.2.3の各種不具合を修正したもので、セキュリティ問題の修正を1つ含みます。
8.2メジャーリリースにおける新機能については<xref linkend="release-8-2"/>を参照してください。
>>>>>>> doc_ja_10_premerge
  </para>

  <sect2>
<!--
   <title>Migration to Version 8.2.4</title>
-->
   <title>バージョン8.2.4への移行</title>

   <para>
<!--
    A dump/restore is not required for those running 8.2.X.
-->
8.2.Xからの移行ではダンプ/リストアは不要です。
   </para>

  </sect2>

  <sect2>
<!--
   <title>Changes</title>
-->
   <title>変更点</title>

   <itemizedlist>

    <listitem>
     <para>
<!--
      Support explicit placement of the temporary-table schema within
      <varname>search_path</varname>, and disable searching it for functions
      and operators (Tom)
-->
<varname>search_path</varname>における一時テーブルスキーマの明示的な指定をサポートしました。
また、関数や演算子ではその検索を無効にしました(Tom)。
     </para>

     <para>
<!--
      This is needed to allow a security-definer function to set a
      truly secure value of <varname>search_path</varname>.  Without it,
      an unprivileged SQL user can use temporary objects to execute code
      with the privileges of the security-definer function (CVE-2007-2138).
<<<<<<< HEAD
      See <command>CREATE FUNCTION</command> for more information.
=======
      See <command>CREATE FUNCTION</> for more information.
-->
これは、SECURITY DEFINER関数が<varname>search_path</varname>の値を本当に安全に設定するために必要です。
こうしないと、一時オブジェクトを使用して権限のないSQLユーザがSECURITY DEFINER関数の権限でコードを実行することができてしまうためです（CVE-2007-2138）。
詳細は<command>CREATE FUNCTION</command>を参照してください。
>>>>>>> doc_ja_10_premerge
     </para>
    </listitem>

    <listitem>
     <para>
<<<<<<< HEAD
      Fix <varname>shared_preload_libraries</varname> for Windows
=======
<!--
      Fix <varname>shared_preload_libraries</> for Windows
>>>>>>> doc_ja_10_premerge
      by forcing reload in each backend (Korry Douglas)
-->
Windowsにおいて、各バックエンドで再ロードを強制的に行うことで<varname>shared_preload_libraries</varname>を修正しました（Korry Douglas）。
     </para>
    </listitem>

    <listitem>
     <para>
<<<<<<< HEAD
      Fix <function>to_char()</function> so it properly upper/lower cases localized day or month
=======
<!--
      Fix <function>to_char()</> so it properly upper/lower cases localized day or month
>>>>>>> doc_ja_10_premerge
      names (Pavel Stehule)
-->
翻訳された日や月名を適切に大文字、小文字に変換できるように、<function>to_char()</function>を修正しました。
     </para>
    </listitem>

    <listitem>
     <para>
<<<<<<< HEAD
      <filename>/contrib/tsearch2</filename> crash fixes (Teodor)
=======
<!--
      <filename>/contrib/tsearch2</> crash fixes (Teodor)
-->
      <filename>/contrib/tsearch2</filename>のクラッシュを修正しました(Teodor)。
>>>>>>> doc_ja_10_premerge
     </para>
    </listitem>

    <listitem>
     <para>
<<<<<<< HEAD
      Require <command>COMMIT PREPARED</command> to be executed in the same
=======
<!--
      Require <command>COMMIT PREPARED</> to be executed in the same
>>>>>>> doc_ja_10_premerge
      database as the transaction was prepared in (Heikki)
-->
<command>COMMIT PREPARED</command>は、そのトランザクションを準備したデータベースと同じデータベースで実行する必要があります。(Heikki)
     </para>
    </listitem>

    <listitem>
     <para>
<<<<<<< HEAD
      Allow <command>pg_dump</command> to do binary backups larger than two gigabytes
=======
<!--
      Allow <command>pg_dump</> to do binary backups larger than two gigabytes
>>>>>>> doc_ja_10_premerge
      on Windows (Magnus)
-->
Windowsにおいて、2ギガバイトを越えるバイナリバックアップを<command>pg_dump</command>が行えるようになりました(Magnus)。
     </para>
    </listitem>

    <listitem>
     <para>
<<<<<<< HEAD
      New traditional (Taiwan) Chinese <acronym>FAQ</acronym> (Zhou Daojing)
=======
<!--
      New traditional (Taiwan) Chinese <acronym>FAQ</> (Zhou Daojing)
-->
伝統的中国（台湾）語の<acronym>FAQ</acronym>を更新しました(Zhou Daojing)。
>>>>>>> doc_ja_10_premerge
     </para>
    </listitem>

    <listitem>
     <para>
<!--
      Prevent the statistics collector from writing to disk too frequently (Tom)
-->
統計情報コレクタがあまりに頻繁にディスクに書き込まないようにしました(Tom)。
     </para>
    </listitem>

    <listitem>
     <para>
<<<<<<< HEAD
      Fix potential-data-corruption bug in how <command>VACUUM FULL</command> handles
      <command>UPDATE</command> chains (Tom, Pavan Deolasee)
=======
<!--
      Fix potential-data-corruption bug in how <command>VACUUM FULL</> handles
      <command>UPDATE</> chains (Tom, Pavan Deolasee)
-->
<command>VACUUM FULL</command>の<command>UPDATE</command>連鎖方法において潜在したデータ破損不具合を修正しました(Tom, Pavan Deolasee)。
>>>>>>> doc_ja_10_premerge
     </para>
    </listitem>

    <listitem>
     <para>
<!--
      Fix bug in domains that use array types (Tom)
-->
配列型を使用するドメインにおける不具合を修正しました(Tom)。
     </para>
    </listitem>

    <listitem>
     <para>
<<<<<<< HEAD
      Fix <command>pg_dump</command> so it can dump a serial column's sequence
      using <option>-t</option> when not also dumping the owning table
=======
<!--
      Fix <command>pg_dump</> so it can dump a serial column's sequence
      using <option>-t</> when not also dumping the owning table
-->
元となるテーブルのダンプを行わない場合でも、<option>-t</option>を使用して連番型の列のシーケンスをダンプできるよう<command>pg_dump</command>を修正しました。
>>>>>>> doc_ja_10_premerge
      (Tom)
     </para>
    </listitem>

    <listitem>
     <para>
<!--
      Planner fixes, including improving outer join and bitmap scan
      selection logic (Tom)
-->
外部結合の向上やビットマップスキャンの選択ロジックなど、プランナを修正しました(Tom)。
     </para>
    </listitem>

    <listitem>
     <para>
<!--
      Fix possible wrong answers or crash when a PL/pgSQL function tries
<<<<<<< HEAD
      to <literal>RETURN</literal> from within an <literal>EXCEPTION</literal> block
=======
      to <literal>RETURN</> from within an <literal>EXCEPTION</> block
-->
PL/pgSQL関数が<literal>EXCEPTION</literal>ブロック内で<literal>RETURN</literal>を試行する場合に潜在する誤作動やクラッシュの可能性を修正しました。
>>>>>>> doc_ja_10_premerge
      (Tom)
     </para>
    </listitem>

    <listitem>
     <para>
<!--
      Fix PANIC during enlargement of a hash index (Tom)
-->
ハッシュインデックスの拡張時のパニックを修正しました(Tom)。
     </para>
    </listitem>

    <listitem>
     <para>
<!--
      Fix POSIX-style timezone specs to follow new USA DST rules (Tom)
-->
POSIX書式の時間帯指定が新しいUSA DST規則に従うよう修正しました(Tom)。
     </para>
    </listitem>

   </itemizedlist>

  </sect2>
 </sect1>

 <sect1 id="release-8-2-3">
<!--
  <title>Release 8.2.3</title>
-->
  <title>リリース8.2.3</title>

  <formalpara>
<!--
  <title>Release date:</title>
-->
  <title>リリース日:</title>
  <para>2007-02-07</para>
  </formalpara>

  <para>
<!--
   This release contains two fixes from 8.2.2.
   For information about new features in the 8.2 major release, see
   <xref linkend="release-8-2"/>.
<<<<<<< HEAD
=======
-->
このリリースには、8.2.2に対する2つの修正が含まれています。
8.2メジャーリリースにおける新機能については<xref linkend="release-8-2"/>を参照してください。
>>>>>>> doc_ja_10_premerge
  </para>

  <sect2>
<!--
   <title>Migration to Version 8.2.3</title>
-->
   <title>バージョン8.2.3への移行</title>

   <para>
<!--
    A dump/restore is not required for those running 8.2.X.
-->
8.2.Xからの移行ではダンプ/リストアは不要です。
   </para>

  </sect2>

  <sect2>
<!--
   <title>Changes</title>
-->
   <title>変更点</title>

   <itemizedlist>

    <listitem>
     <para>
<!--
      Remove overly-restrictive check for type length in constraints and
      functional indexes(Tom)
-->
制約および関数インデックスにおける型の長さに対する重複/限定検査を削除しました。(Tom)
     </para>
    </listitem>

    <listitem>
     <para>
<!--
      Fix optimization so MIN/MAX in subqueries can again use indexes (Tom)
-->
副問い合わせにおけるMIN/MAXがインデックスを再度利用できるよう最適化を修正しました。(Tom)
     </para>
    </listitem>

   </itemizedlist>

  </sect2>
 </sect1>

 <sect1 id="release-8-2-2">
<!--
  <title>Release 8.2.2</title>
-->
  <title>リリース8.2.2</title>

  <formalpara>
<!--
  <title>Release date:</title>
-->
  <title>リリース日:</title>
  <para>2007-02-05</para>
  </formalpara>

  <para>
<!--
   This release contains a variety of fixes from 8.2.1, including
   a security fix.
   For information about new features in the 8.2 major release, see
   <xref linkend="release-8-2"/>.
<<<<<<< HEAD
=======
-->
このリリースは8.2.1の各種不具合を修正したもので、セキュリティ問題の修正も含みます。
8.2メジャーリリースにおける新機能については<xref linkend="release-8-2"/>を参照してください。
>>>>>>> doc_ja_10_premerge
  </para>

  <sect2>
<!--
   <title>Migration to Version 8.2.2</title>
-->
   <title>バージョン8.2.2への移行</title>

   <para>
<!--
    A dump/restore is not required for those running 8.2.X.
-->
8.2.Xからの移行ではダンプ/リストアは不要です。
   </para>

  </sect2>

  <sect2>
<!--
   <title>Changes</title>
-->
   <title>変更点</title>

   <itemizedlist>

    <listitem>
     <para>
<!--
      Remove security vulnerabilities that allowed connected users
      to read backend memory (Tom)
-->
接続ユーザがバックエンドのメモリを読み取ることができるセキュリティ脆弱性を取り除きました。(Tom)
     </para>

     <para>
<!--
      The vulnerabilities involve suppressing the normal check that a SQL
      function returns the data type it's declared to, and changing the
      data type of a table column (CVE-2007-0555, CVE-2007-0556).  These
      errors can easily be exploited to cause a backend crash, and in
      principle might be used to read database content that the user
      should not be able to access.
-->
この脆弱性には、SQL関数が宣言されたデータ型を返すかどうか、そのテーブル列のデータ型が変更されたかどうかに関する通常の検査の抑制も含まれています（CVE-2007-0555、CVE-2007-0556）。
これらのエラーを悪用して簡単にバックエンドをクラッシュさせることができます。
また原理的には、アクセスを許していないはずのユーザがデータベースの内容を読み取ることができてしまいます。
     </para>
    </listitem>

    <listitem>
     <para>
<!--
      Fix not-so-rare-anymore bug wherein btree index page splits could fail
      due to choosing an infeasible split point (Heikki Linnakangas)
-->
実行不可能な分割点の選択によりB-treeインデックスページの分割が失敗する可能性がある、稀にも起こらないような不具合を修正しました。(Heikki Linnakangas)
     </para>
    </listitem>

    <listitem>
     <para>
<!--
      Fix Borland C compile scripts (L Bayuk)
-->
Borland Cコンパイルスクリプトを修正しました。 (L Bayuk)
     </para>
    </listitem>

    <listitem>
     <para>
<<<<<<< HEAD
      Properly handle <function>to_char('CC')</function> for years ending in
      <literal>00</literal> (Tom)
=======
<!--
      Properly handle <function>to_char('CC')</> for years ending in
      <literal>00</> (Tom)
-->
<literal>00</literal>で終わる年に対する<function>to_char('CC')</function>の扱いが適切になりました。(Tom)
>>>>>>> doc_ja_10_premerge
     </para>

     <para>
<!--
      Year 2000 is in the twentieth century, not the twenty-first.
-->
2000年は21世紀ではなく、20世紀です。
     </para>
    </listitem>

    <listitem>
     <para>
<<<<<<< HEAD
      <filename>/contrib/tsearch2</filename> localization improvements (Tatsuo, Teodor)
=======
<!--
      <filename>/contrib/tsearch2</> localization improvements (Tatsuo, Teodor)
-->
<filename>/contrib/tsearch2</filename>の各種言語対応を改良しました。(Tatsuo, Teodor)
>>>>>>> doc_ja_10_premerge
     </para>
    </listitem>

    <listitem>
     <para>
<!--
      Fix incorrect permission check in
<<<<<<< HEAD
      <literal>information_schema.key_column_usage</literal> view (Tom)
     </para>

     <para>
      The symptom is <quote>relation with OID nnnnn does not exist</quote> errors.
      To get this fix without using <command>initdb</command>, use <command>CREATE OR
      REPLACE VIEW</command> to install the corrected definition found in
      <filename>share/information_schema.sql</filename>.  Note you will need to do
=======
      <literal>information_schema.key_column_usage</> view (Tom)
-->
<literal>information_schema.key_column_usage</literal>ビューにおける不正確な権限検査を修正しました。(Tom)
     </para>

     <para>
<!--
      The symptom is <quote>relation with OID nnnnn does not exist</> errors.
      To get this fix without using <command>initdb</>, use <command>CREATE OR
      REPLACE VIEW</> to install the corrected definition found in
      <filename>share/information_schema.sql</>.  Note you will need to do
>>>>>>> doc_ja_10_premerge
      this in each database.
-->
この兆候は<quote>OID nnnnnを持つリレーションが存在しない</quote>というエラーです。
<command>initdb</command>を行わずにこの修正を適用するには、<command>CREATE OR REPLACE VIEW</command>を使用して、<filename>share/information_schema.sql</filename>内にある正しい定義をインストールすることです。
各データベースでこれを行わなければならないことに注意してください。
     </para>
    </listitem>

    <listitem>
     <para>
<<<<<<< HEAD
      Improve <command>VACUUM</command> performance for databases with many tables (Tom)
=======
<!--
      Improve <command>VACUUM</> performance for databases with many tables (Tom)
-->
多くのテーブルを持つデータベースに対する<command>VACUUM</command>の性能を向上しました。(Tom)
>>>>>>> doc_ja_10_premerge
     </para>
    </listitem>

    <listitem>
     <para>
<<<<<<< HEAD
      Fix for rare Assert() crash triggered by <literal>UNION</literal> (Tom)
=======
<!--
      Fix for rare Assert() crash triggered by <literal>UNION</> (Tom)
-->
<literal>UNION</literal>をきっかけとした、稀に発生するAssert()クラッシュを修正しました。(Tom)
>>>>>>> doc_ja_10_premerge
     </para>
    </listitem>

    <listitem>
     <para>
<!--
      Fix potentially incorrect results from index searches using
<<<<<<< HEAD
      <literal>ROW</literal> inequality conditions (Tom)
=======
      <literal>ROW</> inequality conditions (Tom)
-->
<literal>ROW</literal>不等条件を使用するインデックス検索が不正確になる潜在的な不具合を修正しました。(Tom)
>>>>>>> doc_ja_10_premerge
     </para>
    </listitem>

    <listitem>
     <para>
<!--
      Tighten security of multi-byte character processing for UTF8 sequences
      over three bytes long (Tom)
-->
3バイト長を越えるUTF8シーケンスに関する、複数バイト文字処理のセキュリティを強化しました。(Tom)
     </para>
    </listitem>

    <listitem>
     <para>
<<<<<<< HEAD
      Fix bogus <quote>permission denied</quote> failures occurring on Windows
=======
<!--
      Fix bogus <quote>permission denied</> failures occurring on Windows
>>>>>>> doc_ja_10_premerge
      due to attempts to fsync already-deleted files (Magnus, Tom)
-->
削除済みのファイルに対するfsync試行による、Windowsにおいて発生するにせの<quote>権限がない</quote>というエラーを修正しました。(Magnus, Tom)
     </para>
    </listitem>

    <listitem>
     <para>
<!--
      Fix bug that could cause the statistics collector
      to hang on Windows (Magnus)
-->
Windowsにおいて統計情報コレクタがハングする不具合を修正しました。(Magnus)
     </para>

     <para>
<!--
      This would in turn lead to autovacuum not working.
-->
この不具合に伴い自動バキュームも動作不能になります。
     </para>
    </listitem>

    <listitem>
     <para>
<!--
      Fix possible crashes when an already-in-use PL/pgSQL function is
      updated (Tom)
-->
使用中のPL/pgSQL関数を更新する時にクラッシュする可能性を修正しました。(Tom)
     </para>
    </listitem>

    <listitem>
     <para>
<!--
      Improve PL/pgSQL handling of domain types (Sergiy Vyshnevetskiy, Tom)
-->
PL/pgSQLにおけるドメイン型の扱いを改良しました。(Sergiy Vyshnevetskiy, Tom)
     </para>
    </listitem>

    <listitem>
     <para>
<!--
      Fix possible errors in processing PL/pgSQL exception blocks (Tom)
-->
PL/pgSQL例外ブロックの処理でエラーが起きる可能性を修正しました。(Tom)
     </para>
    </listitem>

   </itemizedlist>

  </sect2>
 </sect1>

 <sect1 id="release-8-2-1">
<!--
  <title>Release 8.2.1</title>
-->
  <title>リリース8.2.1</title>

  <formalpara>
<!--
  <title>Release date:</title>
-->
  <title>リリース日:</title>
  <para>2007-01-08</para>
  </formalpara>

  <para>
<!--
   This release contains a variety of fixes from 8.2.
   For information about new features in the 8.2 major release, see
   <xref linkend="release-8-2"/>.
<<<<<<< HEAD
=======
-->
このリリースは8.2の各種不具合を修正したものです。
8.2メジャーリリースにおける新機能については<xref linkend="release-8-2"/>を参照してください。
>>>>>>> doc_ja_10_premerge
  </para>

  <sect2>
<!--
   <title>Migration to Version 8.2.1</title>
-->
   <title>バージョン8.2.1への移行</title>

   <para>
<!--
    A dump/restore is not required for those running 8.2.
-->
8.2からの移行ではダンプ/リストアは不要です。
   </para>

  </sect2>

  <sect2>
<!--
   <title>Changes</title>
-->
   <title>変更点</title>

   <itemizedlist>

    <listitem>
     <para>
<<<<<<< HEAD
      Fix crash with <literal>SELECT</literal> ... <literal>LIMIT ALL</literal> (also
      <literal>LIMIT NULL</literal>) (Tom)
=======
<!--
      Fix crash with <literal>SELECT</> ... <literal>LIMIT ALL</> (also
      <literal>LIMIT NULL</>) (Tom)
-->
<literal>SELECT</literal> ... <literal>LIMIT ALL</literal>（または<literal>LIMIT NULL</literal>）時のクラッシュを修正しました。(Tom)
>>>>>>> doc_ja_10_premerge
     </para>
    </listitem>

    <listitem>
     <para>
<<<<<<< HEAD
      <filename>Several /contrib/tsearch2</filename> fixes (Teodor)
=======
<!--
      <filename>Several /contrib/tsearch2</> fixes (Teodor)
-->
<filename>/contrib/tsearch2</filename>に対する複数の修正(Teodor)
>>>>>>> doc_ja_10_premerge
     </para>
    </listitem>

    <listitem>
     <para>
<!--
      On Windows, make log messages coming from the operating system use
<<<<<<< HEAD
      <acronym>ASCII</acronym> encoding (Hiroshi Saito)
=======
      <acronym>ASCII</> encoding (Hiroshi Saito)
-->
Windowsにおいて、オペレーティングシステムからのログメッセージを<acronym>ASCII</acronym>符号化方式に変更しました。(Hiroshi Saito)
>>>>>>> doc_ja_10_premerge
     </para>

     <para>
<!--
      This fixes a conversion problem when there is a mismatch between
      the encoding of the operating system and database server.
-->
この修正は、オペレーティングシステムとデータベースサーバの間で符号化方式に違いがある場合の変換問題を解消するものです。
     </para>
    </listitem>

    <listitem>
     <para>
<<<<<<< HEAD
      Fix Windows linking of <application>pg_dump</application> using
      <filename>win32.mak</filename>
=======
<!--
      Fix Windows linking of <application>pg_dump</> using
      <filename>win32.mak</>
-->
Windowsにおける<filename>win32.mak</filename>を使用した<application>pg_dump</application>のリンクを修正しました。
>>>>>>> doc_ja_10_premerge
      (Hiroshi Saito)
     </para>
    </listitem>

    <listitem>
     <para>
<!--
      Fix planner mistakes for outer join queries (Tom)
-->
外部結合問い合わせに対するプランナの間違いを修正しました。(Tom)
     </para>
    </listitem>

    <listitem>
     <para>
<!--
      Fix several problems in queries involving sub-SELECTs (Tom)
-->
副問い合わせを含む問い合わせにおける複数の問題を修正しました。(Tom)
     </para>
    </listitem>

    <listitem>
     <para>
<!--
      Fix potential crash in SPI during subtransaction abort (Tom)
-->
SPIにおける副トランザクションのアボート時のクラッシュの可能性を修正しました。(Tom)
     </para>

     <para>
<!--
      This affects all PL functions since they all use SPI.
-->
PLはすべてSPIを使用しますので、これはすべてのPL関数に影響します。
     </para>
    </listitem>

    <listitem>
     <para>
<<<<<<< HEAD
      Improve build speed of <acronym>PDF</acronym> documentation (Peter)
=======
<!--
      Improve build speed of <acronym>PDF</> documentation (Peter)
-->
<acronym>PDF</acronym>文書作成を高速化しました。(Peter)
>>>>>>> doc_ja_10_premerge
     </para>
    </listitem>

    <listitem>
     <para>
<<<<<<< HEAD
      Re-add <acronym>JST</acronym> (Japan) timezone abbreviation (Tom)
=======
<!--
      Re-add <acronym>JST</> (Japan) timezone abbreviation (Tom)
-->
<acronym>JST</acronym> (日本)時間帯省略形を再度追加しました。(Tom)
>>>>>>> doc_ja_10_premerge
     </para>
    </listitem>

    <listitem>
     <para>
<!--
      Improve optimization decisions related to index scans (Tom)
-->
インデックススキャンに関連した最適化方針の決定を改良しました。(Tom)
     </para>
    </listitem>

    <listitem>
     <para>
<<<<<<< HEAD
      Have <application>psql</application> print multi-byte combining characters as
      before, rather than output as <literal>\u</literal> (Tom)
=======
<!--
      Have <application>psql</> print multi-byte combining characters as
      before, rather than output as <literal>\u</> (Tom)
-->
<application>psql</application>において、複数バイトを組み合わせた文字を<literal>\u</literal>として出力せずに、以前のように出力するようにしました。(Tom)
>>>>>>> doc_ja_10_premerge
     </para>
    </listitem>

    <listitem>
     <para>
<!--
      Improve index usage of regular expressions that use parentheses (Tom)
-->
括弧を使用した正規表現を使用するインデックスを改良しました。(Tom)
     </para>

     <para>
<<<<<<< HEAD
      This improves <application>psql</application> <literal>\d</literal> performance also.
=======
<!--
      This improves <application>psql</> <literal>\d</> performance also.
-->
この改良により、<application>psql</application> <literal>\d</literal>の性能も向上しました。
>>>>>>> doc_ja_10_premerge
     </para>
    </listitem>

    <listitem>
     <para>
<<<<<<< HEAD
      Make <application>pg_dumpall</application> assume that databases have public
      <literal>CONNECT</literal> privilege, when dumping from a pre-8.2 server (Tom)
=======
<!--
      Make <application>pg_dumpall</> assume that databases have public
      <literal>CONNECT</> privilege, when dumping from a pre-8.2 server (Tom)
-->
8.2以前のサーバからダンプする際に、<application>pg_dumpall</application>は、そのデータベースがPUBLICに<literal>CONNECT</literal>権限を持たせていることを前提とするようにしました。(Tom)
>>>>>>> doc_ja_10_premerge
     </para>

     <para>
<!--
      This preserves the previous behavior that anyone can connect to a
<<<<<<< HEAD
      database if allowed by <filename>pg_hba.conf</filename>.
=======
      database if allowed by <filename>pg_hba.conf</>.
-->
これは、<filename>pg_hba.conf</filename>で許可されていれば、誰でもデータベースに接続できるという以前の振る舞いを維持します。
>>>>>>> doc_ja_10_premerge
     </para>
    </listitem>

   </itemizedlist>

  </sect2>
 </sect1>

 <sect1 id="release-8-2">
<!--
  <title>Release 8.2</title>
-->
  <title>リリース8.2</title>

  <formalpara>
<!--
   <title>Release date:</title>
-->
   <title>リリース日:</title>
   <para>2006-12-05</para>
  </formalpara>

  <sect2>
<!--
   <title>Overview</title>
-->
   <title>概要</title>

   <para>
<!--
    This release adds many functionality and performance improvements that
    were requested by users, including:
-->
本リリースでは、以下のような多くの機能追加やユーザから要望があった性能改善がなされています。

   <itemizedlist>

     <listitem>
      <para>
<!--
       Query language enhancements including <command>INSERT/UPDATE/DELETE
       RETURNING</command>, multirow <literal>VALUES</literal> lists, and
       optional target-table alias in
<<<<<<< HEAD
       <command>UPDATE</command>/<command>DELETE</command>
=======
       <command>UPDATE</>/<command>DELETE</command>
-->
<command>INSERT/UPDATE/DELETE RETURNING</command>や複数行の<literal>VALUES</literal>リスト、<command>UPDATE</command>/<command>DELETE</command>における省略可能な対象テーブル別名など問い合わせ言語の改良。
>>>>>>> doc_ja_10_premerge
      </para>
     </listitem>

     <listitem>
      <para>
<!--
       Index creation without blocking concurrent
       <command>INSERT</command>/<command>UPDATE</command>/<command>DELETE</command>
       operations
-->
同時に行われる<command>INSERT</command>/<command>UPDATE</command>/<command>DELETE</command>操作をブロックしないインデックス作成。
      </para>
     </listitem>

     <listitem>
      <para>
<!--
       Many query optimization improvements, including support for
       reordering outer joins
-->
外部結合の再順序付けのサポートなどの、多くの問い合わせ最適化の改良。
      </para>
     </listitem>

     <listitem>
      <para>
<!--
       Improved sorting performance with lower memory usage
-->
ソート処理性能の向上、および、使用するメモリ量の低減。
      </para>
     </listitem>

     <listitem>
      <para>
<!--
       More efficient locking with better concurrency
-->
より効率的なロックによる同時実行性の向上。
      </para>
     </listitem>

     <listitem>
      <para>
<!--
       More efficient vacuuming
-->
より効率的なバキューム処理。
      </para>
     </listitem>

     <listitem>
      <para>
<!--
       Easier administration of warm standby servers
-->
ウォームスタンバイサーバ管理の簡略化。
      </para>
     </listitem>

     <listitem>
      <para>
<!--
       New <literal>FILLFACTOR</literal> support for tables and indexes
-->
テーブルおよびインデックスにおける<literal>FILLFACTOR</literal>サポート（新機能）。
      </para>
     </listitem>

     <listitem>
      <para>
<!--
       Monitoring, logging, and performance tuning additions
-->
監視機能、ログ機能、性能チューニングの追加。
      </para>
     </listitem>

     <listitem>
      <para>
<!--
       More control over creating and dropping objects
-->
オブジェクトの生成、削除に関するより細かな制御。
      </para>
     </listitem>

     <listitem>
      <para>
<!--
       Table inheritance relationships can be defined
       for and removed from pre-existing tables
-->
既存テーブルに対するテーブル継承関係の定義および削除が可能になりました。
      </para>
     </listitem>

     <listitem>
      <para>
<!--
       <command>COPY TO</command> can copy the output of an arbitrary
       <command>SELECT</command> statement
-->
<command>COPY TO</command>が任意の<command>SELECT</command>分の出力をコピーできるようになりました。
      </para>
     </listitem>

     <listitem>
      <para>
<!--
       Array improvements, including nulls in arrays
-->
配列内のNULLなど、配列の改良。
      </para>
     </listitem>

     <listitem>
      <para>
<!--
       Aggregate-function improvements, including multiple-input
       aggregates and SQL:2003 statistical functions
-->
複数入力集約やSQL:2003の統計処理関数など、集約関数の改良。
      </para>
     </listitem>

     <listitem>
      <para>
<!--
       Many <filename>contrib/</filename> improvements
-->
多くの<filename>contrib/</filename>の改良。
      </para>
     </listitem>

    </itemizedlist>

   </para>

  </sect2>

  <sect2>
<!--
   <title>Migration to Version 8.2</title>
-->
   <title>バージョン8.2への移行</title>

   <para>
<!--
    A dump/restore using <application>pg_dump</application> is
    required for those wishing to migrate data from any previous
    release.
-->
すべての過去のリリースからデータを移行する場合、<application>pg_dump</application>を使用したダンプ/リストアが必要です。
   </para>

   <para>
<!--
    Observe the following incompatibilities:
-->
以下に既知の非互換な点を示します。
   </para>

   <itemizedlist>

     <listitem>
      <para>
<!--
       Set <link
<<<<<<< HEAD
       linkend="guc-escape-string-warning"><varname>escape_string_warning</varname></link>
       to <literal>on</literal> by default (Bruce)
=======
       linkend="guc-escape-string-warning"><varname>escape_string_warning</></link>
       to <literal>on</> by default (Bruce)
-->
<link linkend="guc-escape-string-warning"><varname>escape_string_warning</varname></link>をデフォルトで<literal>on</literal>にしました。(Bruce)
>>>>>>> doc_ja_10_premerge
      </para>

      <para>
<!--
       This issues a warning if backslash escapes are used in
       <link linkend="sql-syntax-strings">non-escape (non-<literal>E''</literal>)
       strings</link>.
-->
これは、バックスラッシュエスケープが<link linkend="sql-syntax-strings">非エスケープ(<literal>E''</literal>の付かない)文字列</link>内で使用された場合に警告を発します。
      </para>
     </listitem>

     <listitem>
      <para>
<!--
       Change the <link linkend="sql-syntax-row-constructors">row
       constructor syntax</link> (<literal>ROW(...)</literal>) so that
       list elements <literal>foo.*</literal> will be expanded to a list
       of their member fields, rather than creating a nested
       row type field as formerly (Tom)
-->
リスト要素<literal>foo.*</literal>が、以前のような入れ子状の行型フィールドを生成するのではなく、そのメンバフィールドのリストに展開されるように、<link linkend="sql-syntax-row-constructors">行コンストラクタ構文</link> (<literal>ROW(...)</literal>)を変更しました。(Tom)
      </para>

      <para>
<!--
       The new behavior is substantially more useful since it
       allows, for example, triggers to check for data changes
<<<<<<< HEAD
       with <literal>IF row(new.*) IS DISTINCT FROM row(old.*)</literal>.
       The old behavior is still available by omitting <literal>.*</literal>.
=======
       with <literal>IF row(new.*) IS DISTINCT FROM row(old.*)</>.
       The old behavior is still available by omitting <literal>.*</>.
-->
実質、この新しい動作は例えば、トリガで<literal>IF row(new.*) IS DISTINCT FROM row(old.*)</literal>を使用してデータ変更を検査することができるなど、大変便利です。
<literal>.*</literal>を省略することで古い動作を使用することもできます。
>>>>>>> doc_ja_10_premerge
      </para>
     </listitem>

     <listitem>
      <para>
<!--
       Make <link linkend="row-wise-comparison">row comparisons</link>
       follow <acronym>SQL</acronym> standard semantics and allow them
       to be used in index scans (Tom)
-->
<link linkend="row-wise-comparison">行の比較</link>を標準<acronym>SQL</acronym>構文に従うようにしました。
また、インデックススキャンで使用されるようになりました。(Tom)
      </para>

      <para>
<!--
       Previously, row = and &lt;&gt; comparisons followed the
       standard but &lt; &lt;= &gt; &gt;= did not.  A row comparison
       can now be used as an index constraint for a multicolumn
       index matching the row value.
-->
以前は、行の等号および &lt;&gt;比較は標準に従っていましたが、&lt; &lt;= &gt; &gt;=は従っていませんでした。
新しい比較では、行値に一致する複数列インデックス用のインデックス制約として使用されるようになりました。
      </para>
     </listitem>

     <listitem>
      <para>
<<<<<<< HEAD
       Make <link linkend="functions-comparison">row <literal>IS <optional>NOT</optional> NULL</literal></link>
       tests follow <acronym>SQL</acronym> standard semantics (Tom)
=======
<!--
       Make <link linkend="functions-comparison">row <literal>IS <optional>NOT</> NULL</literal></link>
       tests follow <acronym>SQL</> standard semantics (Tom)
-->
<link linkend="functions-comparison">row <literal>IS <optional>NOT</optional> NULL</literal></link>検査が標準<acronym>SQL</acronym>文法に従うようにしました。(Tom)
>>>>>>> doc_ja_10_premerge
      </para>

      <para>
<!--
       The former behavior conformed to the standard for simple cases
       with <literal>IS NULL</literal>, but <literal>IS NOT NULL</literal> would return
       true if any row field was non-null, whereas the standard says it
       should return true only when all fields are non-null.
-->
以前の動作では、<literal>IS NULL</literal>という単純な場合は標準に従っていましたが、 <literal>IS NOT NULL</literal>は行のフィールドのいずれかが非NULLの場合に真を返しました。
標準では、全てのフィールドが非NULLの場合にのみ真を返すものと規定しています。
      </para>
     </listitem>

     <listitem>
      <para>
<<<<<<< HEAD
       Make <link linkend="sql-set-constraints"><command>SET
       CONSTRAINT</command></link> affect only one constraint (Kris Jurka)
      </para>

      <para>
       In previous releases, <command>SET CONSTRAINT</command> modified
=======
<!--
       Make <link linkend="SQL-SET-CONSTRAINTS"><command>SET
       CONSTRAINT</></link> affect only one constraint (Kris Jurka)
-->
<link linkend="SQL-SET-CONSTRAINTS"><command>SET CONSTRAINT</command></link>が1つの制約にのみ適用されるようにしました。(Kris Jurka)
      </para>

      <para>
<!--
       In previous releases, <command>SET CONSTRAINT</> modified
>>>>>>> doc_ja_10_premerge
       all constraints with a matching name.  In this release,
       the schema search path is used to modify only the first
       matching constraint.  A schema specification is also
       supported.  This more nearly conforms to the SQL standard.
-->
以前のリリースでは、<command>SET CONSTRAINT</command>は一致する名前を持つすべての制約を変更しました。
本リリースではスキーマ検索パスを使用し、最初に一致する制約のみを変更するようになりました。
スキーマの指定もサポートされます。
これにより、より標準SQLに従うようになりました。
      </para>
     </listitem>

     <listitem>
      <para>
<<<<<<< HEAD
       Remove <literal>RULE</literal> permission for tables, for security reasons
=======
<!--
       Remove <literal>RULE</> permission for tables, for security reasons
>>>>>>> doc_ja_10_premerge
       (Tom)
-->
セキュリティのためテーブルの<literal>RULE</literal>権限を削除しました。(Tom)
      </para>

      <para>
<!--
       As of this release, only a table's owner can create or modify
       rules for the table.  For backwards compatibility,
       <command>GRANT</command>/<command>REVOKE RULE</command> is still accepted,
       but it does nothing.
-->
本リリースから、テーブルの所有者のみがテーブルのルールの作成と変更を行うことができるようになります。
後方互換性のため<command>GRANT</command>/<command>REVOKE RULE</command>はまだ受け付けられますが、何も行われません。
      </para>
     </listitem>

     <listitem>
      <para>
<!--
       Array comparison improvements (Tom)
-->
配列比較の改良。(Tom)
      </para>

      <para>
<!--
       Now array dimensions are also compared.
-->
配列次元も比較されるようになりました。
      </para>
     </listitem>

     <listitem>
      <para>
<!--
       Change <link linkend="functions-array">array concatenation</link>
       to match documented behavior (Tom)
-->
<link linkend="functions-array">配列の結合</link>を文書に合わせるように変更しました。(Tom)
      </para>

      <para>
<!--
       This changes the previous behavior where concatenation
       would modify the array lower bound.
-->
この変更により、結合が配列の下限値を変更するような場合、過去の動作と異なるようになります。
      </para>
     </listitem>

     <listitem>
      <para>
<<<<<<< HEAD
       Make command-line options of <application>postmaster</application>
       and <link linkend="app-postgres"><application>postgres</application></link>
=======
<!--
       Make command-line options of <application>postmaster</>
       and <link linkend="app-postgres"><application>postgres</></link>
>>>>>>> doc_ja_10_premerge
       identical (Peter)
-->
<application>postmaster</application>と<link linkend="app-postgres"><application>postgres</application></link>コマンドラインオプションを同一にしました。(Peter)
      </para>

      <para>
<!--
       This allows the postmaster to pass arguments to each backend
       without using <literal>-o</literal>.  Note that some options are now
       only available as long-form options, because there were conflicting
       single-letter options.
-->
これにより、postmasterが、<literal>-o</literal>を使用せずに、各バックエンドに引数を渡すことができるようになりました。
単一文字のオプションと競合するため、一部のオプションは長めのオプションとしてのみ利用できるようになったことに注意してください。
      </para>
     </listitem>

     <listitem>
      <para>
<<<<<<< HEAD
       Deprecate use of <application>postmaster</application> symbolic link (Peter)
      </para>

      <para>
       <application>postmaster</application> and <application>postgres</application>
=======
<!--
       Deprecate use of <application>postmaster</> symbolic link (Peter)
-->
<application>postmaster</application>シンボリックリンクの使用の廃止予定(Peter)
      </para>

      <para>
<!--
       <application>postmaster</> and <application>postgres</>
>>>>>>> doc_ja_10_premerge
       commands now act identically, with the behavior determined
       by command-line options.  The <application>postmaster</application> symbolic link is
       kept for compatibility, but is not really needed.
-->
<application>postmaster</application>及び<application>postgres</application>コマンドが同じように動作するようになりました。
その動作はコマンドラインオプションによって定まります。
<application>postmaster</application>というシンボリックリンクが互換性のために残されていますが、実際のところ必要性はありません。
      </para>
     </listitem>

     <listitem>
      <para>
<!--
       Change <link
       linkend="guc-log-duration"><varname>log_duration</varname></link>
       to output even if the query is not output (Tom)
-->
問い合わせが出力されていなくても<link linkend="guc-log-duration"><varname>log_duration</varname></link>が出力するように変更しました。(Tom)
      </para>

      <para>
<<<<<<< HEAD
       In prior releases, <varname>log_duration</varname> only printed if
=======
<!--
       In prior releases, <varname>log_duration</> only printed if
>>>>>>> doc_ja_10_premerge
       the query appeared earlier in the log.
-->
以前のリリースでは、問い合わせが過去にログに現れている場合にのみ<varname>log_duration</varname>が出力されました。
      </para>
     </listitem>

     <listitem>
      <para>
<!--
       Make <link
       linkend="functions-formatting"><function>to_char(time)</function></link>
       and <link
       linkend="functions-formatting"><function>to_char(interval)</function></link>
       treat <literal>HH</literal> and <literal>HH12</literal> as 12-hour
       intervals
-->
<link linkend="functions-formatting"><function>to_char(time)</function></link>および<link linkend="functions-formatting"><function>to_char(interval)</function></link>が<literal>HH</literal>と<literal>HH12</literal>を12時間周期で扱うようになりました。
      </para>

      <para>
<<<<<<< HEAD
       Most applications should use <literal>HH24</literal> unless they
=======
<!--
       Most applications should use <literal>HH24</> unless they
>>>>>>> doc_ja_10_premerge
       want a 12-hour display.
-->
ほとんどのアプリケーションでは12時間周期の表示を求めない限り、<literal>HH24</literal>を使用すべきです。
      </para>
     </listitem>

     <listitem>
      <para>
<!--
       Zero unmasked bits in conversion from <link
<<<<<<< HEAD
       linkend="datatype-inet"><type>INET</type></link> to <link
       linkend="datatype-inet"><type>CIDR</type></link> (Tom)
=======
       linkend="datatype-inet"><type>INET</></link> to <link
       linkend="datatype-inet"><type>CIDR</></link> (Tom)
-->
変換におけるマスクされないゼロビットが<link linkend="datatype-inet"><type>INET</type></link>から<link linkend="datatype-inet"><type>CIDR</type></link>になりました。(Tom)
>>>>>>> doc_ja_10_premerge
      </para>

      <para>
<!--
       This ensures that the converted value is actually valid for
<<<<<<< HEAD
       <type>CIDR</type>.
=======
       <type>CIDR</>.
-->
これにより変換された値が確実に<type>CIDR</type>として有効になるようになりました。
>>>>>>> doc_ja_10_premerge
      </para>
     </listitem>

     <listitem>
      <para>
<<<<<<< HEAD
       Remove <varname>australian_timezones</varname> configuration variable
=======
<!--
       Remove <varname>australian_timezones</> configuration variable
>>>>>>> doc_ja_10_premerge
       (Joachim Wieland)
-->
<varname>australian_timezones</varname>設定変数を削除しました。(Joachim Wieland)
      </para>

      <para>
<!--
       This variable has been superseded by a more general facility
       for configuring timezone abbreviations.
-->
この変数は、より一般的な時間帯省略形の設定機構により上書きされていました。
      </para>
     </listitem>

     <listitem>
      <para>
<!--
       Improve cost estimation for nested-loop index scans (Tom)
-->
ネステッドループインデックススキャン用のコスト推定が改良されました。(Tom)
      </para>

      <para>
<!--
       This might eliminate the need to set unrealistically small
       values of <link
       linkend="guc-random-page-cost"><varname>random_page_cost</varname></link>.
       If you have been using a very small <varname>random_page_cost</varname>,
       please recheck your test cases.
-->
これは、非現実的な小さい<link linkend="guc-random-page-cost"><varname>random_page_cost</varname></link>値に設定する必要性を無視するかもしれません。
非常に小さな<varname>random_page_cost</varname>を使用している場合は、試験をして確認してください。
      </para>
     </listitem>

     <listitem>
      <para>
<<<<<<< HEAD
       Change behavior of <command>pg_dump</command> <literal>-n</literal> and
       <literal>-t</literal> options.  (Greg Sabino Mullane)
      </para>
      <para>
       See the <command>pg_dump</command> manual page for details.
=======
<!--
       Change behavior of <command>pg_dump</> <literal>-n</> and
       <literal>-t</> options.  (Greg Sabino Mullane)
-->
<command>pg_dump</command>の<literal>-n</literal>オプションと<literal>-t</literal>オプションの動作を変更しました。(Greg Sabino Mullane)
      </para>
      <para>
<!--
       See the <command>pg_dump</> manual page for details.
-->
詳細は<command>pg_dump</command>のマニュアルページを参照してください。
>>>>>>> doc_ja_10_premerge
      </para>
     </listitem>

     <listitem>
      <para>
<<<<<<< HEAD
       Change <link linkend="libpq"><application>libpq</application></link>
       <function>PQdsplen()</function> to return a useful value (Martijn
=======
<!--
       Change <link linkend="libpq"><application>libpq</></link>
       <function>PQdsplen()</> to return a useful value (Martijn
>>>>>>> doc_ja_10_premerge
       van Oosterhout)
-->
<link linkend="libpq"><application>libpq</application></link><function>PQdsplen()</function>が有効な値を返すように変更しました。(Martijn van Oosterhout)
      </para>
     </listitem>

     <listitem>
      <para>
<<<<<<< HEAD
       Declare <link linkend="libpq"><application>libpq</application></link>
       <function>PQgetssl()</function> as returning <literal>void *</literal>,
       rather than <literal>SSL *</literal> (Martijn van Oosterhout)
=======
<!--
       Declare <link linkend="libpq"><application>libpq</></link>
       <function>PQgetssl()</> as returning <literal>void *</>,
       rather than <literal>SSL *</> (Martijn van Oosterhout)
-->
<link linkend="libpq"><application>libpq</application></link><function>PQgetssl()</function>を<literal>SSL *</literal>ではなく<literal>void *</literal>を返すように宣言しました。(Martijn van Oosterhout)
>>>>>>> doc_ja_10_premerge
      </para>

      <para>
<!--
       This allows applications to use the function without including
       the OpenSSL headers.
-->
これによりアプリケーションは、OpenSSLヘッダをインクルードすることなくこの関数を使用できるようになります。
      </para>
     </listitem>

     <listitem>
      <para>
<!--
       C-language loadable modules must now include a
       <link linkend="xfunc-c-dynload"><literal>PG_MODULE_MAGIC</literal></link>
       macro call for version compatibility checking
       (Martijn van Oosterhout)
-->
バージョン互換性検査のために、C言語による動的ロード可能なモジュールが<link linkend="xfunc-c-dynload"><literal>PG_MODULE_MAGIC</literal></link>マクロ呼び出しをインクルードしなければならなくなりました。(Martijn van Oosterhout)
      </para>
     </listitem>

     <listitem>
      <para>
<!--
       For security's sake, modules used by a PL/PerlU function are no
       longer available to PL/Perl functions (Andrew)
-->
セキュリティ上の理由により、PL/PerlU関数によって使用されるモジュールはPL/Perl関数から使用できなくなりました。(Andrew)
      </para>
      <note>
       <para>
<!--
        This also implies that data can no longer be shared between a PL/Perl
        function and a PL/PerlU function.
        Some Perl installations have not been compiled with the correct flags
        to allow multiple interpreters to exist within a single process.
        In this situation PL/Perl and PL/PerlU cannot both be used in a
        single backend. The solution is to get a Perl installation which
        supports multiple interpreters.
-->
これはまた、PL/Perl関数とPL/PerlU関数との間でデータを共有できなくなったことも意味します。
一部のPerlインストレーションでは、単一プロセス内で複数のインタプリタが存在することを許すための正しいフラグをつけてコンパイルされていませんでした。
こうした状況では、PL/PerlとPL/PerlUを単一のバックエンドで使用することはできません。
解決方法は、複数のインタプリタをサポートするPerlインストレーションを入手することです。
       </para>
      </note>
     </listitem>

     <listitem>
      <para>
<<<<<<< HEAD
       In <filename>contrib/xml2/</filename>, rename <function>xml_valid()</function> to
       <function>xml_is_well_formed()</function> (Tom)
      </para>

      <para>
       <function>xml_valid()</function> will remain for backward compatibility,
=======
<!--
       In <filename>contrib/xml2/</>, rename <function>xml_valid()</> to
       <function>xml_is_well_formed()</> (Tom)
-->
<filename>contrib/xml2/</filename>で、<function>xml_valid()</function>が<function>xml_is_well_formed()</function>に名前を変更しました。(Tom)
      </para>

      <para>
<!--
       <function>xml_valid()</> will remain for backward compatibility,
>>>>>>> doc_ja_10_premerge
       but its behavior will change to do schema checking in a future
       release.
-->
後方互換性のために<function>xml_valid()</function>も残っていますが、今後のリリースでスキーマ検査を行うように変更されます。
      </para>
     </listitem>

     <listitem>
      <para>
<<<<<<< HEAD
       Remove <filename>contrib/ora2pg/</filename>, now at <ulink
=======
<!--
       Remove <filename>contrib/ora2pg/</>, now at <ulink
>>>>>>> doc_ja_10_premerge
       url="http://www.samse.fr/GPL/ora2pg"></ulink>
-->
<filename>contrib/ora2pg/</filename>が削除されました。
<ulink url="http://www.samse.fr/GPL/ora2pg"></ulink>が新設されました。
      </para>
     </listitem>

     <listitem>
      <para>
<!--
       Remove contrib modules that have been migrated to PgFoundry:
<<<<<<< HEAD
       <filename>adddepend</filename>, <filename>dbase</filename>, <filename>dbmirror</filename>,
       <filename>fulltextindex</filename>, <filename>mac</filename>, <filename>userlock</filename>
=======
       <filename>adddepend</>, <filename>dbase</>, <filename>dbmirror</>,
       <filename>fulltextindex</>, <filename>mac</>, <filename>userlock</>
-->
PgFoundryに移行されたcontribモジュール<filename>adddepend</filename>、<filename>dbase</filename>、<filename>dbmirror</filename>、<filename>fulltextindex</filename>、<filename>mac</filename>、<filename>userlock</filename>が削除されました。
>>>>>>> doc_ja_10_premerge
      </para>
     </listitem>

     <listitem>
      <para>
<!--
       Remove abandoned contrib modules:
<<<<<<< HEAD
       <filename>mSQL-interface</filename>, <filename>tips</filename>
=======
       <filename>mSQL-interface</>, <filename>tips</>
-->
見捨てられたcontribモジュール<filename>mSQL-interface</filename>、<filename>tips</filename>が削除されました。
>>>>>>> doc_ja_10_premerge
      </para>
     </listitem>

     <listitem>
      <para>
<<<<<<< HEAD
       Remove <acronym>QNX</acronym> and <acronym>BEOS</acronym> ports (Bruce)
=======
<!--
       Remove <acronym>QNX</> and <acronym>BEOS</> ports (Bruce)
-->
<acronym>QNX</acronym>および<acronym>BEOS</acronym>への移植が削除されました。(Bruce)
>>>>>>> doc_ja_10_premerge
      </para>

      <para>
<!--
       These ports no longer had active maintainers.
-->
これらの移植に関して活動できる保守者がいなくなりました。
      </para>
     </listitem>

   </itemizedlist>
  </sect2>

  <sect2>
<!--
   <title>Changes</title>
-->
   <title>変更点</title>

   <para>
<!--
    Below you will find a detailed account of the
    changes between <productname>PostgreSQL</productname> 8.2 and
    the previous major release.
-->
以下に、<productname>PostgreSQL</productname> 8.2と以前のメジャーリリースとの間の違いについて詳しく記します。
   </para>

   <sect3>
<!--
    <title>Performance Improvements</title>
-->
    <title>性能向上</title>
    <itemizedlist>

     <listitem>
      <para>
<!--
       Allow the planner to reorder <link linkend="queries-join">outer
       joins</link> in some circumstances (Tom)
-->
ある環境において、プランナが<link linkend="queries-join">外部結合</link>の再順序付けすることが可能になりました。(Tom)
      </para>

      <para>
<!--
       In previous releases, outer joins would always be evaluated in
       the order written in the query. This change allows the
       query optimizer to consider reordering outer joins, in cases where
       it can determine that the join order can be changed without
       altering the meaning of the query.  This can make a
       considerable performance difference for queries involving
       multiple outer joins or mixed inner and outer joins.
-->
以前のリリースでは、外部結合は常に問い合わせに記載された順序で評価されていました。
この変更により、結合の順序を変更しても問い合わせの意味が変わらないことが決定できる場合、問い合わせオプティマイザが外部結合の順序を考慮できるようになりました。
複数の結合が含まれる場合や、内部結合と外部結合が混在する場合に、目に見える程の性能が向上します。
      </para>
     </listitem>

     <listitem>
      <para>
<!--
       Improve efficiency of <link
       linkend="functions-comparisons"><literal>IN</literal>
       (list-of-expressions)</link> clauses (Tom)
-->
<link linkend="functions-comparisons"><literal>IN</literal> (式のリスト)</link> の効率を向上しました。(Tom)
      </para>
     </listitem>

     <listitem>
      <para>
<!--
       Improve sorting speed and reduce memory usage (Simon, Tom)
-->
ソート速度を向上し、メモリ消費量を低減しました。(Simon, Tom)
      </para>
     </listitem>

     <listitem>
      <para>
<!--
       Improve subtransaction performance (Alvaro, Itagaki Takahiro,
       Tom)
-->
副トランザクションの性能を向上しました。(Alvaro, Itagaki Takahiro, Tom)
      </para>
     </listitem>

     <listitem>
      <para>
<<<<<<< HEAD
       Add <literal>FILLFACTOR</literal> to <link
       linkend="sql-createtable">table</link> and <link
       linkend="sql-createindex">index</link> creation (ITAGAKI
=======
<!--
       Add <literal>FILLFACTOR</> to <link
       linkend="SQL-CREATETABLE">table</link> and <link
       linkend="SQL-CREATEINDEX">index</link> creation (ITAGAKI
>>>>>>> doc_ja_10_premerge
       Takahiro)
-->
<link linkend="SQL-CREATETABLE">table</link>および<link linkend="SQL-CREATEINDEX">index</link>の生成に<literal>FILLFACTOR</literal>を追加しました。(ITAGAKI Takahiro)
      </para>

      <para>
<!--
       This leaves extra free space in each table or index page,
       allowing improved performance as the database grows.  This
       is particularly valuable to maintain clustering.
-->
これは、データベースの容量が増えた時の性能を向上させることができるように、各テーブルページやインデックスページに追加の空き領域を確保します。
これは特に、クラスタ処理を管理する時に有効です。
      </para>
     </listitem>

     <listitem>
      <para>
<!--
       Increase default values for <link
       linkend="guc-shared-buffers"><varname>shared_buffers</varname></link>
       and <varname>max_fsm_pages</varname>
       (Andrew)
-->
<link linkend="guc-shared-buffers"><varname>shared_buffers</varname></link>および<varname>max_fsm_pages</varname>のデフォルト値を増やしました。(Andrew)
      </para>
     </listitem>

     <listitem>
      <para>
<!--
       Improve locking performance by breaking the lock manager tables into
       sections
-->
ロック管理テーブルをセクションに分割することでロック処理の性能を向上しました。
       (Tom)
      </para>

      <para>
<!--
       This allows locking to be more fine-grained, reducing
       contention.
-->
これによりロック処理の粒度が細かくなり、競合が減少します。
      </para>
     </listitem>

     <listitem>
      <para>
<!--
       Reduce locking requirements of sequential scans (Qingqing
       Zhou)
-->
シーケンシャルスキャンにおけるロックの必要性を減少しました。(Qingqing Zhou)
      </para>
     </listitem>

     <listitem>
      <para>
<!--
       Reduce locking required for database creation and destruction
-->
データベース生成または削除時のロックの必要性を減少しました。
       (Tom)
      </para>
     </listitem>

     <listitem>
      <para>
<!--
       Improve the optimizer's selectivity estimates for <link
       linkend="functions-like"><literal>LIKE</literal></link>, <link
       linkend="functions-like"><literal>ILIKE</literal></link>, and
       <link linkend="functions-posix-regexp">regular expression</link>
       operations (Tom)
-->
<link linkend="functions-like"><literal>LIKE</literal></link>、<link linkend="functions-like"><literal>ILIKE</literal></link>、<link linkend="functions-posix-regexp">regular expression</link>操作における、オプティマイザの選択性推定を改良しました。(Tom)
      </para>
     </listitem>

     <listitem>
      <para>
<!--
       Improve planning of joins to <link linkend="ddl-inherit">inherited
       tables</link> and <link linkend="queries-union"><literal>UNION
<<<<<<< HEAD
       ALL</literal></link> views (Tom)
=======
       ALL</></link> views (Tom)
-->
<link linkend="ddl-inherit">継承されたテーブル</link>の結合や<link linkend="queries-union"><literal>UNION ALL</literal></link>ビューの計画作成を改良しました。(Tom)
>>>>>>> doc_ja_10_premerge
      </para>
     </listitem>

     <listitem>
      <para>
<!--
       Allow <link linkend="guc-constraint-exclusion">constraint
       exclusion</link> to be applied to <link
<<<<<<< HEAD
       linkend="ddl-inherit">inherited</link> <command>UPDATE</command> and
       <command>DELETE</command> queries (Tom)
      </para>

      <para>
       <command>SELECT</command> already honored constraint exclusion.
=======
       linkend="ddl-inherit">inherited</link> <command>UPDATE</> and
       <command>DELETE</> queries (Tom)
-->
<link linkend="guc-constraint-exclusion">制約による除外</link>が <link linkend="ddl-inherit">継承された</link> <command>UPDATE</command>および<command>DELETE</command> 問い合わせに適用できるようになりました。(Tom)
      </para>

      <para>
<!--
       <command>SELECT</> already honored constraint exclusion.
-->
既に<command>SELECT</command>は制約による除外に従います。
>>>>>>> doc_ja_10_premerge
      </para>
     </listitem>

     <listitem>
      <para>
<<<<<<< HEAD
       Improve planning of constant <literal>WHERE</literal> clauses, such as
=======
<!--
       Improve planning of constant <literal>WHERE</> clauses, such as
>>>>>>> doc_ja_10_premerge
       a condition that depends only on variables inherited from an
       outer query level (Tom)
-->
条件が外側の問い合わせを継承する変数にのみに依存する条件など、一定の<literal>WHERE</literal>句に対する計画作成を改良しました。(Tom)
      </para>
     </listitem>

     <listitem>
      <para>
<!--
       Protocol-level unnamed prepared statements are re-planned
<<<<<<< HEAD
       for each set of <literal>BIND</literal> values (Tom)
=======
       for each set of <literal>BIND</> values (Tom)
-->
プロトコルレベルの無名準備済み文が、<literal>BIND</literal>値の集合毎に計画作成されるようになりました。(Tom)
>>>>>>> doc_ja_10_premerge
      </para>

      <para>
<!--
       This improves performance because the exact parameter values
       can be used in the plan.
-->
正確なパラメータが計画で使用されるようになりますので、性能が向上します。
      </para>
     </listitem>

     <listitem>
      <para>
<!--
       Speed up vacuuming of B-Tree indexes (Heikki Linnakangas,
       Tom)
-->
B-Treeインデックスのバキューム処理の速度が向上しました。(Heikki Linnakangas, Tom)
      </para>
     </listitem>

     <listitem>
      <para>
<!--
       Avoid extra scan of tables without indexes during <link
<<<<<<< HEAD
       linkend="sql-vacuum"><command>VACUUM</command></link> (Greg Stark)
=======
       linkend="SQL-VACUUM"><command>VACUUM</></link> (Greg Stark)
-->
<link linkend="SQL-VACUUM"><command>VACUUM</command></link>期間中のインデックスを持たないテーブルに対する余計なスキャンを防止します。(Greg Stark)
>>>>>>> doc_ja_10_premerge
      </para>
     </listitem>

     <listitem>
      <para>
<<<<<<< HEAD
       Improve multicolumn <link linkend="gist"><acronym>GiST</acronym></link>
=======
<!--
       Improve multicolumn <link linkend="GiST"><acronym>GiST</></link>
>>>>>>> doc_ja_10_premerge
       indexing (Oleg, Teodor)
-->
複数列に対する<link linkend="GiST"><acronym>GiST</acronym></link>インデックス作成を改良しました。(Oleg, Teodor)
      </para>
     </listitem>

     <listitem>
      <para>
<!--
       Remove dead index entries before B-Tree page split (Junji
       Teramoto)
-->
B-Treeページの分割を行う前に不要なインデックス項目を削除します。(Junji Teramoto)
      </para>
     </listitem>

    </itemizedlist>

   </sect3>

   <sect3>
<!--
    <title>Server Changes</title>
-->
    <title>サーバの変更</title>
    <itemizedlist>

     <listitem>
      <para>
<!--
       Allow a forced switch to a new transaction log file (Simon, Tom)
-->
新しいトランザクションログファイルに強制的に切り替えることができるようになりました。(Simon, Tom)
      </para>

      <para>
<!--
       This is valuable for keeping warm standby slave servers
       in sync with the master.  Transaction log file switching now also happens
       automatically during <link
       linkend="functions-admin"><function>pg_stop_backup()</function></link>.
       This ensures that all
       transaction log files needed for recovery can be archived immediately.
-->
これは、マスタと同期するウォームスタンバイスレーブサーバを維持するために有益なものです。
トランザクションログファイルの切り替えはまた、<link linkend="functions-admin"><function>pg_stop_backup()</function></link>時に発生します。
これにより、確実に、復旧に必要なすべてのトランザクションログファイルが即座にアーカイブされるようになります。
      </para>
     </listitem>

     <listitem>
      <para>
<<<<<<< HEAD
       Add <acronym>WAL</acronym> informational functions (Simon)
=======
<!--
       Add <acronym>WAL</> informational functions (Simon)
-->
<acronym>WAL</acronym>情報関数を追加しました。(Simon)
>>>>>>> doc_ja_10_premerge
      </para>

      <para>
<!--
       Add functions for interrogating the current transaction log insertion
       point and determining <acronym>WAL</acronym> filenames from the
       hex <acronym>WAL</acronym> locations displayed by <link
       linkend="functions-admin"><function>pg_stop_backup()</function></link>
       and related functions.
-->
現在のトランザクションログファイルの挿入箇所を問い合わせる関数、<link linkend="functions-admin"><function>pg_stop_backup()</function></link>や関連する関数で表示される16進数の<acronym>WAL</acronym>の場所から<acronym>WAL</acronym>ファイル名を決定する関数を追加しました。
      </para>
     </listitem>

     <listitem>
      <para>
<<<<<<< HEAD
       Improve recovery from a crash during <acronym>WAL</acronym> replay (Simon)
      </para>

      <para>
       The server now does periodic checkpoints during <acronym>WAL</acronym>
       recovery, so if there is a crash, future <acronym>WAL</acronym>
=======
<!--
       Improve recovery from a crash during <acronym>WAL</> replay (Simon)
-->
<acronym>WAL</acronym>再生時のクラッシュからの復旧を改良しました。(Simon)
      </para>

      <para>
<!--
       The server now does periodic checkpoints during <acronym>WAL</>
       recovery, so if there is a crash, future <acronym>WAL</>
>>>>>>> doc_ja_10_premerge
       recovery is shortened.  This also eliminates the need for
       warm standby servers to replay the entire log since the
       base backup if they crash.
-->
サーバは<acronym>WAL</acronym>リカバリ時の定期的なチェックポイントを行うようになりました。
そのため、クラッシュした場合、その後の<acronym>WAL</acronym>の修復は省かれます。
また、これにより、ウォームスタンバイサーバがクラッシュしたとしても、ベースバックアップからログ全体を再生する必要性もなくなります。
      </para>
     </listitem>

     <listitem>
      <para>
<<<<<<< HEAD
       Improve reliability of long-term <acronym>WAL</acronym> replay
=======
<!--
       Improve reliability of long-term <acronym>WAL</> replay
>>>>>>> doc_ja_10_premerge
       (Heikki, Simon, Tom)
-->
長期に渡る<acronym>WAL</acronym>再生の信頼性を向上しました。(Heikki, Simon, Tom)
      </para>

      <para>
<!--
       Formerly, trying to roll forward through more than 2 billion
       transactions would not work due to XID wraparound.  This meant
       warm standby servers had to be reloaded
       from fresh base backups periodically.
-->
これまでは、2億トランザクション以上をロールフォワードしようとした場合、XID周回のために正常に動作しませんでした。
これは、ウォームスタンバイサーバが、新しいベースバックアップから定期的にリロードしなおす必要があることを意味します。
      </para>
     </listitem>

     <listitem>
      <para>
<!--
       Add <link
       linkend="guc-archive-timeout"><varname>archive_timeout</varname></link>
       to force transaction log file switches at a given interval (Simon)
-->
指定間隔でトランザクションログファイルの切り替えを強制できるように<link linkend="guc-archive-timeout"><varname>archive_timeout</varname></link>を追加しました。(Simon)
      </para>

      <para>
<!--
       This enforces a maximum replication delay for warm standby servers.
-->
これは、ウォームスタンバイサーバ用の最大複製遅延を強制します。
      </para>
     </listitem>

     <listitem>
      <para>
<<<<<<< HEAD
       Add native <link linkend="auth-ldap"><acronym>LDAP</acronym></link>
=======
<!--
       Add native <link linkend="auth-ldap"><acronym>LDAP</></link>
>>>>>>> doc_ja_10_premerge
       authentication (Magnus Hagander)
-->
ネイティブな<link linkend="auth-ldap"><acronym>LDAP</acronym></link>認証を追加しました。(Magnus Hagander)
      </para>

      <para>
<!--
       This is particularly useful for platforms that do not
<<<<<<< HEAD
       support <acronym>PAM</acronym>, such as Windows.
=======
       support <acronym>PAM</>, such as Windows.
-->
これは特に、Windowsなど<acronym>PAM</acronym>をサポートしないプラットフォームで便利です。
>>>>>>> doc_ja_10_premerge
      </para>
     </listitem>

     <listitem>
      <para>
<!--
       Add <link linkend="sql-grant-description-objects"><literal>GRANT
<<<<<<< HEAD
       CONNECT ON DATABASE</literal></link> (Gevik Babakhani)
=======
       CONNECT ON DATABASE</></link> (Gevik Babakhani)
-->
<link linkend="sql-grant-description-objects"><literal>GRANT CONNECT ON DATABASE</literal></link>を追加しました。(Gevik Babakhani)
>>>>>>> doc_ja_10_premerge
      </para>

      <para>
<!--
       This gives SQL-level control over database access.  It works as
       an additional filter on top of the existing
       <link linkend="auth-pg-hba-conf"><filename>pg_hba.conf</filename></link>
       controls.
-->
これにより、データベースアクセス全体をSQLレベルで制御できます。
これは、既存の<link linkend="auth-pg-hba-conf"><filename>pg_hba.conf</filename></link>による制御の上位に追加されるフィルタとして動作します。
      </para>
     </listitem>

     <listitem>
      <para>
<<<<<<< HEAD
       Add support for <link linkend="ssl-tcp"><acronym>SSL</acronym>
       Certificate Revocation List</link> (<acronym>CRL</acronym>) files
=======
<!--
       Add support for <link linkend="ssl-tcp"><acronym>SSL</>
       Certificate Revocation List</link> (<acronym>CRL</>) files
>>>>>>> doc_ja_10_premerge
       (Libor Hoho&scaron;)
-->
<link linkend="ssl-tcp"><acronym>SSL</acronym>証明書失効リスト</link> (<acronym>CRL</acronym>)ファイルのサポートを追加しました。(Libor Hoho&scaron;)
      </para>

      <para>
<<<<<<< HEAD
       The server and <application>libpq</application> both recognize <acronym>CRL</acronym>
=======
<!--
       The server and <application>libpq</> both recognize <acronym>CRL</>
>>>>>>> doc_ja_10_premerge
       files now.
-->
サーバおよび<application>libpq</application>が<acronym>CRL</acronym>ファイルを認識できるようになりました。
      </para>
     </listitem>

     <listitem>
      <para>
<<<<<<< HEAD
       <link linkend="gist"><acronym>GiST</acronym></link> indexes are
=======
<!--
       <link linkend="GiST"><acronym>GiST</></link> indexes are
>>>>>>> doc_ja_10_premerge
       now clusterable (Teodor)
-->
<link linkend="GiST"><acronym>GiST</acronym></link>インデックスがクラスタ可能になりました。(Teodor)
      </para>
     </listitem>

     <listitem>
      <para>
<!--
       Remove routine autovacuum server log entries (Bruce)
-->
定常的な自動バキュームのサーバログ項目を削除しました。(Bruce)
      </para>

      <para>
<!--
       <link
       linkend="monitoring-stats-views-table"><literal>pg_stat_activity</literal></link>
       now shows autovacuum activity.
-->
<link
       linkend="monitoring-stats-views-table"><literal>pg_stat_activity</literal></link>が自動バキュームの状況を表示するようになりました。
      </para>
     </listitem>

     <listitem>
      <para>
<!--
       Track maximum XID age within individual tables, instead of whole databases (Alvaro)
-->
データベース全体ではなく、個々のテーブルで最大XID年代を追跡するようにしました。(Alvaro)
      </para>

      <para>
<!--
       This reduces the overhead involved in preventing transaction
       ID wraparound, by avoiding unnecessary VACUUMs.
-->
これにより不要なVACUUMを防ぐことができ、トランザクションID周回を防止するためのオーバーヘッドを減少させることができます。
      </para>
     </listitem>

     <listitem>
      <para>
<!--
       Add last vacuum and analyze timestamp columns to the stats
       collector (Larry Rosenman)
-->
前回バキュームした時刻、解析した時刻を統計コレクタの列に追加しました。(Larry Rosenman)
      </para>

      <para>
<!--
       These values now appear in the <link
       linkend="monitoring-stats-views-table"><literal>pg_stat_*_tables</literal></link>
       system views.
-->
これらの変数は<link
       linkend="monitoring-stats-views-table"><literal>pg_stat_*_tables</literal></link>システムビューに表示されます。
      </para>
     </listitem>

     <listitem>
      <para>
<!--
       Improve performance of statistics monitoring, especially
       <varname>stats_command_string</varname>
       (Tom, Bruce)
-->
統計処理監視、特に<varname>stats_command_string</varname>の性能を向上しました。(Tom, Bruce)
      </para>

      <para>
<<<<<<< HEAD
       This release enables <varname>stats_command_string</varname> by
=======
<!--
       This release enables <varname>stats_command_string</> by
>>>>>>> doc_ja_10_premerge
       default, now that its overhead is minimal.  This means
       <link
       linkend="monitoring-stats-views-table"><literal>pg_stat_activity</literal></link>
       will now show all active queries by default.
-->
このリリースではデフォルトで<varname>stats_command_string</varname>が有効です。
そのオーバーヘッドが最小になっています。
これは<link
       linkend="monitoring-stats-views-table"><literal>pg_stat_activity</literal></link>がデフォルトですべての有効な問い合わせを表示するようになったことを意味します。
      </para>
     </listitem>

     <listitem>
      <para>
<<<<<<< HEAD
       Add a <literal>waiting</literal> column to <link
       linkend="monitoring-stats-views-table"><literal>pg_stat_activity</literal></link>
=======
<!--
       Add a <literal>waiting</> column to <link
       linkend="monitoring-stats-views-table"><literal>pg_stat_activity</></link>
-->
<literal>waiting</literal>列を<link linkend="monitoring-stats-views-table"><literal>pg_stat_activity</literal></link>に追加しました。
>>>>>>> doc_ja_10_premerge
       (Tom)
      </para>

      <para>
<<<<<<< HEAD
       This allows <structname>pg_stat_activity</structname> to show all the
       information included in the <application>ps</application> display.
=======
<!--
       This allows <structname>pg_stat_activity</> to show all the
       information included in the <application>ps</> display.
-->
これにより、<structname>pg_stat_activity</structname>は<application>ps</application>表示で含まれるすべての情報を表示できるようになります。
>>>>>>> doc_ja_10_premerge
      </para>
     </listitem>

     <listitem>
      <para>
<!--
       Add configuration parameter <link
       linkend="guc-update-process-title"><varname>update_process_title</varname></link>
       to control whether the <application>ps</application> display is updated
       for every command (Bruce)
-->
<application>ps</application>の表示を各コマンドで更新するかどうかを制御する<link linkend="guc-update-process-title"><varname>update_process_title</varname></link>設定パラメータを追加しました。(Bruce)
      </para>

      <para>
<<<<<<< HEAD
       On platforms where it is expensive to update the <application>ps</application>
       display, it might be worthwhile to turn this off and rely solely on
       <structname>pg_stat_activity</structname> for status information.
=======
<!--
       On platforms where it is expensive to update the <application>ps</>
       display, it might be worthwhile to turn this off and rely solely on
       <structname>pg_stat_activity</> for status information.
-->
<application>ps</application>表示の更新処理が高価なプラットフォームでは、これを無効にし、ステータス情報を<structname>pg_stat_activity</structname>に任せた方が良いかもしれません。
>>>>>>> doc_ja_10_premerge
      </para>
     </listitem>

     <listitem>
      <para>
<!--
       Allow units to be specified in configuration settings
-->
設定時に単位を指定できるようになりました。
       (Peter)
      </para>

      <para>
<!--
       For example, you can now set <link
<<<<<<< HEAD
       linkend="guc-shared-buffers"><varname>shared_buffers</varname></link>
       to <literal>32MB</literal> rather than mentally converting sizes.
=======
       linkend="guc-shared-buffers"><varname>shared_buffers</></link>
       to <literal>32MB</> rather than mentally converting sizes.
-->
例えば、<link linkend="guc-shared-buffers"><varname>shared_buffers</varname></link>を、暗算でサイズ変換することなく、<literal>32MB</literal>と指定することができるようになりました。
>>>>>>> doc_ja_10_premerge
      </para>
     </listitem>

     <listitem>
      <para>
<!--
       Add support for <link linkend="config-setting">include
       directives</link> in <filename>postgresql.conf</filename> (Joachim
       Wieland)
-->
<filename>postgresql.conf</filename>内で<link linkend="config-setting">include指示子</link>のサポートを追加しました。(Joachim Wieland)
      </para>
     </listitem>

     <listitem>
      <para>
<!--
       Improve logging of protocol-level prepare/bind/execute
       messages (Bruce, Tom)
-->
プロトコルレベルのprepare/bind/executeメッセージのログ処理を改良しました。(Bruce, Tom)
      </para>

      <para>
<!--
       Such logging now shows statement names, bind parameter
       values, and the text of the query being executed.  Also,
       the query text is properly included in logged error messages
<<<<<<< HEAD
       when enabled by <varname>log_min_error_statement</varname>.
=======
       when enabled by <varname>log_min_error_statement</>.
-->
ログ処理などで、文の名前、バインドパラメータ値、実行される問い合わせテキストを表示するようになりました。
また、<varname>log_min_error_statement</varname>が有効な場合、問い合わせテキストには、エラーメッセージが適切に含まれます。
>>>>>>> doc_ja_10_premerge
      </para>
     </listitem>

     <listitem>
      <para>
<!--
       Prevent <link
       linkend="guc-max-stack-depth"><varname>max_stack_depth</varname></link>
       from being set to unsafe values
-->
<link linkend="guc-max-stack-depth"><varname>max_stack_depth</varname></link>が危険な値に設定されることを防止します。
      </para>

      <para>
<!--
       On platforms where we can determine the actual kernel stack depth
       limit (which is most), make sure that the initial default value of
       <varname>max_stack_depth</varname> is safe, and reject attempts to set it
       to unsafely large values.
-->
実際のカーネルスタック長の上限が決定できるプラットフォーム（ほとんどの場合）では、<varname>max_stack_depth</varname>の初期デフォルト値が安全になりました。
また、危険なほど大きな値が設定されたとしても拒絶します。
      </para>
     </listitem>

     <listitem>
      <para>
<!--
       Enable highlighting of error location in query in more
       cases (Tom)
-->
多くの場合で、問い合わせ内のエラー箇所のハイライトが可能になりました。(Tom)
      </para>

      <para>
<!--
       The server is now able to report a specific error location for
       some semantic errors (such as unrecognized column name), rather
       than just for basic syntax errors as before.
-->
これまでのような基本的な構文エラーだけでなく、サーバが一部の意味的なエラー（不明な列名など）に対しエラー箇所を指定して報告できるようになりました。
      </para>
     </listitem>

     <listitem>
      <para>
<<<<<<< HEAD
       Fix <quote>failed to re-find parent key</quote> errors in
       <command>VACUUM</command> (Tom)
=======
<!--
       Fix <quote>failed to re-find parent key</> errors in
       <command>VACUUM</> (Tom)
-->
<command>VACUUM</command>における<quote>failed to re-find parent key</quote>エラーを修正しました。(Tom)
>>>>>>> doc_ja_10_premerge
      </para>
     </listitem>

     <listitem>
      <para>
<<<<<<< HEAD
       Clean out <filename>pg_internal.init</filename> cache files during server
=======
<!--
       Clean out <filename>pg_internal.init</> cache files during server
>>>>>>> doc_ja_10_premerge
       restart (Simon)
-->
サーバ再起動時、<filename>pg_internal.init</filename>キャッシュファイルを初期化するようにしました。(Simon)
      </para>

      <para>
<!--
       This avoids a hazard that the cache files might contain stale
       data after PITR recovery.
-->
これは、PITRリカバリの後にキャッシュファイルが無効なデータを含む危険性を防止します。
      </para>
     </listitem>

     <listitem>
      <para>
<!--
       Fix race condition for truncation of a large relation across a
<<<<<<< HEAD
       gigabyte boundary by <command>VACUUM</command> (Tom)
=======
       gigabyte boundary by <command>VACUUM</> (Tom)
-->
<command>VACUUM</command>による1ギガバイト境界を越える大規模リレーションの消去における競合状態を修正しました。(Tom)
>>>>>>> doc_ja_10_premerge
      </para>
     </listitem>

     <listitem>
      <para>
<!--
       Fix bug causing needless deadlock errors on row-level locks (Tom)
-->
行レベルロックにおいて不要なデッドロックエラーを発生する不具合を修正しました。(Tom)
      </para>
     </listitem>

     <listitem>
      <para>
<!--
       Fix bugs affecting multi-gigabyte hash indexes (Tom)
-->
数ギガバイトのハッシュインデックスに影響する不具合を修正しました。(Tom)
      </para>
     </listitem>

     <listitem>
      <para>
<!--
       Each backend process is now its own process group leader (Tom)
-->
各バックエンドプロセスが自身のプロセスグループリーダとなります。(Tom)
      </para>

      <para>
<!--
       This allows query cancel to abort subprocesses invoked from a
       backend or archive/recovery process.
-->
これにより、問い合わせのキャンセルがバックエンドプロセスやアーカイブ/リカバリプロセスから呼び出された子プロセスを中断できるようになりました。
      </para>
     </listitem>

    </itemizedlist>

   </sect3>

   <sect3>
<!--
    <title>Query Changes</title>
-->
    <title>問い合わせの変更</title>
    <itemizedlist>

     <listitem>
      <para>
<<<<<<< HEAD
       Add <link linkend="sql-insert"><command>INSERT</command></link>/<link
       linkend="sql-update"><command>UPDATE</command></link>/<link
       linkend="sql-delete"><command>DELETE</command></link>
       <literal>RETURNING</literal> (Jonah Harris, Tom)
=======
<!--
       Add <link linkend="SQL-INSERT"><command>INSERT</></link>/<link
       linkend="SQL-UPDATE"><command>UPDATE</></link>/<link
       linkend="SQL-DELETE"><command>DELETE</></link>
       <literal>RETURNING</> (Jonah Harris, Tom)
-->
<link linkend="SQL-INSERT"><command>INSERT</command></link>/<link linkend="SQL-UPDATE"><command>UPDATE</command></link>/<link linkend="SQL-DELETE"><command>DELETE</command></link> <literal>RETURNING</literal>を追加しました。(Jonah Harris, Tom)
>>>>>>> doc_ja_10_premerge
      </para>

      <para>
<!--
       This allows these commands to return values, such as the
       computed serial key for a new row.  In the <command>UPDATE</command>
       case, values from the updated version of the row are returned.
-->
これにより、これらのコマンドが、新しい行に対して計算された連番キーなどの値を返すことができます。
<command>UPDATE</command>の場合、更新されたバージョンの行の値が返されます。
      </para>
     </listitem>

     <listitem>
      <para>
<!--
       Add support for multiple-row <link
       linkend="queries-values"><literal>VALUES</literal></link> clauses,
       per SQL standard (Joe, Tom)
-->
標準SQLに従った、複数行<link linkend="queries-values"><literal>VALUES</literal></link>句のサポートを追加しました。(Joe, Tom)
      </para>

      <para>
<<<<<<< HEAD
       This allows <command>INSERT</command> to insert multiple rows of
       constants, or queries to generate result sets using constants.
       For example, <literal>INSERT ...  VALUES (...), (...),
       ....</literal>, and <literal>SELECT * FROM (VALUES (...), (...),
       ....) AS alias(f1, ...)</literal>.
=======
<!--
       This allows <command>INSERT</> to insert multiple rows of
       constants, or queries to generate result sets using constants.
       For example, <literal>INSERT ...  VALUES (...), (...),
       ....</>, and <literal>SELECT * FROM (VALUES (...), (...),
       ....) AS alias(f1, ...)</>.
-->
これにより、<command>INSERT</command>は複数の定数行を挿入することができます。
また、定数を使用した結果セットを生成する問い合わせを行うこともできます。
例えば、<literal>INSERT ...  VALUES (...), (...),
       ....</literal>や<literal>SELECT * FROM (VALUES (...), (...),
       ....) AS alias(f1, ...)</literal>です。
>>>>>>> doc_ja_10_premerge
      </para>
     </listitem>

     <listitem>
      <para>
<<<<<<< HEAD
       Allow <link linkend="sql-update"><command>UPDATE</command></link>
       and <link linkend="sql-delete"><command>DELETE</command></link>
=======
<!--
       Allow <link linkend="SQL-UPDATE"><command>UPDATE</></link>
       and <link linkend="SQL-DELETE"><command>DELETE</></link>
>>>>>>> doc_ja_10_premerge
       to use an alias for the target table (Atsushi Ogawa)
-->
<link linkend="SQL-UPDATE"><command>UPDATE</command></link>および<link linkend="SQL-DELETE"><command>DELETE</command></link>が対象テーブルの別名を使用できるようになりました。(Atsushi Ogawa)
      </para>

      <para>
<!--
       The SQL standard does not permit an alias in these commands, but
       many database systems allow one anyway for notational convenience.
-->
標準SQLでは、これらのコマンドで別名を許していません。
しかし、多くのデータベースシステムでは、便利な記法として許しています。
      </para>
     </listitem>

     <listitem>
      <para>
<<<<<<< HEAD
       Allow <link linkend="sql-update"><command>UPDATE</command></link>
=======
<!--
       Allow <link linkend="SQL-UPDATE"><command>UPDATE</></link>
>>>>>>> doc_ja_10_premerge
       to set multiple columns with a list of values (Susanne
       Ebrecht)
-->
<link linkend="SQL-UPDATE"><command>UPDATE</command></link>が値リストで複数列を指定できるようになりました。(Susanne Ebrecht)
      </para>

      <para>
<!--
       This is basically a short-hand for assigning the columns
       and values in pairs.  The syntax is <literal>UPDATE tab
<<<<<<< HEAD
       SET (<replaceable>column</replaceable>, ...) = (<replaceable>val</replaceable>, ...)</literal>.
=======
       SET (<replaceable>column</>, ...) = (<replaceable>val</>, ...)</>.
-->
基本的にこれは、列と値の組み合わせ割り当てに関する簡略形です。
構文は、<literal>UPDATE tab
        SET (<replaceable>column</replaceable>, ...) = (<replaceable>val</replaceable>, ...)</literal>です。
>>>>>>> doc_ja_10_premerge
      </para>
     </listitem>

     <listitem>
      <para>
<!--
       Make row comparisons work per standard (Tom)
-->
標準に従った行の比較ができるようになりました。(Tom)
      </para>

      <para>
<!--
       The forms &lt;, &lt;=, &gt;, &gt;= now compare rows lexicographically,
       that is, compare the first elements, if equal compare the second
       elements, and so on.  Formerly they expanded to an AND condition
       across all the elements, which was neither standard nor very useful.
-->
&lt;、&lt;=、&gt;、&gt;=という形式で行を辞書的に比較します。
つまり、最初の要素を比較し、もし同じならば、2番目の要素をという順に比較します。
以前は、これらは全要素に対するAND条件として展開されました。
標準に従っているわけでもなく、特に便利であるわけでもありませんでした。
      </para>
     </listitem>

     <listitem>
      <para>
<<<<<<< HEAD
       Add <link linkend="sql-truncate"><literal>CASCADE</literal></link>
       option to <command>TRUNCATE</command> (Joachim Wieland)
      </para>

      <para>
       This causes <command>TRUNCATE</command> to automatically include all tables
=======
<!--
       Add <link linkend="SQL-TRUNCATE"><literal>CASCADE</></link>
       option to <command>TRUNCATE</> (Joachim Wieland)
-->
<command>TRUNCATE</command>に<link linkend="SQL-TRUNCATE"><literal>CASCADE</literal></link>オプションを追加しました。(Joachim Wieland)
      </para>

      <para>
<!--
       This causes <command>TRUNCATE</> to automatically include all tables
>>>>>>> doc_ja_10_premerge
       that reference the specified table(s) via foreign keys.  While
       convenient, this is a dangerous tool &mdash; use with caution!
-->
これにより、<command>TRUNCATE</command>は自動的に指定したテーブルを外部キー経由で参照するすべてのテーブルを含めるようになります。
便利ではありますが、危険なものです。
注意して使用してください。
      </para>
     </listitem>

     <listitem>
      <para>
<<<<<<< HEAD
       Support <literal>FOR UPDATE</literal> and <literal>FOR SHARE</literal>
       in the same <link linkend="sql-insert"><literal>SELECT</literal></link>
=======
<!--
       Support <literal>FOR UPDATE</> and <literal>FOR SHARE</>
       in the same <link linkend="SQL-INSERT"><literal>SELECT</></link>
>>>>>>> doc_ja_10_premerge
       command (Tom)
-->
同一<link linkend="SQL-INSERT"><literal>SELECT</literal></link>コマンドで<literal>FOR UPDATE</literal>と<literal>FOR SHARE</literal>をサポートします。(Tom)
      </para>
     </listitem>

     <listitem>
      <para>
<!--
       Add <link linkend="functions-comparisons"><literal>IS NOT
<<<<<<< HEAD
       DISTINCT FROM</literal></link> (Pavel Stehule)
      </para>

      <para>
       This operator is similar to equality (<literal>=</literal>), but
       evaluates to true when both left and right operands are
       <literal>NULL</literal>, and to false when just one is, rather than
       yielding <literal>NULL</literal> in these cases.
=======
       DISTINCT FROM</></link> (Pavel Stehule)
-->
<link linkend="functions-comparisons"><literal>IS NOT DISTINCT FROM</literal></link>を追加しました。(Pavel Stehule)
      </para>

      <para>
<!--
       This operator is similar to equality (<literal>=</>), but
       evaluates to true when both left and right operands are
       <literal>NULL</>, and to false when just one is, rather than
       yielding <literal>NULL</> in these cases.
-->
この演算子は等価演算子（<literal>=</literal>）と似ています。しかし、<literal>NULL</literal>を返すのではなく、右辺と左辺が<literal>NULL</literal>の場合に真と、片方だけが<literal>NULL</literal>の場合に偽と評価します。
>>>>>>> doc_ja_10_premerge
      </para>
     </listitem>

     <listitem>
      <para>
<!--
       Improve the length output used by <link
<<<<<<< HEAD
       linkend="queries-union"><literal>UNION</literal></link>/<literal>INTERSECT</literal>/<literal>EXCEPT</literal>
=======
       linkend="queries-union"><literal>UNION</></link>/<literal>INTERSECT</>/<literal>EXCEPT</>
-->
<link linkend="queries-union"><literal>UNION</literal></link>/<literal>INTERSECT</literal>/<literal>EXCEPT</literal>で使用される長さ出力を改良しました。
>>>>>>> doc_ja_10_premerge
       (Tom)
      </para>

      <para>
<!--
       When all corresponding columns are of the same defined length, that
       length is used for the result, rather than a generic length.
-->
すべての対応する列が同じ長さで定義された場合、一般的な長さではなく、その定義された長さが結果として使用されます。
      </para>
     </listitem>

     <listitem>
      <para>
<<<<<<< HEAD
       Allow <link linkend="functions-like"><literal>ILIKE</literal></link>
=======
<!--
       Allow <link linkend="functions-like"><literal>ILIKE</></link>
>>>>>>> doc_ja_10_premerge
       to work for multi-byte encodings (Tom)
-->
<link linkend="functions-like"><literal>ILIKE</literal></link>がマルチバイト符号化方式で動作できるようになりました。(Tom)
      </para>

      <para>
<<<<<<< HEAD
       Internally, <literal>ILIKE</literal> now calls <function>lower()</function>
       and then uses <literal>LIKE</literal>.  Locale-specific regular
=======
<!--
       Internally, <literal>ILIKE</> now calls <function>lower()</>
       and then uses <literal>LIKE</>.  Locale-specific regular
>>>>>>> doc_ja_10_premerge
       expression patterns still do not work in these encodings.
-->
内部的には、<literal>ILIKE</literal>が<function>lower()</function>を呼び出した後に<literal>LIKE</literal>を使用するようになりました。
こうした符号化方式では、ロケール固有の正規表現パターンはまだ正常に動作しません。
      </para>
     </listitem>

     <listitem>
      <para>
<!--
       Enable <link
<<<<<<< HEAD
       linkend="guc-standard-conforming-strings"><varname>standard_conforming_strings</varname></link>
       to be turned <literal>on</literal> (Kevin Grittner)
=======
       linkend="guc-standard-conforming-strings"><varname>standard_conforming_strings</></link>
       to be turned <literal>on</> (Kevin Grittner)
-->
<link linkend="guc-standard-conforming-strings"><varname>standard_conforming_strings</varname></link>を<literal>on</literal>にできるようになりました。(Kevin Grittner)
>>>>>>> doc_ja_10_premerge
      </para>

      <para>
<!--
       This allows backslash escaping in strings to be disabled,
<<<<<<< HEAD
       making <productname>PostgreSQL</productname> more
       standards-compliant.  The default is <literal>off</literal> for backwards
       compatibility, but future releases will default this to <literal>on</literal>.
=======
       making <productname>PostgreSQL</> more
       standards-compliant.  The default is <literal>off</> for backwards
       compatibility, but future releases will default this to <literal>on</>.
-->
これにより、文字列内のバックスラッシュエスケープは無効になり、<productname>PostgreSQL</productname>がより標準に準拠するようになりました。
後方互換性のためデフォルトは<literal>off</literal>ですが、将来は<literal>on</literal>がデフォルトになる予定です。
>>>>>>> doc_ja_10_premerge
      </para>
     </listitem>

     <listitem>
      <para>
<<<<<<< HEAD
       Do not flatten subqueries that contain <literal>volatile</literal>
=======
<!--
       Do not flatten subqueries that contain <literal>volatile</>
>>>>>>> doc_ja_10_premerge
       functions in their target lists (Jaime Casanova)
-->
対象リストに<literal>volatile</literal>関数が含まれている場合に副問い合わせを平坦化しません。(Jaime Casanova)
      </para>

      <para>
<!--
       This prevents surprising behavior due to multiple evaluation
       of a <literal>volatile</literal> function (such as <function>random()</function>
       or <function>nextval()</function>).  It might cause performance
       degradation in the presence of functions that are unnecessarily
<<<<<<< HEAD
       marked as <literal>volatile</literal>.
=======
       marked as <literal>volatile</>.
-->
これは、<literal>volatile</literal>関数（<function>random()</function>や<function>nextval()</function>など）の複数回の評価による想定外の振る舞いを防止します。
不必要に<literal>volatile</literal>と宣言された関数があると、性能劣化をもたらす可能性があります。
>>>>>>> doc_ja_10_premerge
      </para>
     </listitem>

     <listitem>
      <para>
<!--
       Add system views <link
       linkend="view-pg-prepared-statements"><literal>pg_prepared_statements</literal></link>
       and <link
       linkend="view-pg-cursors"><literal>pg_cursors</literal></link>
       to show prepared statements and open cursors (Joachim Wieland, Neil)
-->
準備済み文と開いているカーソルを示す<link linkend="view-pg-prepared-statements"><literal>pg_prepared_statements</literal></link>および<link linkend="view-pg-cursors"><literal>pg_cursors</literal></link>システムビューを追加しました。(Joachim Wieland, Neil)
      </para>

      <para>
<!--
       These are very useful in pooled connection setups.
-->
接続プールを設定している場合に非常に有用です。
      </para>
     </listitem>

     <listitem>
      <para>
<!--
       Support portal parameters in <link
<<<<<<< HEAD
       linkend="sql-explain"><command>EXPLAIN</command></link> and <link
       linkend="sql-execute"><command>EXECUTE</command></link> (Tom)
      </para>

      <para>
       This allows, for example, <acronym>JDBC</acronym> <literal>?</literal> parameters to
=======
       linkend="SQL-EXPLAIN"><command>EXPLAIN</></link> and <link
       linkend="SQL-EXECUTE"><command>EXECUTE</></link> (Tom)
-->
<link linkend="SQL-EXPLAIN"><command>EXPLAIN</command></link>および<link linkend="SQL-EXECUTE"><command>EXECUTE</command></link>においてポータルパラメータをサポートします。(Tom)
      </para>

      <para>
<!--
       This allows, for example, <acronym>JDBC</> <literal>?</> parameters to
>>>>>>> doc_ja_10_premerge
       work in these commands.
-->
これにより、例えば<acronym>JDBC</acronym>の<literal>?</literal>パラメータでこれらのコマンドを動作させることができます。
      </para>
     </listitem>

     <listitem>
      <para>
<<<<<<< HEAD
       If <acronym>SQL</acronym>-level <link
       linkend="sql-prepare"><command>PREPARE</command></link> parameters
=======
<!--
       If <acronym>SQL</>-level <link
       linkend="SQL-PREPARE"><command>PREPARE</></link> parameters
>>>>>>> doc_ja_10_premerge
       are unspecified, infer their types from the content of the
       query (Neil)
-->
<acronym>SQL</acronym>レベルで<link linkend="SQL-PREPARE"><command>PREPARE</command></link>パラメータが指定されない場合、問い合わせの文脈から型を推定します。(Neil)
      </para>

      <para>
<<<<<<< HEAD
       Protocol-level <command>PREPARE</command> already did this.
=======
<!--
       Protocol-level <command>PREPARE</> already did this.
-->
プロトコルレベルの<command>PREPARE</command>では既に実現していました。
>>>>>>> doc_ja_10_premerge
      </para>
     </listitem>

     <listitem>
      <para>
<<<<<<< HEAD
       Allow <literal>LIMIT</literal> and <literal>OFFSET</literal> to exceed
=======
<!--
       Allow <literal>LIMIT</> and <literal>OFFSET</> to exceed
>>>>>>> doc_ja_10_premerge
       two billion (Dhanaraj M)
-->
<literal>LIMIT</literal>および<literal>OFFSET</literal>が200億以上を使用できるようになりました。(Dhanaraj M)
      </para>
     </listitem>

    </itemizedlist>

   </sect3>

   <sect3>
<!--
    <title>Object Manipulation Changes</title>
-->
    <title>オブジェクト操作における変更</title>
    <itemizedlist>

     <listitem>
      <para>
<<<<<<< HEAD
       Add <literal>TABLESPACE</literal> clause to <link
       linkend="sql-createtableas"><command>CREATE TABLE AS</command></link>
=======
<!--
       Add <literal>TABLESPACE</> clause to <link
       linkend="SQL-CREATETABLEAS"><command>CREATE TABLE AS</></link>
-->
<link linkend="SQL-CREATETABLEAS"><command>CREATE TABLE AS</command></link>に<literal>TABLESPACE</literal>句を追加しました。
>>>>>>> doc_ja_10_premerge
       (Neil)
      </para>

      <para>
<!--
       This allows a tablespace to be specified for the new table.
-->
これにより新しいテーブルを作成するときにテーブル空間を指定できます。
      </para>
     </listitem>

     <listitem>
      <para>
<<<<<<< HEAD
       Add <literal>ON COMMIT</literal> clause to <link
       linkend="sql-createtableas"><command>CREATE TABLE AS</command></link>
=======
<!--
       Add <literal>ON COMMIT</> clause to <link
       linkend="SQL-CREATETABLEAS"><command>CREATE TABLE AS</></link>
-->
<link linkend="SQL-CREATETABLEAS"><command>CREATE TABLE AS</command></link>に<literal>ON COMMIT</literal>句を追加しました。
>>>>>>> doc_ja_10_premerge
       (Neil)
      </para>

      <para>
<!--
       This allows temporary tables to be truncated or dropped on
       transaction commit.  The default behavior is for the table
       to remain until the session ends.
-->
これにより、一時テーブルをトランザクションのコミット時に消去したり削除したりすることができます。
デフォルトの動作では、セッションが終了するまでテーブルは残ります。
      </para>
     </listitem>

     <listitem>
      <para>
<<<<<<< HEAD
       Add <literal>INCLUDING CONSTRAINTS</literal> to <link
       linkend="sql-createtable"><command>CREATE TABLE LIKE</command></link>
=======
<!--
       Add <literal>INCLUDING CONSTRAINTS</> to <link
       linkend="SQL-CREATETABLE"><command>CREATE TABLE LIKE</></link>
-->
<link linkend="SQL-CREATETABLE"><command>CREATE TABLE LIKE</command></link>に<literal>INCLUDING CONSTRAINTS</literal>を追加しました。
>>>>>>> doc_ja_10_premerge
       (Greg Stark)
      </para>

      <para>
<<<<<<< HEAD
       This allows easy copying of <literal>CHECK</literal> constraints to a new
=======
<!--
       This allows easy copying of <literal>CHECK</> constraints to a new
>>>>>>> doc_ja_10_premerge
       table.
-->
これにより、新しいテーブルに簡単に<literal>CHECK</literal>制約をコピーすることができます。
      </para>
     </listitem>

     <listitem>
      <para>
<!--
       Allow the creation of placeholder (shell) <link
<<<<<<< HEAD
       linkend="sql-createtype">types</link> (Martijn van Oosterhout)
=======
       linkend="SQL-CREATETYPE">types</link> (Martijn van Oosterhout)
-->
プレースホルダ（シェル）<link linkend="SQL-CREATETYPE">型</link>を生成できます。(Martijn van Oosterhout)
>>>>>>> doc_ja_10_premerge
      </para>

      <para>
<!--
       A shell type declaration creates a type name, without specifying
       any of the details of the type.  Making a shell type is useful
       because it allows cleaner declaration of the type's input/output
       functions, which must exist before the type can be defined <quote>for
<<<<<<< HEAD
       real</quote>.  The syntax is <command>CREATE TYPE <replaceable
       class="parameter">typename</replaceable></command>.
=======
       real</>.  The syntax is <command>CREATE TYPE <replaceable
       class="parameter">typename</replaceable></>.
-->
シェル型の宣言は、型の仕様を指定せずに型の名前を生成します。
シェル型の作成は、型を<quote>実際に</quote>定義する前に存在しなければならない、型の入出力関数の宣言を整理することができる点で有用です。
構文は、<command>CREATE TYPE <replaceable class="parameter">typename</replaceable></command>です。
>>>>>>> doc_ja_10_premerge
      </para>
     </listitem>

     <listitem>
      <para>
<<<<<<< HEAD
       <link linkend="sql-createaggregate">Aggregate functions</link>
=======
<!--
       <link linkend="SQL-CREATEAGGREGATE">Aggregate functions</link>
>>>>>>> doc_ja_10_premerge
       now support multiple input parameters (Sergey Koposov, Tom)
-->
<link linkend="SQL-CREATEAGGREGATE">集約関数</link>が複数の入力パラメータをサポートするようになりました。(Sergey Koposov, Tom)
      </para>
     </listitem>

     <listitem>
      <para>
<!--
       Add new aggregate creation <link
<<<<<<< HEAD
       linkend="sql-createaggregate">syntax</link> (Tom)
=======
       linkend="SQL-CREATEAGGREGATE">syntax</link> (Tom)
-->
新しい集約関数作成<link linkend="SQL-CREATEAGGREGATE">構文</link>を追加しました。(Tom)
>>>>>>> doc_ja_10_premerge
      </para>

      <para>
<!--
       The new syntax is <command>CREATE AGGREGATE
       <replaceable>aggname</replaceable> (<replaceable>input_type</replaceable>)
       (<replaceable>parameter_list</replaceable>)</command>.  This more
       naturally supports the new multi-parameter aggregate
       functionality.  The previous syntax is still supported.
-->
新しい構文は<command>CREATE AGGREGATE
       <replaceable>aggname</replaceable> (<replaceable>input_type</replaceable>)
       (<replaceable>parameter_list</replaceable>)</command>です。
これはより自然に、新しい複数パラメータ集約機能をサポートします。
これまでの構文もまだサポートします。
      </para>
     </listitem>

     <listitem>
      <para>
<!--
       Add <link
       linkend="sql-alterrole"><command>ALTER ROLE PASSWORD NULL</command></link>
       to remove a previously set role password (Peter)
-->
過去に設定したロールパスワードを削除する<link linkend="SQL-ALTERROLE"><command>ALTER ROLE PASSWORD NULL</command></link>を追加しました。(Peter)
      </para>
     </listitem>

     <listitem>
      <para>
<<<<<<< HEAD
       Add <command>DROP</command> object <literal>IF EXISTS</literal> for many
=======
<!--
       Add <command>DROP</> object <literal>IF EXISTS</> for many
>>>>>>> doc_ja_10_premerge
       object types (Andrew)
-->
多くのオブジェクト種類について、 <literal>IF EXISTS</literal>付きの<command>DROP</command>操作を追加しました。
      </para>

      <para>
<<<<<<< HEAD
       This allows <command>DROP</command> operations on non-existent
=======
<!--
       This allows <command>DROP</> operations on non-existent
>>>>>>> doc_ja_10_premerge
       objects without generating an error.
-->
これにより、オブジェクトが存在しなくてもエラーとなることなく、<command>DROP</command>操作を行うことができます。
      </para>
     </listitem>

     <listitem>
      <para>
<<<<<<< HEAD
       Add <link linkend="sql-drop-owned"><literal>DROP OWNED</literal></link>
=======
<!--
       Add <link linkend="SQL-DROP-OWNED"><literal>DROP OWNED</></link>
>>>>>>> doc_ja_10_premerge
       to drop all objects owned by a role (Alvaro)
-->
ロールが所有するすべてのオブジェクトを削除する<link linkend="SQL-DROP-OWNED"><literal>DROP OWNED</literal></link>を追加しました。(Alvaro)
      </para>
     </listitem>

     <listitem>
      <para>
<<<<<<< HEAD
       Add <link linkend="sql-reassign-owned"><literal>REASSIGN
       OWNED</literal></link> to reassign ownership of all objects owned
=======
<!--
       Add <link linkend="SQL-REASSIGN-OWNED"><literal>REASSIGN
       OWNED</></link> to reassign ownership of all objects owned
>>>>>>> doc_ja_10_premerge
       by a role (Alvaro)
-->
あるロールが所有するすべてのオブジェクトの所有権を再割り当てする<link linkend="SQL-REASSIGN-OWNED"><literal>REASSIGN OWNED</literal></link>を追加しました。(Alvaro)
      </para>

      <para>
<<<<<<< HEAD
       This, and <literal>DROP OWNED</literal> above, facilitate dropping
=======
<!--
       This, and <literal>DROP OWNED</> above, facilitate dropping
>>>>>>> doc_ja_10_premerge
       roles.
-->
これと上述の<literal>DROP OWNED</literal>によりロールの削除が簡単になります。
      </para>
     </listitem>

     <listitem>
      <para>
<<<<<<< HEAD
       Add <link linkend="sql-grant"><command>GRANT ON SEQUENCE</command></link>
=======
<!--
       Add <link linkend="SQL-GRANT"><command>GRANT ON SEQUENCE</></link>
>>>>>>> doc_ja_10_premerge
       syntax (Bruce)
-->
<link linkend="SQL-GRANT"><command>GRANT ON SEQUENCE</command></link>構文を追加しました。(Bruce)
      </para>

      <para>
<!--
       This was added for setting sequence-specific permissions.
       <literal>GRANT ON TABLE</literal> for sequences is still supported
       for backward compatibility.
-->
シーケンス固有の権限設定のために追加されました。
シーケンスに対する<literal>GRANT ON TABLE</literal>も後方互換のためにまだサポートされています。
      </para>
     </listitem>

     <listitem>
      <para>
<<<<<<< HEAD
       Add <link linkend="sql-grant"><literal>USAGE</literal></link>
       permission for sequences that allows only <function>currval()</function>
       and <function>nextval()</function>, not <function>setval()</function>
=======
<!--
       Add <link linkend="SQL-GRANT"><literal>USAGE</></link>
       permission for sequences that allows only <function>currval()</>
       and <function>nextval()</>, not <function>setval()</>
-->
シーケンスに対し<function>currval()</function>および<function>nextval()</function>のみを許可し、 <function>setval()</function>を許可しない<link linkend="SQL-GRANT"><literal>USAGE</literal></link>権限を追加しました。
>>>>>>> doc_ja_10_premerge
       (Bruce)
      </para>

      <para>
<<<<<<< HEAD
       <literal>USAGE</literal> permission allows more fine-grained
       control over sequence access.  Granting <literal>USAGE</literal>
       allows users to increment
       a sequence, but prevents them from setting the sequence to
       an arbitrary value using <function>setval()</function>.
=======
<!--
       <literal>USAGE</> permission allows more fine-grained
       control over sequence access.  Granting <literal>USAGE</>
       allows users to increment
       a sequence, but prevents them from setting the sequence to
       an arbitrary value using <function>setval()</>.
-->
<literal>USAGE</literal>権限により、シーケンスに対するアクセス制御を細かく制御できるようになります。
<literal>USAGE</literal> を付与することで、シーケンスを増やすことはできるが、<function>setval()</function>を使用して任意の値に設定することはできないユーザを作成することができます。
>>>>>>> doc_ja_10_premerge
      </para>
     </listitem>

     <listitem>
      <para>
<<<<<<< HEAD
       Add <link linkend="sql-altertable"><literal>ALTER TABLE
       [ NO ] INHERIT</literal></link> (Greg Stark)
=======
<!--
       Add <link linkend="SQL-ALTERTABLE"><literal>ALTER TABLE
       [ NO ] INHERIT</></link> (Greg Stark)
-->
<link linkend="SQL-ALTERTABLE"><literal>ALTER TABLE [ NO ] INHERIT</literal></link>を追加しました。(Greg Stark)
>>>>>>> doc_ja_10_premerge
      </para>

      <para>
<!--
       This allows inheritance to be adjusted dynamically, rather than
       just at table creation and destruction.  This is very valuable
       when using inheritance to implement table partitioning.
-->
これにより、テーブルの生成と削除時だけではなく、動的に継承を調整できるようになります。
テーブル分割を行うために継承を使用する時に非常に有用です。
      </para>
     </listitem>

     <listitem>
      <para>
<<<<<<< HEAD
       Allow <link linkend="sql-comment">comments</link> on global
=======
<!--
       Allow <link linkend="SQL-COMMENT">comments</link> on global
>>>>>>> doc_ja_10_premerge
       objects to be stored globally (Kris Jurka)
-->
グローバルオブジェクトに対する<link linkend="SQL-COMMENT">コメント</link>をグローバルに保管することができます。 (Kris Jurka)
      </para>

      <para>
<!--
       Previously, comments attached to databases were stored in individual
       databases, making them ineffective, and there was no provision
       at all for comments on roles or tablespaces.  This change adds a new
       shared catalog <link
       linkend="catalog-pg-shdescription"><structname>pg_shdescription</structname></link>
       and stores comments on databases, roles, and tablespaces therein.
-->
これまでは、データベースに対するコメントは個々のデータベースに格納され、無効なものとしていました。
また、ロールやテーブル空間に対するコメントを付与することはまったくできませんでした。
この変更では、新しい共有カタログ<link linkend="catalog-pg-shdescription"><structname>pg_shdescription</structname></link>を追加し、そこにデータベース、ロール、テーブル空間に対するコメントを保管します。
      </para>
     </listitem>

    </itemizedlist>

   </sect3>

   <sect3>
<!--
    <title>Utility Command Changes</title>
-->
    <title>ユーティリティコマンドの変更点</title>
    <itemizedlist>

     <listitem>
      <para>
<!--
       Add option to allow indexes to be created without blocking
       concurrent writes to the table (Greg Stark, Tom)
-->
テーブルへの同時書き込みをブロックせずにインデックスを作成できるオプションを追加しました。(Greg Stark, Tom)
      </para>

      <para>
<<<<<<< HEAD
       The new syntax is <link linkend="sql-createindex"><command>CREATE
       INDEX CONCURRENTLY</command></link>.  The default behavior is
=======
<!--
       The new syntax is <link linkend="SQL-CREATEINDEX"><command>CREATE
       INDEX CONCURRENTLY</></link>.  The default behavior is
>>>>>>> doc_ja_10_premerge
       still to block table modification while an index is being
       created.
-->
新しい構文は<link linkend="SQL-CREATEINDEX"><command>CREATE
        INDEX CONCURRENTLY</command></link>です。
デフォルトでは、まだインデックス作成中のテーブルの変更はブロックされます。
      </para>
     </listitem>

     <listitem>
      <para>
<!--
       Provide <link linkend="functions-advisory-locks">advisory
       locking</link> functionality (Abhijit Menon-Sen, Tom)
-->
<link linkend="functions-advisory-locks">勧告的ロック</link>機能を提供します。(Abhijit Menon-Sen, Tom)
      </para>

      <para>
<!--
       This is a new locking API designed to replace what used to be
       in /contrib/userlock.  The userlock code is now on pgfoundry.
-->
これは、/contrib/userlockで使用されていたものを置き換えるために設計された、新しいロック処理APIです。
userlockのコードはpgfoundryに移行しました。
      </para>
     </listitem>

     <listitem>
      <para>
<<<<<<< HEAD
       Allow <link linkend="sql-copy"><command>COPY</command></link> to
       dump a <command>SELECT</command> query (Zoltan Boszormenyi, Karel
=======
<!--
       Allow <link linkend="SQL-COPY"><command>COPY</></link> to
       dump a <command>SELECT</> query (Zoltan Boszormenyi, Karel
>>>>>>> doc_ja_10_premerge
       Zak)
-->
<link linkend="SQL-COPY"><command>COPY</command></link>が<command>SELECT</command>問い合わせをダンプできるようになりました。(Zoltan Boszormenyi, Karel Zak)
      </para>

      <para>
<<<<<<< HEAD
       This allows <command>COPY</command> to dump arbitrary <acronym>SQL</acronym>
       queries. The syntax is <literal>COPY (SELECT ...) TO</literal>.
=======
<!--
       This allows <command>COPY</> to dump arbitrary <acronym>SQL</>
       queries. The syntax is <literal>COPY (SELECT ...) TO</>.
-->
これにより<command>COPY</command>は任意の<acronym>SQL</acronym>問い合わせをダンプできるようになりました。
構文は<literal>COPY (SELECT ...) TO</literal>です。
>>>>>>> doc_ja_10_premerge
      </para>
     </listitem>

     <listitem>
      <para>
<<<<<<< HEAD
       Make the <link linkend="sql-copy"><command>COPY</command></link>
=======
<!--
       Make the <link linkend="SQL-COPY"><command>COPY</></link>
>>>>>>> doc_ja_10_premerge
       command return a command tag that includes the number of
       rows copied (Volkan YAZICI)
-->
<link linkend="SQL-COPY"><command>COPY</command></link>がコピーされた行数を含むコマンドタグを返すようになりました。(Volkan YAZICI)
      </para>
     </listitem>

     <listitem>
      <para>
<<<<<<< HEAD
       Allow <link linkend="sql-vacuum"><command>VACUUM</command></link>
       to expire rows without being affected by other concurrent
       <command>VACUUM</command> operations (Hannu Krossing, Alvaro, Tom)
=======
<!--
       Allow <link linkend="SQL-VACUUM"><command>VACUUM</></link>
       to expire rows without being affected by other concurrent
       <command>VACUUM</> operations (Hannu Krossing, Alvaro, Tom)
-->
<link linkend="SQL-VACUUM"><command>VACUUM</command></link>が同時実行中の他の<command>VACUUM</command>操作の影響を受けることなく行をエキスパイアできるようになりました。(Hannu Krossing, Alvaro, Tom)
>>>>>>> doc_ja_10_premerge
      </para>
     </listitem>

     <listitem>
      <para>
<<<<<<< HEAD
       Make <link linkend="app-initdb"><application>initdb</application></link>
       detect the operating system locale and set the default
       <varname>DateStyle</varname> accordingly (Peter)
=======
<!--
       Make <link linkend="APP-INITDB"><application>initdb</></link>
       detect the operating system locale and set the default
       <varname>DateStyle</> accordingly (Peter)
-->
<link linkend="APP-INITDB"><application>initdb</application></link>がオペレーティングシステムのロケールを検出し、それに合う<varname>DateStyle</varname>のデフォルトを設定するようになりました。(Peter)
>>>>>>> doc_ja_10_premerge
      </para>

      <para>
<!--
       This makes it more likely that the installed
       <filename>postgresql.conf</filename> <varname>DateStyle</varname> value will
       be as desired.
-->
これにより、インストールされる<filename>postgresql.conf</filename>内の<varname>DateStyle</varname>がより好ましいものになるようになりました。
      </para>
     </listitem>

     <listitem>
      <para>
<<<<<<< HEAD
       Reduce number of progress messages displayed by <application>initdb</application> (Tom)
=======
<!--
       Reduce number of progress messages displayed by <application>initdb</> (Tom)
-->
<application>initdb</application>が表示する進行メッセージ数を減らしました。(Tom)
>>>>>>> doc_ja_10_premerge
      </para>
     </listitem>

    </itemizedlist>

   </sect3>

   <sect3>
<!--
    <title>Date/Time Changes</title>
-->
    <title>日付時刻に関する変更点</title>
    <itemizedlist>

     <listitem>
      <para>
<!--
       Allow full timezone names in <link
<<<<<<< HEAD
       linkend="datatype-datetime"><type>timestamp</type></link> input values
=======
       linkend="datatype-datetime"><type>timestamp</></link> input values
-->
<link linkend="datatype-datetime"><type>timestamp</type></link>の入力値に完全な時間帯名称を指定できます。
>>>>>>> doc_ja_10_premerge
       (Joachim Wieland)
      </para>

      <para>
<!--
       For example, <literal>'2006-05-24 21:11
<<<<<<< HEAD
       America/New_York'::timestamptz</literal>.
=======
       America/New_York'::timestamptz</>.
-->
例えば、<literal>'2006-05-24 21:11 America/New_York'::timestamptz</literal>です。
>>>>>>> doc_ja_10_premerge
      </para>
     </listitem>

     <listitem>
      <para>
<!--
       Support configurable timezone abbreviations (Joachim Wieland)
-->
設定変更可能な時間帯省略形をサポートします。(Joachim Wieland)
      </para>

      <para>
<!--
       A desired set of timezone abbreviations can be chosen via the
       configuration parameter <link
<<<<<<< HEAD
       linkend="guc-timezone-abbreviations"><varname>timezone_abbreviations</varname></link>.
=======
       linkend="guc-timezone-abbreviations"><varname>timezone_abbreviations</></link>.
-->
使用したい時間帯省略形の集合を<link linkend="guc-timezone-abbreviations"><varname>timezone_abbreviations</varname></link>設定パラメータで選択できます。
>>>>>>> doc_ja_10_premerge
      </para>
     </listitem>

     <listitem>
      <para>
<!--
       Add <link
       linkend="view-pg-timezone-abbrevs"><varname>pg_timezone_abbrevs</varname></link>
       and <link
       linkend="view-pg-timezone-names"><varname>pg_timezone_names</varname></link>
       views to show supported timezones (Magnus Hagander)
-->
サポートされる時間帯を示す、<link linkend="view-pg-timezone-abbrevs"><varname>pg_timezone_abbrevs</varname></link>および<link linkend="view-pg-timezone-names"><varname>pg_timezone_names</varname></link>ビューを追加しました。(Magnus Hagander)
      </para>
     </listitem>

     <listitem>
      <para>
<!--
       Add <link
       linkend="functions-datetime-table"><function>clock_timestamp()</function></link>,
       <link
       linkend="functions-datetime-table"><function>statement_timestamp()</function></link>,
       and <link
<<<<<<< HEAD
       linkend="functions-datetime-table"><function>transaction_timestamp()</function></link>
=======
       linkend="functions-datetime-table"><function>transaction_timestamp()</></link>
-->
<link linkend="functions-datetime-table"><function>clock_timestamp()</function></link>、<link linkend="functions-datetime-table"><function>statement_timestamp()</function></link>、<link linkend="functions-datetime-table"><function>transaction_timestamp()</function></link>を追加しました。
>>>>>>> doc_ja_10_premerge
       (Bruce)
      </para>

      <para>
<<<<<<< HEAD
       <function>clock_timestamp()</function> is the current wall-clock time,
       <function>statement_timestamp()</function> is the time the current
       statement arrived at the server, and
       <function>transaction_timestamp()</function> is an alias for
       <function>now()</function>.
=======
<!--
       <function>clock_timestamp()</> is the current wall-clock time,
       <function>statement_timestamp()</> is the time the current
       statement arrived at the server, and
       <function>transaction_timestamp()</> is an alias for
       <function>now()</>.
-->
<function>clock_timestamp()</function>は実際の現在時刻を、<function>statement_timestamp()</function>は現在の問い合わせがサーバに届いた時刻を表します。
<function>transaction_timestamp()</function>は<function>now()</function>の別名です。
>>>>>>> doc_ja_10_premerge
      </para>
     </listitem>

     <listitem>
      <para>
<!--
       Allow <link
       linkend="functions-formatting"><function>to_char()</function></link>
       to print localized month and day names (Euler Taveira de
       Oliveira)
-->
<link linkend="functions-formatting"><function>to_char()</function></link>が翻訳された月日名称を表すことができるようになりました。(Euler Taveira de Oliveira)
      </para>
     </listitem>

     <listitem>
      <para>
<!--
       Allow <link
       linkend="functions-formatting"><function>to_char(time)</function></link>
       and <link
<<<<<<< HEAD
       linkend="functions-formatting"><function>to_char(interval)</function></link>
       to output <acronym>AM</acronym>/<acronym>PM</acronym> specifications
=======
       linkend="functions-formatting"><function>to_char(interval)</></link>
       to output <acronym>AM</>/<acronym>PM</> specifications
-->
<link linkend="functions-formatting"><function>to_char(time)</function></link>および<link linkend="functions-formatting"><function>to_char(interval)</function></link>で<acronym>AM</acronym>/<acronym>PM</acronym>指定の出力ができるようになりました。
>>>>>>> doc_ja_10_premerge
       (Bruce)
      </para>

      <para>
<!--
       Intervals and times are treated as 24-hour periods, e.g.
<<<<<<< HEAD
       <literal>25 hours</literal> is considered <acronym>AM</acronym>.
=======
       <literal>25 hours</> is considered <acronym>AM</>.
-->
時間間隔および時間が24時間周期で扱われます。
例えば、<literal>25 hours</literal>は<acronym>AM</acronym>とみなされます。
>>>>>>> doc_ja_10_premerge
      </para>
     </listitem>

     <listitem>
      <para>
<!--
       Add new function <link
       linkend="functions-datetime-table"><function>justify_interval()</function></link>
       to adjust interval units (Mark Dilger)
-->
時間間隔の単位を調整する<link linkend="functions-datetime-table"><function>justify_interval()</function></link>関数を追加しました。(Mark Dilger)
      </para>
     </listitem>

     <listitem>
      <para>
<!--
       Allow timezone offsets up to 14:59 away from GMT
-->
GMTから14:59離れたオフセットを持つ時間帯を持つことができます。
      </para>

      <para>
<!--
       Kiribati uses GMT+14, so we'd better accept that.
-->
キリバス共和国ではGMT+14を使用します。
これを受け付けられるようにしました。
      </para>
     </listitem>

     <listitem>
      <para>
<!--
       Interval computation improvements (Michael Glaesemann, Bruce)
-->
時間間隔計算を改良しました。(Michael Glaesemann, Bruce)
      </para>
     </listitem>

    </itemizedlist>

   </sect3>

   <sect3>
<!--
    <title>Other Data Type and Function Changes</title>
-->
    <title>その他、データ型および関数の変更</title>
    <itemizedlist>

     <listitem>
      <para>
<<<<<<< HEAD
       Allow arrays to contain <literal>NULL</literal> elements (Tom)
=======
<!--
       Allow arrays to contain <literal>NULL</> elements (Tom)
-->
配列が<literal>NULL</literal>要素を含むことができます。(Tom)
>>>>>>> doc_ja_10_premerge
      </para>
     </listitem>

     <listitem>
      <para>
<!--
       Allow assignment to array elements not contiguous with the existing
       entries (Tom)
-->
連続して項目が存在しない配列要素への代入が可能です。(Tom)
      </para>

      <para>
<!--
       The intervening array positions will be filled with nulls.
       This is per SQL standard.
-->
空いている配列位置はNULLで埋められます。
これは標準SQLに従います。
      </para>
     </listitem>

     <listitem>
      <para>
<!--
       New built-in <link linkend="functions-array">operators</link>
<<<<<<< HEAD
       for array-subset comparisons (<literal>@&gt;</literal>,
       <literal>&lt;@</literal>, <literal>&amp;&amp;</literal>) (Teodor, Tom)
=======
       for array-subset comparisons (<literal>@&gt;</>,
       <literal>&lt;@</>, <literal>&amp;&amp;</>) (Teodor, Tom)
-->
部分配列の比較に関して、新規の組み込み<link linkend="functions-array">演算子</link>（<literal>@&gt;</literal>、<literal>&lt;@</literal>、<literal>&amp;&amp;</literal>）を追加しました。 (Teodor, Tom)
>>>>>>> doc_ja_10_premerge
      </para>

      <para>
<!--
       These operators can be indexed for many data types using
<<<<<<< HEAD
       <acronym>GiST</acronym> or <acronym>GIN</acronym> indexes.
=======
       <acronym>GiST</> or <acronym>GIN</> indexes.
-->
これらの演算子は任意のデータ型に対して、<acronym>GiST</acronym>または <acronym>GIN</acronym>インデックスを使用してインデックス付けできます。
>>>>>>> doc_ja_10_premerge
      </para>
     </listitem>

     <listitem>
      <para>
<!--
       Add convenient arithmetic <link
       linkend="cidr-inet-operators-table">operations</link> on
       <type>INET</type>/<type>CIDR</type> values (Stephen R. van den
       Berg)
-->
<type>INET</type>/<type>CIDR</type>値に対して便利な算術<link linkend="cidr-inet-operators-table">操作</link>を追加しました。
      </para>

      <para>
<<<<<<< HEAD
       The new operators are <literal>&amp;</literal> (and), <literal>|</literal>
       (or), <literal>~</literal> (not), <type>inet</type> <literal>+</literal> <type>int8</type>,
       <type>inet</type> <literal>-</literal> <type>int8</type>, and
       <type>inet</type> <literal>-</literal> <type>inet</type>.
=======
<!--
       The new operators are <literal>&amp;</> (and), <literal>|</>
       (or), <literal>~</> (not), <type>inet</> <literal>+</> <type>int8</>,
       <type>inet</> <literal>-</> <type>int8</>, and
       <type>inet</> <literal>-</> <type>inet</>.
-->
新しい演算子は<literal>&</literal> (論理積)、<literal>|</literal>(論理和)、<literal>~</literal> (否定)、<type>inet</type> <literal>+</literal> <type>int8</type>、<type>inet</type> <literal>-</literal> <type>int8</type>、<type>inet</type> <literal>-</literal> <type>inet</type>です。
>>>>>>> doc_ja_10_premerge
      </para>
     </listitem>

     <listitem>
      <para>
<!--
       Add new <link
       linkend="functions-aggregate-statistics-table">aggregate functions</link>
       from SQL:2003 (Neil)
-->
SQL:2003の<link linkend="functions-aggregate-statistics-table">集約関数</link>を新規に追加しました。
      </para>

      <para>
<<<<<<< HEAD
       The new functions are <function>var_pop()</function>,
       <function>var_samp()</function>, <function>stddev_pop()</function>, and
       <function>stddev_samp()</function>.  <function>var_samp()</function> and
       <function>stddev_samp()</function> are merely renamings of the
       existing aggregates <function>variance()</function> and
       <function>stddev()</function>.  The latter names remain available
=======
<!--
       The new functions are <function>var_pop()</>,
       <function>var_samp()</>, <function>stddev_pop()</>, and
       <function>stddev_samp()</>.  <function>var_samp()</> and
       <function>stddev_samp()</> are merely renamings of the
       existing aggregates <function>variance()</> and
       <function>stddev()</>.  The latter names remain available
>>>>>>> doc_ja_10_premerge
       for backward compatibility.
-->
新しい関数は、<function>var_pop()</function>、<function>var_samp()</function>、<function>stddev_pop()</function>、<function>stddev_samp()</function>です。
<function>var_samp()</function>および<function>stddev_samp()</function>は、既存の集約関数<function>variance()</function>と<function>stddev()</function>の名前を変更したものに過ぎません。
後方互換のために、後者の名前も残っています。
      </para>
     </listitem>

     <listitem>
      <para>
<!--
       Add SQL:2003 statistical <link
       linkend="functions-aggregate-statistics-table">aggregates</link>
-->
SQL:2003の統計処理<link linkend="functions-aggregate-statistics-table">集約</link>を追加しました。
       (Sergey Koposov)
      </para>

      <para>
<<<<<<< HEAD
       New functions:  <function>regr_intercept()</function>,
       <function>regr_slope()</function>, <function>regr_r2()</function>,
       <function>corr()</function>, <function>covar_samp()</function>,
       <function>covar_pop()</function>, <function>regr_avgx()</function>,
       <function>regr_avgy()</function>, <function>regr_sxy()</function>,
       <function>regr_sxx()</function>, <function>regr_syy()</function>,
       <function>regr_count()</function>.
=======
<!--
       New functions:  <function>regr_intercept()</>,
       <function>regr_slope()</>, <function>regr_r2()</>,
       <function>corr()</>, <function>covar_samp()</>,
       <function>covar_pop()</>, <function>regr_avgx()</>,
       <function>regr_avgy()</>, <function>regr_sxy()</>,
       <function>regr_sxx()</>, <function>regr_syy()</>,
       <function>regr_count()</>.
-->
新しい関数は、<function>regr_intercept()</function>、<function>regr_slope()</function>、<function>regr_r2()</function>、<function>corr()</function>、<function>covar_samp()</function>、<function>covar_pop()</function>、<function>regr_avgx()</function>、<function>regr_avgy()</function>、<function>regr_sxy()</function>、<function>regr_sxx()</function>、<function>regr_syy()</function>、<function>regr_count()</function>です。
>>>>>>> doc_ja_10_premerge
      </para>
     </listitem>

     <listitem>
      <para>
<<<<<<< HEAD
       Allow <link linkend="sql-createdomain">domains</link> to be
=======
<!--
       Allow <link linkend="SQL-CREATEDOMAIN">domains</link> to be
>>>>>>> doc_ja_10_premerge
       based on other domains (Tom)
-->
他のドメインに基づいた<link linkend="SQL-CREATEDOMAIN">ドメイン</link>が可能になりました。(Tom)
      </para>
     </listitem>

     <listitem>
      <para>
<!--
       Properly enforce domain <link
       linkend="ddl-constraints"><literal>CHECK</literal></link> constraints
       everywhere (Neil, Tom)
-->
すべての所で適切にドメイン<link linkend="ddl-constraints"><literal>CHECK</literal></link>制約が適切に強制されるようになりました。(Neil, Tom)
      </para>

      <para>
<!--
       For example, the result of a user-defined function that is
       declared to return a domain type is now checked against the
       domain's constraints. This closes a significant hole in the domain
       implementation.
-->
例えば、ドメイン型を返すものと宣言されたユーザ定義関数の結果がドメインの制約に対して検査されるようになりました。
これはドメイン実装における重大な抜け穴をなくしました。
      </para>
     </listitem>

     <listitem>
      <para>
<!--
       Fix problems with dumping renamed <link
<<<<<<< HEAD
       linkend="datatype-serial"><type>SERIAL</type></link> columns
=======
       linkend="datatype-serial"><type>SERIAL</></link> columns
-->
名前が変更された<link linkend="datatype-serial"><type>SERIAL</type></link>列のダンプ処理の問題を解消しました。
>>>>>>> doc_ja_10_premerge
       (Tom)
      </para>

      <para>
<<<<<<< HEAD
       The fix is to dump a <type>SERIAL</type> column by explicitly
       specifying its <literal>DEFAULT</literal> and sequence elements,
       and reconstructing the <type>SERIAL</type> column on reload
       using a new <link linkend="sql-altersequence"><command>ALTER
       SEQUENCE OWNED BY</command></link> command.  This also allows
       dropping a <type>SERIAL</type> column specification.
=======
<!--
       The fix is to dump a <type>SERIAL</> column by explicitly
       specifying its <literal>DEFAULT</> and sequence elements,
       and reconstructing the <type>SERIAL</> column on reload
       using a new <link linkend="SQL-ALTERSEQUENCE"><command>ALTER
       SEQUENCE OWNED BY</></link> command.  This also allows
       dropping a <type>SERIAL</> column specification.
-->
この修正は、
明示的に<literal>DEFAULT</literal>が指定された<type>SERIAL</type>列と、そのシーケンス要素をダンプし、新しい<link linkend="SQL-ALTERSEQUENCE"><command>ALTER
       SEQUENCE OWNED BY</command></link>コマンドを使用してリロード時に<type>SERIAL</type>列を再構成するためのものです。
また、これにより<type>SERIAL</type>列の仕様が削除できるようになりました。
>>>>>>> doc_ja_10_premerge
      </para>
     </listitem>

     <listitem>
      <para>
<!--
       Add a server-side sleep function <link
<<<<<<< HEAD
       linkend="functions-datetime-delay"><function>pg_sleep()</function></link>
=======
       linkend="functions-datetime-delay"><function>pg_sleep()</></link>
-->
サーバサイドのスリープ関数<link linkend="functions-datetime-delay"><function>pg_sleep()</function></link>を追加しました。
>>>>>>> doc_ja_10_premerge
       (Joachim Wieland)
      </para>
     </listitem>

     <listitem>
      <para>
<!--
       Add all comparison operators for the <link
       linkend="datatype-oid"><type>tid</type></link> (tuple id) data
       type (Mark Kirkwood, Greg Stark, Tom)
-->
<link
       linkend="datatype-oid"><type>tid</type></link> (タプルID)データ型の比較演算子をすべて追加しました。(Mark Kirkwood, Greg Stark, Tom)
      </para>
     </listitem>

    </itemizedlist>

   </sect3>

   <sect3>
<!--
    <title>PL/pgSQL Server-Side Language Changes</title>
-->
    <title>PL/pgSQLサーバサイド言語の変更点</title>
    <itemizedlist>

     <listitem>
      <para>
<<<<<<< HEAD
       Add <literal>TG_table_name</literal> and <literal>TG_table_schema</literal> to
=======
<!--
       Add <literal>TG_table_name</> and <literal>TG_table_schema</> to
>>>>>>> doc_ja_10_premerge
       trigger parameters (Andrew)
-->
<literal>TG_table_name</literal>および<literal>TG_table_schema</literal>をトリガパラメータに追加しました。(Andrew)
      </para>

      <para>
<<<<<<< HEAD
       <literal>TG_relname</literal> is now deprecated.  Comparable
=======
<!--
       <literal>TG_relname</> is now deprecated.  Comparable
>>>>>>> doc_ja_10_premerge
       changes have been made in the trigger parameters for the other
       PLs as well.
-->
<literal>TG_relname</literal>は廃止予定です。
トリガパラメータにおける同様の変更が他のPLでもなされています。
      </para>
     </listitem>

     <listitem>
      <para>
<<<<<<< HEAD
       Allow <literal>FOR</literal> statements to return values to scalars
=======
<!--
       Allow <literal>FOR</> statements to return values to scalars
>>>>>>> doc_ja_10_premerge
       as well as records and row types (Pavel Stehule)
-->
<literal>FOR</literal>文を使用して、レコード型や行型同様にスカラ値を返すことが可能です。(Pavel Stehule)
      </para>
     </listitem>

     <listitem>
      <para>
<<<<<<< HEAD
       Add a <literal>BY</literal> clause to the <literal>FOR</literal> loop,
=======
<!--
       Add a <literal>BY</> clause to the <literal>FOR</> loop,
>>>>>>> doc_ja_10_premerge
       to control the iteration increment (Jaime Casanova)
-->
繰り返しの増分を制御できるように<literal>FOR</literal>ループに<literal>BY</literal>句を追加しました。(Jaime Casanova)
      </para>
     </listitem>

     <listitem>
      <para>
<<<<<<< HEAD
       Add <literal>STRICT</literal> to <link
       linkend="plpgsql-statements-sql-onerow"><command>SELECT
       INTO</command></link> (Matt Miller)
      </para>

      <para>
       <literal>STRICT</literal> mode throws an exception if more or less
       than one row is returned by the <command>SELECT</command>, for
       <productname>Oracle PL/SQL</productname> compatibility.
=======
<!--
       Add <literal>STRICT</> to <link
       linkend="plpgsql-statements-sql-onerow"><command>SELECT
       INTO</></link> (Matt Miller)
-->
<literal>STRICT</literal>を<link
       linkend="plpgsql-statements-sql-onerow"><command>SELECT
       INTO</command></link>に追加しました。 (Matt Miller)
      </para>

      <para>
<!--
       <literal>STRICT</> mode throws an exception if more or less
       than one row is returned by the <command>SELECT</>, for
       <productname>Oracle PL/SQL</> compatibility.
-->
<productname>Oracle PL/SQL</productname>との互換性のために、<literal>STRICT</literal>で、 <command>SELECT</command>によって返される行が正確に1行でない場合に例外を返すようになりました。
>>>>>>> doc_ja_10_premerge
      </para>
     </listitem>

    </itemizedlist>

   </sect3>

   <sect3>
<!--
    <title>PL/Perl Server-Side Language Changes</title>
-->
    <title>PL/Perlサーバサイド言語における変更点</title>
    <itemizedlist>

     <listitem>
      <para>
<<<<<<< HEAD
       Add <literal>table_name</literal> and <literal>table_schema</literal> to
=======
<!--
       Add <literal>table_name</> and <literal>table_schema</> to
>>>>>>> doc_ja_10_premerge
       trigger parameters (Adam Sj&oslash;gren)
-->
<literal>table_name</literal>および<literal>table_schema</literal>をトリガパラメータに追加しました。(Adam Sj&oslash;gren)
      </para>
     </listitem>

     <listitem>
      <para>
<!--
       Add prepared queries (Dmitry Karasik)
-->
準備済み問い合わせを追加しました。(Dmitry Karasik)
      </para>
     </listitem>

     <listitem>
      <para>
<<<<<<< HEAD
       Make <literal>$_TD</literal> trigger data a global variable (Andrew)
=======
<!--
       Make <literal>$_TD</> trigger data a global variable (Andrew)
-->
<literal>$_TD</literal>トリガデータをグローバル変数にしました。(Andrew)
>>>>>>> doc_ja_10_premerge
      </para>

      <para>
<!--
       Previously, it was lexical, which caused unexpected sharing
       violations.
-->
以前はレキシカル変数でした。このため想定外の共有違反が起こりました。
      </para>
     </listitem>

     <listitem>
      <para>
<!--
       Run PL/Perl and PL/PerlU in separate interpreters, for security
       reasons (Andrew)
-->
セキュリティ対策として、PL/PerlとPL/PerlUが別のインタプリタで動作するようになりました。(Andrew)
      </para>
      <para>
<!--
       In consequence, they can no longer share data nor loaded modules.
       Also, if Perl has not been compiled with the requisite flags to
       allow multiple interpreters, only one of these languages can be used
       in any given backend process.
-->
このため、共有データやロード済みモジュールを両者で共有することができません。
また、Perlが複数のインタプリタが可能となるように必要なフラグをつけてコンパイルされていない場合、2つの内1つしかあるバックエンドプロセスで使用することができません。
      </para>
     </listitem>

    </itemizedlist>

   </sect3>

   <sect3>
<!--
    <title>PL/Python Server-Side Language Changes</title>
-->
    <title>PL/Pythonサーバサイド言語における変更点</title>
    <itemizedlist>

     <listitem>
      <para>
<!--
       Named parameters are passed as ordinary variables, as well as in the
<<<<<<< HEAD
       <literal>args[]</literal> array (Sven Suursoho)
=======
       <literal>args[]</> array (Sven Suursoho)
-->
名前付きパラメータが、<literal>args[]</literal>配列同様、普通の変数として渡されます。(Sven Suursoho)
>>>>>>> doc_ja_10_premerge
      </para>
     </listitem>

     <listitem>
      <para>
<<<<<<< HEAD
       Add <literal>table_name</literal> and <literal>table_schema</literal> to
=======
<!--
       Add <literal>table_name</> and <literal>table_schema</> to
>>>>>>> doc_ja_10_premerge
       trigger parameters (Andrew)
-->
<literal>table_name</literal>および<literal>table_schema</literal>をトリガパラメータに追加しました。(Andrew)
      </para>
     </listitem>

     <listitem>
      <para>
<!--
       Allow returning of composite types and result sets (Sven Suursoho)
-->
複合型および結果セットを返すことが可能です。(Sven Suursoho)
      </para>
     </listitem>

     <listitem>
      <para>
<<<<<<< HEAD
       Return result-set as <literal>list</literal>, <literal>iterator</literal>,
       or <literal>generator </literal>(Sven Suursoho)
=======
<!--
       Return result-set as <literal>list</>, <literal>iterator</>,
       or <literal>generator </>(Sven Suursoho)
-->
<literal>list</literal>、<literal>iterator</literal>、<literal>generator </literal>として結果セットを返します。(Sven Suursoho)
>>>>>>> doc_ja_10_premerge
      </para>
     </listitem>

     <listitem>
      <para>
<<<<<<< HEAD
       Allow functions to return <literal>void</literal> (Neil)
=======
<!--
       Allow functions to return <literal>void</> (Neil)
-->
関数は<literal>void</literal>を返すことができます。(Neil)
>>>>>>> doc_ja_10_premerge
      </para>
     </listitem>

     <listitem>
      <para>
<!--
       Python 2.5 is now supported (Tom)
-->
Python 2.5をサポートしました。(Tom)
      </para>
     </listitem>

    </itemizedlist>

   </sect3>

   <sect3>
<<<<<<< HEAD
    <title><link linkend="app-psql"><application>psql</application></link> Changes</title>
=======
<!--
    <title><link linkend="APP-PSQL"><application>psql</></link> Changes</title>
-->
    <title><link linkend="APP-PSQL"><application>psql</application></link>における変更点</title>
>>>>>>> doc_ja_10_premerge
    <itemizedlist>

     <listitem>
      <para>
<<<<<<< HEAD
       Add new command <literal>\password</literal> for changing role
=======
<!--
       Add new command <literal>\password</> for changing role
>>>>>>> doc_ja_10_premerge
       password with client-side password encryption (Peter)
-->
クライアント側のパスワード暗号化を使用してロールのパスワードを変更する<literal>\password</literal>コマンドを新規に追加しました。(Peter)
      </para>
     </listitem>

     <listitem>
      <para>
<<<<<<< HEAD
       Allow <literal>\c</literal> to connect to a new host and port
=======
<!--
       Allow <literal>\c</> to connect to a new host and port
>>>>>>> doc_ja_10_premerge
       number (David, Volkan YAZICI)
-->
<literal>\c</literal>により、新規にホスト、ポート番号を指定して接続することができます。(David, Volkan YAZICI)
      </para>
     </listitem>

     <listitem>
      <para>
<<<<<<< HEAD
       Add tablespace display to <literal>\l+</literal> (Philip Yarra)
=======
<!--
       Add tablespace display to <literal>\l+</> (Philip Yarra)
-->
テーブル空間の表示をする<literal>\l+</literal>を追加しました。 (Philip Yarra)
>>>>>>> doc_ja_10_premerge
      </para>
     </listitem>

     <listitem>
      <para>
<<<<<<< HEAD
       Improve <literal>\df</literal> slash command to include the argument
       names and modes (<literal>OUT</literal> or <literal>INOUT</literal>) of
=======
<!--
       Improve <literal>\df</> slash command to include the argument
       names and modes (<literal>OUT</> or <literal>INOUT</>) of
>>>>>>> doc_ja_10_premerge
       the function (David Fetter)
-->
関数の引数名とモード（<literal>OUT</literal>または<literal>INOUT</literal>）を含めるように<literal>\df</literal>スラッシュコマンドを改良しました。(David Fetter)
      </para>
     </listitem>

     <listitem>
      <para>
<<<<<<< HEAD
       Support binary <command>COPY</command> (Andreas Pflug)
=======
<!--
       Support binary <command>COPY</> (Andreas Pflug)
-->
バイナリ<command>COPY</command>をサポートしました。(Andreas Pflug)
>>>>>>> doc_ja_10_premerge
      </para>
     </listitem>

     <listitem>
      <para>
<!--
       Add option to run the entire session in a single transaction
       (Simon)
-->
単一トランザクション内でセッション全体を実行させるオプションを追加しました。(Simon)
      </para>

      <para>
<<<<<<< HEAD
       Use option <literal>-1</literal> or <literal>--single-transaction</literal>.
=======
<!--
       Use option <literal>-1</> or <literal>&#045;&#045;single-transaction</>.
-->
<literal>-1</literal>または<literal>--single-transaction</literal>を使用してください。
>>>>>>> doc_ja_10_premerge
      </para>
     </listitem>

     <listitem>
      <para>
<<<<<<< HEAD
       Support for automatically retrieving <command>SELECT</command>
=======
<!--
       Support for automatically retrieving <command>SELECT</>
>>>>>>> doc_ja_10_premerge
       results in batches using a cursor (Chris Mair)
-->
カーソルを使用したバッチ内で自動的に<command>SELECT</command>の結果を取り出せるようにしました。(Chris Mair)
      </para>

      <para>
<!--
       This is enabled using <command>\set FETCH_COUNT
       <replaceable>n</replaceable></command>. This
       feature allows large result sets to be retrieved in
       <application>psql</application> without attempting to buffer the entire
       result set in memory.
-->
これは<command>\set FETCH_COUNT
      <replaceable>n</replaceable></command>を使用して実現します。
この機能により、メモリ内に結果セット全体を保存することなく、大規模な結果セットを<application>psql</application>内で取り出すことができます。
      </para>
     </listitem>

     <listitem>
      <para>
<!--
       Make multi-line values align in the proper column
-->
複数行に渡る値を適切な列数で整列します。
       (Martijn van Oosterhout)
      </para>

      <para>
<!--
       Field values containing newlines are now displayed in a more
       readable fashion.
-->
改行を含むフィールド値がより読みやすく表示されます。
      </para>
     </listitem>

     <listitem>
      <para>
<!--
       Save multi-line statements as a single entry, rather than
       one line at a time (Sergey E. Koposov)
-->
複数行に渡る文を、1行ごとではなく、単一の文と同様に保存します。(Sergey E. Koposov)
      </para>

      <para>
<!--
       This makes up-arrow recall of queries easier.  (This is
       not available on Windows, because that platform uses the native
       command-line editing present in the operating system.)
-->
カーソル行による問い合わせの再呼び出しをより簡単に行うことができます。
（これはWindowsでは不可能です。
このプラットフォームでは、オペレーティングシステムに組み込まれたコマンドライン編集機能を使用しているためです。）
      </para>
     </listitem>

     <listitem>
      <para>
<!--
       Make the line counter 64-bit so it can handle files with more
       than two billion lines (David Fetter)
-->
行カウンタを64ビットにしました。
このため200億行以上のファイルを扱うことが可能です。(David Fetter)
      </para>
     </listitem>

     <listitem>
      <para>
<!--
       Report both the returned data and the command status tag
<<<<<<< HEAD
       for <command>INSERT</command>/<command>UPDATE</command>/<command>DELETE
       RETURNING</command> (Tom)
=======
       for <command>INSERT</>/<command>UPDATE</>/<command>DELETE
       RETURNING</> (Tom)
-->
<command>INSERT</command>/<command>UPDATE</command>/<command>DELETE RETURNING</command>で返されるデータとコマンドステータスタグの両方を表示します。(Tom)
>>>>>>> doc_ja_10_premerge
      </para>
     </listitem>

    </itemizedlist>

   </sect3>

   <sect3>
<<<<<<< HEAD
    <title><link linkend="app-pgdump"><application>pg_dump</application></link> Changes</title>
=======
<!--
    <title><link linkend="APP-PGDUMP"><application>pg_dump</></link> Changes</title>
-->
    <title><link linkend="APP-PGDUMP"><application>pg_dump</application></link>における変更点</title>
>>>>>>> doc_ja_10_premerge
    <itemizedlist>

     <listitem>
      <para>
<!--
       Allow complex selection of objects to be included or excluded
<<<<<<< HEAD
       by <application>pg_dump</application> (Greg Sabino Mullane)
      </para>

      <para>
       <application>pg_dump</application> now supports multiple <literal>-n</literal>
       (schema) and <literal>-t</literal> (table) options, and adds
       <literal>-N</literal> and <literal>-T</literal> options to exclude objects.
       Also, the arguments of these switches can now be wild-card expressions
       rather than single object names, for example
       <literal>-t 'foo*'</literal>, and a schema can be part of
       a <literal>-t</literal> or <literal>-T</literal> switch, for example
       <literal>-t schema1.table1</literal>.
=======
       by <application>pg_dump</> (Greg Sabino Mullane)
-->
<application>pg_dump</application>による含有または除外するオブジェクトの選択がより複雑にできるようになりました。 (Greg Sabino Mullane)
      </para>

      <para>
<!--
       <application>pg_dump</> now supports multiple <literal>-n</>
       (schema) and <literal>-t</> (table) options, and adds
       <literal>-N</> and <literal>-T</> options to exclude objects.
       Also, the arguments of these switches can now be wild-card expressions
       rather than single object names, for example
       <literal>-t 'foo*'</>, and a schema can be part of
       a <literal>-t</> or <literal>-T</> switch, for example
       <literal>-t schema1.table1</>.
-->
<application>pg_dump</application>は、複数の<literal>-n</literal>（スキーマ）と複数の <literal>-t</literal>（テーブル）オプションをサポートするようになりました。
また、オブジェクトを除外する<literal>-N</literal>および<literal>-T</literal>オプションも追加されました。
また、これらのスイッチの引数に、単一のオブジェクト名ではなく、例えば、<literal>-t 'foo*'</literal>といったワイルドカード表現を指定できるようになりました。
更に、スキーマを<literal>-t</literal>や<literal>-T</literal>スイッチの一部、例えば<literal>-t schema1.table1</literal>として指定できるようになりました。
>>>>>>> doc_ja_10_premerge
      </para>
     </listitem>

     <listitem>
      <para>
<<<<<<< HEAD
       Add <link linkend="app-pgrestore"><application>pg_restore</application></link>
       <literal>--no-data-for-failed-tables</literal> option to suppress
=======
<!--
       Add <link linkend="APP-PGRESTORE"><application>pg_restore</></link>
       <literal>&#045;&#045;no-data-for-failed-tables</> option to suppress
>>>>>>> doc_ja_10_premerge
       loading data if table creation failed (i.e., the table already
       exists) (Martin Pitt)
-->
テーブル作成に失敗（つまり、テーブルが既に存在する）した場合にデータのロードを中断する<literal>--no-data-for-failed-tables</literal>オプションを<link linkend="APP-PGRESTORE"><application>pg_restore</application></link>に追加しました。(Martin Pitt)
      </para>
     </listitem>

     <listitem>
      <para>
<<<<<<< HEAD
       Add <link linkend="app-pgrestore"><application>pg_restore</application></link>
=======
<!--
       Add <link linkend="APP-PGRESTORE"><application>pg_restore</></link>
>>>>>>> doc_ja_10_premerge
       option to run the entire session in a single transaction
-->
単一トランザクションでセッション全体を実行させるオプションを<link linkend="APP-PGRESTORE"><application>pg_restore</application></link>に追加しました。
       (Simon)
      </para>

      <para>
<<<<<<< HEAD
       Use option <literal>-1</literal> or <literal>--single-transaction</literal>.
=======
<!--
       Use option <literal>-1</> or <literal>&#045;&#045;single-transaction</>.
-->
このためには<literal>-1</literal>または<literal>--single-transaction</literal>を使用してください。
>>>>>>> doc_ja_10_premerge
      </para>
     </listitem>

    </itemizedlist>

   </sect3>

   <sect3>
<<<<<<< HEAD
    <title><link linkend="libpq"><application>libpq</application></link> Changes</title>
=======
<!--
    <title><link linkend="libpq"><application>libpq</></link> Changes</title>
-->
    <title><link linkend="libpq"><application>libpq</application></link>における変更点</title>
>>>>>>> doc_ja_10_premerge
    <itemizedlist>

     <listitem>
      <para>
<!--
       Add <link
       linkend="libpq-misc"><function>PQencryptPassword()</function></link>
       to encrypt passwords (Tom)
-->
パスワード暗号化のために<link
       linkend="libpq-misc"><function>PQencryptPassword()</function></link>を追加しました。(Tom)
      </para>

      <para>
<!--
       This allows passwords to be sent pre-encrypted for commands
<<<<<<< HEAD
       like <link linkend="sql-alterrole"><command>ALTER ROLE ...
       PASSWORD</command></link>.
=======
       like <link linkend="SQL-ALTERROLE"><command>ALTER ROLE ...
       PASSWORD</></link>.
-->
これによりパスワードを事前に暗号化して<link linkend="SQL-ALTERROLE"><command>ALTER ROLE ...
       PASSWORD</command></link>などのコマンドに渡すことができます。
>>>>>>> doc_ja_10_premerge
      </para>
     </listitem>

     <listitem>
      <para>
<!--
       Add function <link
<<<<<<< HEAD
       linkend="libpq-threading"><function>PQisthreadsafe()</function></link>
=======
       linkend="libpq-threading"><function>PQisthreadsafe()</></link>
-->
 <link
       linkend="libpq-threading"><function>PQisthreadsafe()</function></link>関数を追加しました。
>>>>>>> doc_ja_10_premerge
       (Bruce)
      </para>

      <para>
<!--
       This allows applications to query the thread-safety status
       of the library.
-->
これによりアプリケーションはライブラリのスレッド安全性を問い合わせることができます。
      </para>
     </listitem>

     <listitem>
      <para>
<!--
       Add <link
       linkend="libpq-exec-main"><function>PQdescribePrepared()</function></link>,
       <link
       linkend="libpq-exec-main"><function>PQdescribePortal()</function></link>,
       and related functions to return information about previously
       prepared statements and open cursors (Volkan YAZICI)
-->
準備済み文や開いているカーソルに関する情報を返す、<link
       linkend="libpq-exec-main"><function>PQdescribePrepared()</function></link>、<link
       linkend="libpq-exec-main"><function>PQdescribePortal()</function></link>、その他関連する関数を追加しました。(Volkan YAZICI)
      </para>
     </listitem>

     <listitem>
      <para>
<<<<<<< HEAD
       Allow <link linkend="libpq-ldap"><acronym>LDAP</acronym></link> lookups
       from <link
       linkend="libpq-pgservice"><filename>pg_service.conf</filename></link>
=======
<!--
       Allow <link linkend="libpq-ldap"><acronym>LDAP</></link> lookups
       from <link
       linkend="libpq-pgservice"><filename>pg_service.conf</></link>
-->
<link
       linkend="libpq-pgservice"><filename>pg_service.conf</filename></link>から<link linkend="libpq-ldap"><acronym>LDAP</acronym></link>検索が可能です。
>>>>>>> doc_ja_10_premerge
       (Laurenz Albe)
      </para>
     </listitem>

     <listitem>
      <para>
<!--
       Allow a hostname in <link
       linkend="libpq-pgpass"><filename>~/.pgpass</filename></link>
       to match the default socket directory (Bruce)
-->
<link
       linkend="libpq-pgpass"><filename>~/.pgpass</filename></link>内のホスト名をデフォルトのソケットディレクトリと一致できるようにしました。(Bruce)
      </para>

      <para>
<!--
       A blank hostname continues to match any Unix-socket connection,
       but this addition allows entries that are specific to one of
       several postmasters on the machine.
-->
ホスト名が空の場合、続きがUnixソケット接続と比較されます。
この追加によりマシン上の複数のサーバプロセスの1つを特定する項目を持つことができます。
      </para>
     </listitem>

    </itemizedlist>

   </sect3>

   <sect3>
<<<<<<< HEAD
    <title><link linkend="ecpg"><application>ecpg</application></link> Changes</title>
=======
<!--
    <title><link linkend="ecpg"><application>ecpg</></link> Changes</title>
-->
    <title><link linkend="ecpg"><application>ecpg</application></link>における変更点</title>
>>>>>>> doc_ja_10_premerge
    <itemizedlist>

     <listitem>
      <para>
<<<<<<< HEAD
       Allow <link linkend="sql-show"><command>SHOW</command></link> to
=======
<!--
       Allow <link linkend="SQL-SHOW"><command>SHOW</></link> to
>>>>>>> doc_ja_10_premerge
       put its result into a variable (Joachim Wieland)
-->
<link linkend="SQL-SHOW"><command>SHOW</command></link>はその結果を変数に格納することができます。(Joachim Wieland)
      </para>
     </listitem>

     <listitem>
      <para>
<<<<<<< HEAD
       Add <link linkend="sql-copy"><command>COPY TO STDOUT</command></link>
=======
<!--
       Add <link linkend="SQL-COPY"><command>COPY TO STDOUT</></link>
-->
<link linkend="SQL-COPY"><command>COPY TO STDOUT</command></link>を追加しました。
>>>>>>> doc_ja_10_premerge
       (Joachim Wieland)
      </para>
     </listitem>

     <listitem>
      <para>
<!--
       Add regression tests (Joachim Wieland, Michael)
-->
リグレッションテストを追加しました。(Joachim Wieland, Michael)
      </para>
     </listitem>

     <listitem>
      <para>
<!--
       Major source code cleanups (Joachim Wieland, Michael)
-->
ソースコードの多くを整理しました。(Joachim Wieland, Michael)
      </para>
     </listitem>

    </itemizedlist>

   </sect3>

   <sect3>
<<<<<<< HEAD
    <title><application>Windows</application> Port</title>
=======
<!--
    <title><application>Windows</> Port</title>
-->
    <title><application>Windows</application>移植</title>
>>>>>>> doc_ja_10_premerge
    <itemizedlist>

     <listitem>
      <para>
<<<<<<< HEAD
       Allow <acronym>MSVC</acronym> to compile the <productname>PostgreSQL</productname>
=======
<!--
       Allow <acronym>MSVC</> to compile the <productname>PostgreSQL</>
>>>>>>> doc_ja_10_premerge
       server (Magnus, Hiroshi Saito)
-->
<acronym>MSVC</acronym>で<productname>PostgreSQL</productname>サーバをコンパイルできるようにしました。(Magnus, Hiroshi Saito)
      </para>
     </listitem>

     <listitem>
      <para>
<<<<<<< HEAD
       Add <acronym>MSVC</acronym> support for utility commands and <link
       linkend="app-pgdump"><application>pg_dump</application></link> (Hiroshi
=======
<!--
       Add <acronym>MSVC</> support for utility commands and <link
       linkend="APP-PGDUMP"><application>pg_dump</></link> (Hiroshi
>>>>>>> doc_ja_10_premerge
       Saito)
-->
ユーティリティコマンドや<link linkend="APP-PGDUMP"><application>pg_dump</application></link>の<acronym>MSVC</acronym>サポートを追加しました。 (Hiroshi Saito)
      </para>
     </listitem>

     <listitem>
      <para>
<<<<<<< HEAD
       Add support for Windows code pages <literal>1253</literal>,
       <literal>1254</literal>, <literal>1255</literal>, and <literal>1257</literal>
=======
<!--
       Add support for Windows code pages <literal>1253</>,
       <literal>1254</>, <literal>1255</>, and <literal>1257</>
-->
Windowsコードページ<literal>1253</literal>、<literal>1254</literal>、<literal>1255</literal>、<literal>1257</literal>のサポートを追加しました。
>>>>>>> doc_ja_10_premerge
       (Kris Jurka)
      </para>
     </listitem>

     <listitem>
      <para>
<!--
       Drop privileges on startup, so that the server can be started from
       an administrative account (Magnus)
-->
サーバが管理アカウントから起動できるように起動時の権限をなくしました。 (Magnus)
      </para>
     </listitem>

     <listitem>
      <para>
<!--
       Stability fixes (Qingqing Zhou, Magnus)
-->
安定性を向上させました。(Qingqing Zhou, Magnus)
      </para>
     </listitem>

     <listitem>
      <para>
<!--
       Add native semaphore implementation (Qingqing Zhou)
-->
ネイティブなセマフォを実装しました。(Qingqing Zhou)
      </para>

      <para>
<!--
       The previous code mimicked SysV semaphores.
-->
これまでのコードはSysVセマフォをまねたものでした。
      </para>
     </listitem>

    </itemizedlist>

   </sect3>

   <sect3>
<!--
    <title>Source Code Changes</title>
-->
    <title>ソースコードにおける変更点</title>
    <itemizedlist>

     <listitem>
      <para>
<<<<<<< HEAD
       Add <link linkend="gin"><acronym>GIN</acronym></link> (Generalized
=======
<!--
       Add <link linkend="GIN"><acronym>GIN</></link> (Generalized
>>>>>>> doc_ja_10_premerge
       Inverted iNdex) index access method (Teodor, Oleg)
-->
<link linkend="GIN"><acronym>GIN</acronym></link>（汎用転置インデックス）インデックスアクセスメソッドを追加しました。(Teodor, Oleg)
      </para>
     </listitem>

     <listitem>
      <para>
<!--
       Remove R-tree indexing (Tom)
-->
R-treeインデックスを削除しました。(Tom)
      </para>

      <para>
<!--
       Rtree has been re-implemented using <link
       linkend="gist"><acronym>GiST</acronym></link>. Among other
       differences, this means that rtree indexes now have support
       for crash recovery via write-ahead logging (WAL).
-->
R-treeは<link
       linkend="GiST"><acronym>GiST</acronym></link>を使用して再実装されました。
とりわけ、これは、R-treeインデックスで先行書き込みログ（WAL）を使用したクラッシュからの復旧が可能になったことを意味します。
      </para>
     </listitem>

     <listitem>
      <para>
<!--
       Reduce libraries needlessly linked into the backend (Martijn
       van Oosterhout, Tom)
-->
バックエンドに不必要にリンクするライブラリを減らしました。(Martijn
       van Oosterhout, Tom)
      </para>
     </listitem>

     <listitem>
      <para>
<!--
       Add a configure flag to allow libedit to be preferred over
<<<<<<< HEAD
       <acronym>GNU</acronym> readline (Bruce)
=======
       <acronym>GNU</> readline (Bruce)
-->
<acronym>GNU</acronym> readlineよりもlibeditを優先させるフラグをconfigureに追加しました。(Bruce)
>>>>>>> doc_ja_10_premerge
      </para>

      <para>
<!--
       Use configure <link
<<<<<<< HEAD
       linkend="configure"><literal>--with-libedit-preferred</literal></link>.
=======
       linkend="configure"><literal>&#045;&#045;with-libedit-preferred</></link>.
-->
<link linkend="configure"><literal>--with-libedit-preferred</literal></link>を使用してconfigureを実行してください。
>>>>>>> doc_ja_10_premerge
      </para>
     </listitem>

     <listitem>
      <para>
<!--
       Allow installation into directories containing spaces
-->
空白文字を含むディレクトリにインストールできるようにしました。
       (Peter)
      </para>
     </listitem>

     <listitem>
      <para>
<!--
       Improve ability to relocate installation directories (Tom)
-->
インストールディレクトリの再割り当て機能を改良しました。(Tom)
      </para>
     </listitem>

     <listitem>
      <para>
<<<<<<< HEAD
       Add support for <productname>Solaris x86_64</productname> using the
       <productname>Solaris</productname> compiler (Pierre Girard, Theo
=======
<!--
       Add support for <productname>Solaris x86_64</> using the
       <productname>Solaris</> compiler (Pierre Girard, Theo
>>>>>>> doc_ja_10_premerge
       Schlossnagle, Bruce)
-->
<productname>Solaris</productname>コンパイラを使用した<productname>Solaris x86_64</productname>のサポートを追加しました。(Pierre Girard, Theo
        Schlossnagle, Bruce)
      </para>
     </listitem>

     <listitem>
      <para>
<<<<<<< HEAD
       Add <application>DTrace</application> support (Robert Lor)
=======
<!--
       Add <application>DTrace</> support (Robert Lor)
-->
<application>DTrace</application>サポートを追加しました。(Robert Lor)
>>>>>>> doc_ja_10_premerge
      </para>
     </listitem>

     <listitem>
      <para>
<<<<<<< HEAD
       Add <literal>PG_VERSION_NUM</literal> for use by third-party
=======
<!--
       Add <literal>PG_VERSION_NUM</> for use by third-party
>>>>>>> doc_ja_10_premerge
       applications wanting to test the backend version in C using &gt;
       and &lt; comparisons (Bruce)
-->
サードパーティアプリケーションが、C言語で&gt;、&lt;比較を使用してバックエンドのバージョンを検査できるように<literal>PG_VERSION_NUM</literal>を追加しました。(Bruce)
      </para>
     </listitem>

     <listitem>
      <para>
<<<<<<< HEAD
       Add <literal>XLOG_BLCKSZ</literal> as independent from <literal>BLCKSZ</literal>
=======
<!--
       Add <literal>XLOG_BLCKSZ</> as independent from <literal>BLCKSZ</>
-->
<literal>BLCKSZ</literal>と独立して、<literal>XLOG_BLCKSZ</literal>を追加しました。
>>>>>>> doc_ja_10_premerge
       (Mark Wong)
      </para>
     </listitem>

     <listitem>
      <para>
<<<<<<< HEAD
       Add <literal>LWLOCK_STATS</literal> define to report locking
=======
<!--
       Add <literal>LWLOCK_STATS</> define to report locking
>>>>>>> doc_ja_10_premerge
       activity (Tom)
-->
ロック状況を報告するための<literal>LWLOCK_STATS</literal>定義を追加しました。 (Tom)
      </para>
     </listitem>

     <listitem>
      <para>
<<<<<<< HEAD
       Emit warnings for unknown <application>configure</application> options
=======
<!--
       Emit warnings for unknown <application>configure</> options
>>>>>>> doc_ja_10_premerge
       (Martijn van Oosterhout)
-->
不明な<application>configure</application>オプションに関する警告を出力します。(Martijn van Oosterhout)
      </para>
     </listitem>

     <listitem>
      <para>
<<<<<<< HEAD
       Add server support for <quote>plugin</quote> libraries
=======
<!--
       Add server support for <quote>plugin</> libraries
>>>>>>> doc_ja_10_premerge
       that can be used for add-on tasks such as debugging and performance
       measurement (Korry Douglas)
-->
デバッグや性能測定などの追加作業に使用することができる<quote>plugin</quote>ライブラリのサーバサポートを追加しました。(Korry Douglas)
      </para>

      <para>
<!--
       This consists of two features: a table of <quote>rendezvous
       variables</quote> that allows separately-loaded shared libraries to
       communicate, and a new configuration parameter <link
       linkend="guc-local-preload-libraries"><varname>local_preload_libraries</varname></link>
       that allows libraries to be loaded into specific sessions without
       explicit cooperation from the client application.  This allows
       external add-ons to implement features such as a PL/pgSQL debugger.
-->
これは2つの機能からなります。
1つは、<quote>ランデブー変数</quote>のテーブルであり、これにより別々にロードされた共有ライブラリ間で通信を行うことができます。
2つ目は、新しい<link linkend="guc-local-preload-libraries"><varname>local_preload_libraries</varname></link>設定パラメータであり、これにより、クライアントアプリケーションから明示的な協力をすることなく、ライブラリを指定したセッションにロードさせることができます。
これにより、外部アドオンがPL/pgSQLデバッガなどの機能を実装できます。
      </para>
     </listitem>

     <listitem>
      <para>
<!--
       Rename existing configuration parameter
<<<<<<< HEAD
       <varname>preload_libraries</varname> to <link
       linkend="guc-shared-preload-libraries"><varname>shared_preload_libraries</varname></link>
=======
       <varname>preload_libraries</> to <link
       linkend="guc-shared-preload-libraries"><varname>shared_preload_libraries</></link>
-->
既存の<varname>preload_libraries</varname>設定パラメータを<link
       linkend="guc-shared-preload-libraries"><varname>shared_preload_libraries</varname></link>に名前を変更しました。
>>>>>>> doc_ja_10_premerge
       (Tom)
      </para>

      <para>
<!--
       This was done for clarity in comparison to
<<<<<<< HEAD
       <varname>local_preload_libraries</varname>.
=======
       <varname>local_preload_libraries</>.
-->
これは、<varname>local_preload_libraries</varname>との違いを明確にするために行いました。
>>>>>>> doc_ja_10_premerge
      </para>
     </listitem>

     <listitem>
      <para>
<!--
       Add new configuration parameter <link
<<<<<<< HEAD
       linkend="guc-server-version-num"><varname>server_version_num</varname></link>
=======
       linkend="guc-server-version-num"><varname>server_version_num</></link>
-->
新しい<link
       linkend="guc-server-version-num"><varname>server_version_num</varname></link>設定パラメータを追加しました。
>>>>>>> doc_ja_10_premerge
       (Greg Sabino Mullane)
      </para>

      <para>
<!--
       This is like <varname>server_version</varname>, but is an
       integer, e.g.  <literal>80200</literal>. This allows applications to
       make version checks more easily.
-->
これは<varname>server_version</varname>と似ていますが、例えば<literal>80200</literal>といった整数値です。
これによりアプリケーションはバージョン検査をより簡単に行うことができます。
      </para>
     </listitem>

     <listitem>
      <para>
<!--
       Add a configuration parameter <link
<<<<<<< HEAD
       linkend="guc-seq-page-cost"><varname>seq_page_cost</varname></link>
=======
       linkend="guc-seq-page-cost"><varname>seq_page_cost</></link>
-->
<link
       linkend="guc-seq-page-cost"><varname>seq_page_cost</varname></link>設定パラメータを追加しました。
>>>>>>> doc_ja_10_premerge
       (Tom)
      </para>
     </listitem>

     <listitem>
      <para>
<!--
       Re-implement the <link linkend="regress">regression test</link> script as a C program
-->
Cプログラムとして<link linkend="regress">リグレッションテスト</link>スクリプトを再実装しました。
       (Magnus, Tom)
      </para>
     </listitem>

     <listitem>
      <para>
<!--
       Allow loadable modules to allocate shared memory and
       lightweight locks (Marc Munro)
-->
ロード可能モジュールが共有メモリと軽量ロックを割り当てできるようにしました。(Marc Munro)
      </para>
     </listitem>

     <listitem>
      <para>
<!--
       Add automatic initialization and finalization of dynamically
       loaded libraries (Ralf Engelschall, Tom)
-->
動的にロードしたライブラリの自動的な初期化処理と最終処理を追加しました。(Ralf Engelschall, Tom)
      </para>

      <para>
<!--
       New <link linkend="xfunc-c-dynload">functions</link>
       <function>_PG_init()</function> and <function>_PG_fini()</function> are
       called if the library defines such symbols.  Hence we no
       longer need to specify an initialization function in
       <varname>shared_preload_libraries</varname>; we can assume that
       the library used the <function>_PG_init()</function> convention
       instead.
-->
新しい<link linkend="xfunc-c-dynload">関数</link><function>_PG_init()</function>と<function>_PG_fini()</function>が、これらのシンボルを定義したライブラリで、呼び出されます。
したがって、<varname>shared_preload_libraries</varname>内で初期化関数を指定する必要がなくなりました。
こうしたライブラリでは代わりに<function>_PG_init()</function>規約が使用されるものと仮定することができます。
      </para>
     </listitem>

     <listitem>
      <para>
<!--
       Add <link
       linkend="xfunc-c-dynload"><literal>PG_MODULE_MAGIC</literal></link>
       header block to all shared object files (Martijn van
       Oosterhout)
-->
すべての共有オブジェクトファイルに<link
       linkend="xfunc-c-dynload"><literal>PG_MODULE_MAGIC</literal></link>ヘッダブロックを追加しました。(Martijn van
       Oosterhout)
      </para>

      <para>
<!--
       The magic block prevents version mismatches between loadable object
       files and servers.
-->
このマジックブロックは、ロード可能オブジェクトファイルとサーバとの間のバージョン不整合を防止するものです。
      </para>
     </listitem>

     <listitem>
      <para>
<!--
        Add shared library support for AIX (Laurenz Albe)
-->
AIXでの共有ライブラリサポートを追加しました。(Laurenz Albe)
      </para>
     </listitem>

     <listitem>
      <para>
<<<<<<< HEAD
       New <link linkend="datatype-xml"><acronym>XML</acronym></link>
=======
<!--
       New <link linkend="datatype-xml"><acronym>XML</></link>
>>>>>>> doc_ja_10_premerge
       documentation section (Bruce)
-->
新しい<link linkend="datatype-xml"><acronym>XML</acronym></link>文書セクションを追加しました。(Bruce)
      </para>
     </listitem>

    </itemizedlist>

   </sect3>

   <sect3>
<!--
    <title>Contrib Changes</title>
-->
    <title>Contrib における変更点</title>
    <itemizedlist>

     <listitem>
      <para>
<!--
       Major tsearch2 improvements (Oleg, Teodor)
-->
tsearch2が大きく改良されました。(Oleg, Teodor)
      </para>

      <itemizedlist>

       <listitem>
        <para>
<<<<<<< HEAD
         multibyte encoding support, including <acronym>UTF8</acronym>
=======
<!--
         multibyte encoding support, including <acronym>UTF8</>
-->
 <acronym>UTF8</acronym>を含むマルチバイト符号化方式のサポート
>>>>>>> doc_ja_10_premerge
        </para>
       </listitem>
       <listitem>
        <para>
<!--
         query rewriting support
-->
問い合わせ書き換えのサポート
        </para>
       </listitem>
       <listitem>
        <para>
<!--
         improved ranking functions
-->
ランク付け関数の改良
        </para>
       </listitem>
       <listitem>
        <para>
<!--
         thesaurus dictionary support
-->
シソーラス辞書のサポート
        </para>
       </listitem>
       <listitem>
        <para>
<<<<<<< HEAD
         Ispell dictionaries now recognize <application>MySpell</application>
         format, used by <application>OpenOffice</application>
=======
<!--
         Ispell dictionaries now recognize <application>MySpell</>
         format, used by <application>OpenOffice</>
-->
Ispell辞書が、<application>OpenOffice</application>で使用される<application>MySpell</application>書式を認識するようになりました
>>>>>>> doc_ja_10_premerge
        </para>
       </listitem>
       <listitem>
        <para>
<<<<<<< HEAD
         <acronym>GIN</acronym> support
=======
<!--
         <acronym>GIN</> support
-->
<acronym>GIN</acronym>のサポート
>>>>>>> doc_ja_10_premerge
        </para>
       </listitem>

      </itemizedlist>

     </listitem>

     <listitem>
      <para>
<<<<<<< HEAD
       Add adminpack module containing <application>Pgadmin</application> administration
=======
<!--
       Add adminpack module containing <application>Pgadmin</> administration
>>>>>>> doc_ja_10_premerge
       functions (Dave)
-->
<application>Pgadmin</application>管理関数を含むadminpackモジュールを追加しました。
      </para>

      <para>
<!--
       These functions provide additional file system access
       routines not present in the default <productname>PostgreSQL</productname>
       server.
-->
これらの関数は、デフォルトの<productname>PostgreSQL</productname>サーバには存在しない、追加のファイルシステムアクセス処理を提供します。
      </para>
     </listitem>

     <listitem>
      <para>
<!--
       Add sslinfo module (Victor Wagner)
-->
sslinfoモジュールを追加しました。(Victor Wagner)
      </para>

      <para>
<<<<<<< HEAD
       Reports information about the current connection's <acronym>SSL</acronym>
=======
<!--
       Reports information about the current connection's <acronym>SSL</>
>>>>>>> doc_ja_10_premerge
       certificate.
-->
現在の接続における<acronym>SSL</acronym>証明書に関する情報を表示します。
      </para>
     </listitem>

     <listitem>
      <para>
<!--
       Add pgrowlocks module (Tatsuo)
-->
pgrowlocksモジュールを追加しました。
      </para>

      <para>
<!--
       This shows row locking information for a specified table.
-->
これは、指定したテーブルに関する行ロック情報を表示します。
      </para>
     </listitem>

     <listitem>
      <para>
<!--
       Add hstore module (Oleg, Teodor)
-->
hstoreモジュールを追加しました。 (Oleg, Teodor)
      </para>
     </listitem>

     <listitem>
      <para>
<!--
       Add isn module, replacing isbn_issn (Jeremy Kronuz)
-->
isbn_issnを置き換えて、isnモジュールを追加しました。 (Jeremy Kronuz)
      </para>

      <para>
<<<<<<< HEAD
       This new implementation supports <acronym>EAN13</acronym>, <acronym>UPC</acronym>,
       <acronym>ISBN</acronym> (books), <acronym>ISMN</acronym> (music), and
       <acronym>ISSN</acronym> (serials).
=======
<!--
       This new implementation supports <acronym>EAN13</>, <acronym>UPC</>,
       <acronym>ISBN</> (books), <acronym>ISMN</> (music), and
       <acronym>ISSN</> (serials).
-->
この新しい実装では、<acronym>EAN13</acronym>、<acronym>UPC</acronym>、<acronym>ISBN</acronym> (書籍), <acronym>ISMN</acronym> (音楽)、<acronym>ISSN</acronym> (シリアル番号)をサポートします。
>>>>>>> doc_ja_10_premerge
      </para>
     </listitem>

     <listitem>
      <para>
<!--
       Add index information functions to pgstattuple (ITAGAKI Takahiro,
       Satoshi Nagayasu)
-->
pgstattupleにインデックス情報関数を追加しました。 (ITAGAKI Takahiro,
       Satoshi Nagayasu)
      </para>
     </listitem>

     <listitem>
      <para>
<!--
       Add pg_freespacemap module to display free space map information
-->
空き領域マップ情報を表示するpg_freespacemapを追加しました。
       (Mark Kirkwood)
      </para>
     </listitem>

     <listitem>
      <para>
<!--
       pgcrypto now has all planned functionality (Marko Kreen)
-->
pgcryptoが予定していたすべての機能を持つようになりました。(Marko Kreen)
      </para>
      <itemizedlist>
       <listitem>
        <para>
<!--
         Include iMath library in pgcrypto to have the public-key encryption
         functions always available.
-->
公開キー暗号関数が常に利用できるようにiMathライブラリをpgcryptoに含めました。
        </para>
       </listitem>
       <listitem>
        <para>
<!--
         Add SHA224 algorithm that was missing in OpenBSD code.
-->
OpenBSD用のコードで存在しなかったSHA224アルゴリズムを追加しました。
        </para>
       </listitem>
       <listitem>
        <para>
<!--
         Activate builtin code for SHA224/256/384/512 hashes on older
         OpenSSL to have those algorithms always available.
-->
古めのOpenSSLにおけるSHA224/256/384/512ハッシュ用の組み込みコードを有効化し、常にこれらのアルゴリズムが利用できるようになりました。
        </para>
       </listitem>
       <listitem>
        <para>
<!--
         New function gen_random_bytes() that returns cryptographically strong
         randomness.  Useful for generating encryption keys.
-->
暗号化に使用される乱数の強度を返すgen_random_bytes()関数を追加しました。
暗号化キーの生成に便利です。
        </para>
       </listitem>
       <listitem>
        <para>
<!--
         Remove digest_exists(), hmac_exists() and cipher_exists() functions.
-->
digest_exists()、hmac_exists()、cipher_exists()関数を削除しました。
        </para>
       </listitem>
      </itemizedlist>
     </listitem>

     <listitem>
      <para>
<!--
       Improvements to cube module (Joshua Reich)
-->
cubeモジュールを改良しました。(Joshua Reich)
      </para>

      <para>
<<<<<<< HEAD
       New functions are <function>cube(float[])</function>,
       <function>cube(float[], float[])</function>, and
       <function>cube_subset(cube, int4[])</function>.
=======
<!--
       New functions are <function>cube(float[])</>,
       <function>cube(float[], float[])</>, and
       <function>cube_subset(cube, int4[])</>.
-->
<function>cube(float[])</function>、<function>cube(float[], float[])</function>、<function>cube_subset(cube, int4[])</function>関数を追加しました。
>>>>>>> doc_ja_10_premerge
      </para>
     </listitem>

     <listitem>
      <para>
<!--
       Add async query capability to dblink (Kai Londenberg,
       Joe Conway)
-->
dblinkに非同期問い合わせ機能を追加しました。(Kai Londenberg,
       Joe Conway)
      </para>
     </listitem>

     <listitem>
      <para>
<<<<<<< HEAD
       New operators for array-subset comparisons (<literal>@&gt;</literal>,
       <literal>&lt;@</literal>, <literal>&amp;&amp;</literal>) (Tom)
=======
<!--
       New operators for array-subset comparisons (<literal>@&gt;</>,
       <literal>&lt;@</>, <literal>&amp;&amp;</>) (Tom)
-->
部分配列比較用に新しい演算子（<literal>@&gt;</literal>、<literal>&lt;@</literal>、<literal>&amp;&amp;</literal>）を追加しました。(Tom)
>>>>>>> doc_ja_10_premerge
      </para>

      <para>
<!--
       Various contrib packages already had these operators for their
       datatypes, but the naming wasn't consistent.  We have now added
       consistently named array-subset comparison operators to the core code
       and all the contrib packages that have such functionality.
       (The old names remain available, but are deprecated.)
-->
各種contribパッケージで、独自のデータ型用に既にこれらの演算子を持っていましたが、命名に一貫性がありませんでした。
コアコードと、こうした機能を持つcontribパッケージすべてに、一貫性を持った名前の部分配列の比較演算子を追加しました。
(古い名前も利用可能ですが、廃止予定です。)
      </para>
     </listitem>

     <listitem>
      <para>
<!--
       Add uninstall scripts for all contrib packages that have install
       scripts (David, Josh Drake)
-->
インストールスクリプトを持つすべてのcontribパッケージに対してアンインストール用のスクリプトを追加しました。(David, Josh Drake)
      </para>
     </listitem>

    </itemizedlist>

   </sect3>

  </sect2>
 </sect1>
